/*
* generated by Xtext
*/
package at.bestsolution.efxclipse.tooling.decora.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import at.bestsolution.efxclipse.tooling.decora.services.DecoraDslGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class DecoraDslParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private DecoraDslGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_selection_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule field_selection ****************
 *
 * //Model:
 * //	expr=translation_unit
 * ////	greetings+=Greeting*
 * //;
 * // returns [String fields]
 * field_selection:
 * 	r= // { $fields = $r.text; }
 * 	RGBA_FIELDS | x= // { $fields = $x.text; }
 * 	XYZW_FIELDS;
 *
 **/

// r= // { $fields = $r.text; }
// RGBA_FIELDS | x= // { $fields = $x.text; }
// XYZW_FIELDS
protected class Field_selection_Alternatives extends AlternativesToken {

	public Field_selection_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getField_selectionAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_selection_RAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Field_selection_XAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getField_selectionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// r= // { $fields = $r.text; }
// RGBA_FIELDS
protected class Field_selection_RAssignment_0 extends AssignmentToken  {
	
	public Field_selection_RAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getField_selectionAccess().getRAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("r",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("r");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getField_selectionAccess().getRRGBA_FIELDSParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getField_selectionAccess().getRRGBA_FIELDSParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// x= // { $fields = $x.text; }
// XYZW_FIELDS
protected class Field_selection_XAssignment_1 extends AssignmentToken  {
	
	public Field_selection_XAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getField_selectionAccess().getXAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getField_selectionAccess().getXXYZW_FIELDSTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getField_selectionAccess().getXXYZW_FIELDSTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule field_selection ****************/





}
