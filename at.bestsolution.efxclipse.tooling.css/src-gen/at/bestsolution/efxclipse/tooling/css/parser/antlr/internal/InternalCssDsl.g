/*
* generated by Xtext
*/
grammar InternalCssDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package at.bestsolution.efxclipse.tooling.css.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.bestsolution.efxclipse.tooling.css.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.bestsolution.efxclipse.tooling.css.services.CssDslGrammarAccess;

}

@parser::members {

 	private CssDslGrammarAccess grammarAccess;
 	
    public InternalCssDslParser(TokenStream input, CssDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "stylesheet";	
   	}
   	
   	@Override
   	protected CssDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulestylesheet
entryRulestylesheet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStylesheetRule()); }
	 iv_rulestylesheet=rulestylesheet 
	 { $current=$iv_rulestylesheet.current; } 
	 EOF 
;

// Rule stylesheet
rulestylesheet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getCharsetCharsetParserRuleCall_0_0()); 
	    }
		lv_charset_0_0=rulecharset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		set(
       			$current, 
       			"charset",
        		lv_charset_0_0, 
        		"charset");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getImportsImportExpressionParserRuleCall_1_0()); 
	    }
		lv_imports_1_0=ruleimportExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_1_0, 
        		"importExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_2_0_0()); 
	    }
		lv_ruleset_2_0=ruleruleset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		add(
       			$current, 
       			"ruleset",
        		lv_ruleset_2_0, 
        		"ruleset");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getMediaMediaParserRuleCall_2_1_0()); 
	    }
		lv_media_3_0=rulemedia		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		add(
       			$current, 
       			"media",
        		lv_media_3_0, 
        		"media");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getPagePageParserRuleCall_2_2_0()); 
	    }
		lv_page_4_0=rulepage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		add(
       			$current, 
       			"page",
        		lv_page_4_0, 
        		"page");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulecharset
entryRulecharset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharsetRule()); }
	 iv_rulecharset=rulecharset 
	 { $current=$iv_rulecharset.current; } 
	 EOF 
;

// Rule charset
rulecharset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@charset' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCharsetAccess().getCharsetKeyword_0_0());
    }

    |	otherlv_1='@CHARSET' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCharsetAccess().getCHARSETKeyword_0_1());
    }
)(
(
		lv_charset_2_0=RULE_STRING
		{
			newLeafNode(lv_charset_2_0, grammarAccess.getCharsetAccess().getCharsetSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharsetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"charset",
        		lv_charset_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCharsetAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleimportExpression
entryRuleimportExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportExpressionRule()); }
	 iv_ruleimportExpression=ruleimportExpression 
	 { $current=$iv_ruleimportExpression.current; } 
	 EOF 
;

// Rule importExpression
ruleimportExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='@import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportExpressionAccess().getImportKeyword_0_0_0());
    }

    |	otherlv_1='@IMPORT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImportExpressionAccess().getIMPORTKeyword_0_0_1());
    }
)(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getImportExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getImportExpressionAccess().getURLTypeParserRuleCall_1_0()); 
    }
    this_URLType_3=ruleURLType
    { 
        $current = $this_URLType_3.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportExpressionAccess().getMediaListMedia_listParserRuleCall_1_1_0()); 
	    }
		lv_mediaList_4_0=rulemedia_list		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportExpressionRule());
	        }
       		set(
       			$current, 
       			"mediaList",
        		lv_mediaList_4_0, 
        		"media_list");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getImportExpressionAccess().getSemicolonKeyword_1_2());
    }
))
;





// Entry rule entryRulepage
entryRulepage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageRule()); }
	 iv_rulepage=rulepage 
	 { $current=$iv_rulepage.current; } 
	 EOF 
;

// Rule page
rulepage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPageAccess().getPageAction_0(),
            $current);
    }
)(	otherlv_1='@page' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPageAccess().getPageKeyword_1_0());
    }

    |	otherlv_2='@PAGE' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPageAccess().getPAGEKeyword_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPageAccess().getPseudoPagePseudo_pageParserRuleCall_2_0()); 
	    }
		lv_pseudoPage_3_0=rulepseudo_page		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageRule());
	        }
       		set(
       			$current, 
       			"pseudoPage",
        		lv_pseudoPage_3_0, 
        		"pseudo_page");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_4_0()); 
	    }
		lv_declarations_5_0=rulecss_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_5_0, 
        		"css_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPageAccess().getSemicolonKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_5_1_0()); 
	    }
		lv_declarations_7_0=rulecss_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_7_0, 
        		"css_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPageAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRulepseudo_page
entryRulepseudo_page returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPseudo_pageRule()); } 
	 iv_rulepseudo_page=rulepseudo_page 
	 { $current=$iv_rulepseudo_page.current.getText(); }  
	 EOF 
;

// Rule pseudo_page
rulepseudo_page returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPseudo_pageAccess().getColonKeyword_0()); 
    }
    this_IDENT_1=RULE_IDENT    {
		$current.merge(this_IDENT_1);
    }

    { 
    newLeafNode(this_IDENT_1, grammarAccess.getPseudo_pageAccess().getIDENTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRulemedia
entryRulemedia returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMediaRule()); }
	 iv_rulemedia=rulemedia 
	 { $current=$iv_rulemedia.current; } 
	 EOF 
;

// Rule media
rulemedia returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@media' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMediaAccess().getMediaKeyword_0_0());
    }

    |	otherlv_1='@MEDIA' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMediaAccess().getMEDIAKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaAccess().getMedialistMedia_listParserRuleCall_1_0()); 
	    }
		lv_medialist_2_0=rulemedia_list		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaRule());
	        }
       		set(
       			$current, 
       			"medialist",
        		lv_medialist_2_0, 
        		"media_list");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaAccess().getRulesetsRulesetParserRuleCall_3_0()); 
	    }
		lv_rulesets_4_0=ruleruleset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaRule());
	        }
       		add(
       			$current, 
       			"rulesets",
        		lv_rulesets_4_0, 
        		"ruleset");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulemedia_list
entryRulemedia_list returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMedia_listRule()); } 
	 iv_rulemedia_list=rulemedia_list 
	 { $current=$iv_rulemedia_list.current.getText(); }  
	 EOF 
;

// Rule media_list
rulemedia_list returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_0()); 
    }
    this_medium_0=rulemedium    {
		$current.merge(this_medium_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(    this_COMMA_1=RULE_COMMA    {
		$current.merge(this_COMMA_1);
    }

    { 
    newLeafNode(this_COMMA_1, grammarAccess.getMedia_listAccess().getCOMMATerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_1_1()); 
    }
    this_medium_2=rulemedium    {
		$current.merge(this_medium_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRulemedium
entryRulemedium returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMediumRule()); } 
	 iv_rulemedium=rulemedium 
	 { $current=$iv_rulemedium.current.getText(); }  
	 EOF 
;

// Rule medium
rulemedium returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_IDENT_0=RULE_IDENT    {
		$current.merge(this_IDENT_0);
    }

    { 
    newLeafNode(this_IDENT_0, grammarAccess.getMediumAccess().getIDENTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleruleset
entryRuleruleset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRulesetRule()); }
	 iv_ruleruleset=ruleruleset 
	 { $current=$iv_ruleruleset.current; } 
	 EOF 
;

// Rule ruleset
ruleruleset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); 
	    }
		lv_selectors_0_0=ruleselector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRulesetRule());
	        }
       		add(
       			$current, 
       			"selectors",
        		lv_selectors_0_0, 
        		"selector");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_1_0()); 
	    }
		lv_selectors_2_0=ruleselector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRulesetRule());
	        }
       		add(
       			$current, 
       			"selectors",
        		lv_selectors_2_0, 
        		"selector");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getRulesetAccess().getWSTerminalRuleCall_2()); 
    }
)*	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_4_0_0()); 
	    }
		lv_declarations_5_0=rulecss_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRulesetRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_5_0, 
        		"css_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRulesetAccess().getSemicolonKeyword_4_1());
    }
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleselector
entryRuleselector returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	 iv_ruleselector=ruleselector 
	 { $current=$iv_ruleselector.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule selector
ruleselector returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectorAccess().getSimpleselectorsSimple_selectorParserRuleCall_0_0()); 
	    }
		lv_simpleselectors_0_0=rulesimple_selector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectorRule());
	        }
       		add(
       			$current, 
       			"simpleselectors",
        		lv_simpleselectors_0_0, 
        		"simple_selector");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); 
	    }
		lv_combinator_1_0=rulecombinator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectorRule());
	        }
       		set(
       			$current, 
       			"combinator",
        		lv_combinator_1_0, 
        		"combinator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_1_0()); 
	    }
		lv_selector_2_0=ruleselector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectorRule());
	        }
       		set(
       			$current, 
       			"selector",
        		lv_selector_2_0, 
        		"selector");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((this_WS_3=RULE_WS
    { 
    newLeafNode(this_WS_3, grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0()); 
	    }
		lv_combinator_4_0=rulecombinator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectorRule());
	        }
       		set(
       			$current, 
       			"combinator",
        		lv_combinator_4_0, 
        		"combinator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_2_0()); 
	    }
		lv_selector_5_0=ruleselector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectorRule());
	        }
       		set(
       			$current, 
       			"selector",
        		lv_selector_5_0, 
        		"selector");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulesimple_selector
entryRulesimple_selector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimple_selectorRule()); }
	 iv_rulesimple_selector=rulesimple_selector 
	 { $current=$iv_rulesimple_selector.current; } 
	 EOF 
;

// Rule simple_selector
rulesimple_selector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		{ 
	        newCompositeNode(grammarAccess.getSimple_selectorAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); 
	    }
		lv_element_0_0=ruleElementSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimple_selectorRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_0, 
        		"ElementSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimple_selectorAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); 
	    }
		lv_universal_1_0=ruleUniversalSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimple_selectorRule());
	        }
       		set(
       			$current, 
       			"universal",
        		lv_universal_1_0, 
        		"UniversalSelector");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSimple_selectorAccess().getSubSelectorsSubSelectorParserRuleCall_0_1_0()); 
	    }
		lv_subSelectors_2_0=ruleSubSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimple_selectorRule());
	        }
       		add(
       			$current, 
       			"subSelectors",
        		lv_subSelectors_2_0, 
        		"SubSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimple_selectorAccess().getSubSelectorsSubSelectorParserRuleCall_1_0()); 
	    }
		lv_subSelectors_3_0=ruleSubSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimple_selectorRule());
	        }
       		add(
       			$current, 
       			"subSelectors",
        		lv_subSelectors_3_0, 
        		"SubSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleSubSelector
entryRuleSubSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubSelectorRule()); }
	 iv_ruleSubSelector=ruleSubSelector 
	 { $current=$iv_ruleSubSelector.current; } 
	 EOF 
;

// Rule SubSelector
ruleSubSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubSelectorAccess().getIdSelectorParserRuleCall_0()); 
    }
    this_IdSelector_0=ruleIdSelector
    { 
        $current = $this_IdSelector_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubSelectorAccess().getClassSelectorParserRuleCall_1()); 
    }
    this_ClassSelector_1=ruleClassSelector
    { 
        $current = $this_ClassSelector_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubSelectorAccess().getAttributeSelectorParserRuleCall_2()); 
    }
    this_AttributeSelector_2=ruleAttributeSelector
    { 
        $current = $this_AttributeSelector_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubSelectorAccess().getPseudoClassParserRuleCall_3()); 
    }
    this_PseudoClass_3=rulePseudoClass
    { 
        $current = $this_PseudoClass_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttributeSelector
entryRuleAttributeSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeSelectorRule()); }
	 iv_ruleAttributeSelector=ruleAttributeSelector 
	 { $current=$iv_ruleAttributeSelector.current; } 
	 EOF 
;

// Rule AttributeSelector
ruleAttributeSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeSelectorAccess().getAttributeSelectorAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_name_2_0=RULE_IDENT
		{
			newLeafNode(lv_name_2_0, grammarAccess.getAttributeSelectorAccess().getNameIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"IDENT");
	    }

)
)((
(
(
		lv_op_3_1=	'^=' 
    {
        newLeafNode(lv_op_3_1, grammarAccess.getAttributeSelectorAccess().getOpCircumflexAccentEqualsSignKeyword_3_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_1, null);
	    }

    |		lv_op_3_2=	'$=' 
    {
        newLeafNode(lv_op_3_2, grammarAccess.getAttributeSelectorAccess().getOpDollarSignEqualsSignKeyword_3_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_2, null);
	    }

    |		lv_op_3_3=	'*=' 
    {
        newLeafNode(lv_op_3_3, grammarAccess.getAttributeSelectorAccess().getOpAsteriskEqualsSignKeyword_3_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_3, null);
	    }

    |		lv_op_3_4=	'=' 
    {
        newLeafNode(lv_op_3_4, grammarAccess.getAttributeSelectorAccess().getOpEqualsSignKeyword_3_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_4, null);
	    }

    |		lv_op_3_5=RULE_INCLUDES
		{
			newLeafNode(lv_op_3_5, grammarAccess.getAttributeSelectorAccess().getOpINCLUDESTerminalRuleCall_3_0_0_4()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_5, 
        		"INCLUDES");
	    }

    |		lv_op_3_6=RULE_DASHMATCH
		{
			newLeafNode(lv_op_3_6, grammarAccess.getAttributeSelectorAccess().getOpDASHMATCHTerminalRuleCall_3_0_0_5()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_3_6, 
        		"DASHMATCH");
	    }

)

)
)(
(
(
		lv_value_4_1=RULE_IDENT
		{
			newLeafNode(lv_value_4_1, grammarAccess.getAttributeSelectorAccess().getValueIDENTTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_4_1, 
        		"IDENT");
	    }

    |		lv_value_4_2=RULE_STRING
		{
			newLeafNode(lv_value_4_2, grammarAccess.getAttributeSelectorAccess().getValueSTRINGTerminalRuleCall_3_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_4_2, 
        		"STRING");
	    }

)

)
))?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleClassSelector
entryRuleClassSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassSelectorRule()); }
	 iv_ruleClassSelector=ruleClassSelector 
	 { $current=$iv_ruleClassSelector.current; } 
	 EOF 
;

// Rule ClassSelector
ruleClassSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getClassSelectorAccess().getClassSelectorAction_0(),
            $current);
    }
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassSelectorAccess().getFullStopKeyword_1());
    }
(
(
		lv_name_2_0=RULE_IDENT
		{
			newLeafNode(lv_name_2_0, grammarAccess.getClassSelectorAccess().getNameIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"IDENT");
	    }

)
))
;





// Entry rule entryRuleElementSelector
entryRuleElementSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementSelectorRule()); }
	 iv_ruleElementSelector=ruleElementSelector 
	 { $current=$iv_ruleElementSelector.current; } 
	 EOF 
;

// Rule ElementSelector
ruleElementSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getElementSelectorAccess().getElementSelectorAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_IDENT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getElementSelectorAccess().getNameIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getElementSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENT");
	    }

)
))
;





// Entry rule entryRuleUniversalSelector
entryRuleUniversalSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUniversalSelectorRule()); }
	 iv_ruleUniversalSelector=ruleUniversalSelector 
	 { $current=$iv_ruleUniversalSelector.current; } 
	 EOF 
;

// Rule UniversalSelector
ruleUniversalSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUniversalSelectorAccess().getNamespeceCss_namespace_prefixParserRuleCall_1_0()); 
	    }
		lv_namespece_1_0=rulecss_namespace_prefix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUniversalSelectorRule());
	        }
       		set(
       			$current, 
       			"namespece",
        		lv_namespece_1_0, 
        		"css_namespace_prefix");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2());
    }
)
;





// Entry rule entryRuleIdSelector
entryRuleIdSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdSelectorRule()); }
	 iv_ruleIdSelector=ruleIdSelector 
	 { $current=$iv_ruleIdSelector.current; } 
	 EOF 
;

// Rule IdSelector
ruleIdSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIdSelectorAccess().getIdSelectorAction_0(),
            $current);
    }
)this_HASHMARK_1=RULE_HASHMARK
    { 
    newLeafNode(this_HASHMARK_1, grammarAccess.getIdSelectorAccess().getHASHMARKTerminalRuleCall_1()); 
    }
(
(
		lv_name_2_0=RULE_IDENT
		{
			newLeafNode(lv_name_2_0, grammarAccess.getIdSelectorAccess().getNameIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"IDENT");
	    }

)
))
;





// Entry rule entryRulecss_namespace_prefix
entryRulecss_namespace_prefix returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCss_namespace_prefixRule()); } 
	 iv_rulecss_namespace_prefix=rulecss_namespace_prefix 
	 { $current=$iv_rulecss_namespace_prefix.current.getText(); }  
	 EOF 
;

// Rule css_namespace_prefix
rulecss_namespace_prefix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_IDENT_0=RULE_IDENT    {
		$current.merge(this_IDENT_0);
    }

    { 
    newLeafNode(this_IDENT_0, grammarAccess.getCss_namespace_prefixAccess().getIDENTTerminalRuleCall_0_0()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCss_namespace_prefixAccess().getAsteriskKeyword_0_1()); 
    }
)?
	kw='|' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCss_namespace_prefixAccess().getVerticalLineKeyword_1()); 
    }
)
    ;





// Entry rule entryRulecss_declaration
entryRulecss_declaration returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getCss_declarationRule()); }
	 iv_rulecss_declaration=rulecss_declaration 
	 { $current=$iv_rulecss_declaration.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule css_declaration
rulecss_declaration returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_0()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCss_declarationAccess().getPropertyCss_propertyParserRuleCall_1_0()); 
	    }
		lv_property_1_0=rulecss_property		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCss_declarationRule());
	        }
       		set(
       			$current, 
       			"property",
        		lv_property_1_0, 
        		"css_property");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_2()); 
    }
)*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCss_declarationAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCss_declarationAccess().getValueTokensCssTokParserRuleCall_4_0()); 
	    }
		lv_valueTokens_4_0=ruleCssTok		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCss_declarationRule());
	        }
       		add(
       			$current, 
       			"valueTokens",
        		lv_valueTokens_4_0, 
        		"CssTok");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		lv_important_5_0=RULE_IMPORTANT_SYM
		{
			newLeafNode(lv_important_5_0, grammarAccess.getCss_declarationAccess().getImportantIMPORTANT_SYMTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCss_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"important",
        		true, 
        		"IMPORTANT_SYM");
	    }

)
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulecss_property
entryRulecss_property returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCss_propertyRule()); }
	 iv_rulecss_property=rulecss_property 
	 { $current=$iv_rulecss_property.current; } 
	 EOF 
;

// Rule css_property
rulecss_property returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCss_propertyAccess().getCss_propertyAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCss_propertyAccess().getNameValidPropertyIdentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidPropertyIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCss_propertyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidPropertyIdent");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValidPropertyIdent
entryRuleValidPropertyIdent returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidPropertyIdentRule()); } 
	 iv_ruleValidPropertyIdent=ruleValidPropertyIdent 
	 { $current=$iv_ruleValidPropertyIdent.current.getText(); }  
	 EOF 
;

// Rule ValidPropertyIdent
ruleValidPropertyIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getValidPropertyIdentAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_IDENT_1=RULE_IDENT    {
		$current.merge(this_IDENT_1);
    }

    { 
    newLeafNode(this_IDENT_1, grammarAccess.getValidPropertyIdentAccess().getIDENTTerminalRuleCall_1()); 
    }
)
    ;







// Entry rule entryRulePseudoClass
entryRulePseudoClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPseudoClassRule()); }
	 iv_rulePseudoClass=rulePseudoClass 
	 { $current=$iv_rulePseudoClass.current; } 
	 EOF 
;

// Rule PseudoClass
rulePseudoClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPseudoClassAccess().getColonKeyword_0_0());
    }
(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPseudoClassAccess().getColonKeyword_0_1());
    }
)?
    { 
        newCompositeNode(grammarAccess.getPseudoClassAccess().getPseudoClassNameParserRuleCall_0_2()); 
    }
    this_PseudoClassName_2=rulePseudoClassName
    { 
        $current = $this_PseudoClassName_2.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getPseudoClassAccess().getPseudoClassFunctionParserRuleCall_1()); 
    }
    this_PseudoClassFunction_3=rulePseudoClassFunction
    { 
        $current = $this_PseudoClassFunction_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePseudoClassName
entryRulePseudoClassName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPseudoClassNameRule()); }
	 iv_rulePseudoClassName=rulePseudoClassName 
	 { $current=$iv_rulePseudoClassName.current; } 
	 EOF 
;

// Rule PseudoClassName
rulePseudoClassName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPseudoClassNameAccess().getNameIDENTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoClassNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)
;





// Entry rule entryRulePseudoClassFunction
entryRulePseudoClassFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPseudoClassFunctionRule()); }
	 iv_rulePseudoClassFunction=rulePseudoClassFunction 
	 { $current=$iv_rulePseudoClassFunction.current; } 
	 EOF 
;

// Rule PseudoClassFunction
rulePseudoClassFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPseudoClassFunctionAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoClassFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPseudoClassFunctionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPseudoClassFunctionAccess().getParamsCssTokParserRuleCall_2_0()); 
	    }
		lv_params_2_0=ruleCssTok		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPseudoClassFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_2_0, 
        		"CssTok");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRulecombinator
entryRulecombinator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCombinatorRule()); } 
	 iv_rulecombinator=rulecombinator 
	 { $current=$iv_rulecombinator.current.getText(); }  
	 EOF 
;

// Rule combinator
rulecombinator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCombinatorAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_0_1()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCombinatorAccess().getTildeKeyword_0_2()); 
    }
)(    this_WS_3=RULE_WS    {
		$current.merge(this_WS_3);
    }

    { 
    newLeafNode(this_WS_3, grammarAccess.getCombinatorAccess().getWSTerminalRuleCall_1()); 
    }
)*)
    ;







// Entry rule entryRuleunary_operator
entryRuleunary_operator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnary_operatorRule()); } 
	 iv_ruleunary_operator=ruleunary_operator 
	 { $current=$iv_ruleunary_operator.current.getText(); }  
	 EOF 
;

// Rule unary_operator
ruleunary_operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_0()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleSymbolTok
entryRuleSymbolTok returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSymbolTokRule()); }
	 iv_ruleSymbolTok=ruleSymbolTok 
	 { $current=$iv_ruleSymbolTok.current; } 
	 EOF 
;

// Rule SymbolTok
ruleSymbolTok returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSymbolTokAccess().getSymbolTokAction_0(),
            $current);
    }
)(
(
(
		lv_symbol_1_1=RULE_COMMA
		{
			newLeafNode(lv_symbol_1_1, grammarAccess.getSymbolTokAccess().getSymbolCOMMATerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbolTokRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"symbol",
        		lv_symbol_1_1, 
        		"COMMA");
	    }

    |		lv_symbol_1_2=RULE_PERCENT
		{
			newLeafNode(lv_symbol_1_2, grammarAccess.getSymbolTokAccess().getSymbolPERCENTTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbolTokRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"symbol",
        		lv_symbol_1_2, 
        		"PERCENT");
	    }

)

)
))
;





// Entry rule entryRuleWSTok
entryRuleWSTok returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWSTokRule()); }
	 iv_ruleWSTok=ruleWSTok 
	 { $current=$iv_ruleWSTok.current; } 
	 EOF 
;

// Rule WSTok
ruleWSTok returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWSTokAccess().getWSTokAction_0(),
            $current);
    }
)this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getWSTokAccess().getWSTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleStringTok
entryRuleStringTok returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringTokRule()); }
	 iv_ruleStringTok=ruleStringTok 
	 { $current=$iv_ruleStringTok.current; } 
	 EOF 
;

// Rule StringTok
ruleStringTok returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringTokAccess().getStringTokAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getStringTokAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringTokRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFuncTok
entryRuleFuncTok returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuncTokRule()); }
	 iv_ruleFuncTok=ruleFuncTok 
	 { $current=$iv_ruleFuncTok.current; } 
	 EOF 
;

// Rule FuncTok
ruleFuncTok returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFuncTokAccess().getFuncTokAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuncTokAccess().getFuncFunctionParserRuleCall_1_0()); 
	    }
		lv_func_1_0=rulefunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuncTokRule());
	        }
       		set(
       			$current, 
       			"func",
        		lv_func_1_0, 
        		"function");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumberTok
entryRuleNumberTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberTokRule()); }
	 iv_ruleNumberTok=ruleNumberTok 
	 { $current=$iv_ruleNumberTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NumberTok
ruleNumberTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNumberTokAccess().getNumberTokAction_0(),
            $current);
    }
)(
(
		lv_num_1_0=RULE_INTEGER
		{
			newLeafNode(lv_num_1_0, grammarAccess.getNumberTokAccess().getNumINTEGERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberTokRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"num",
        		lv_num_1_0, 
        		"INTEGER");
	    }

)
)((
(
RULE_IDENT

)
)=>
(
		lv_unit_2_0=RULE_IDENT
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getNumberTokAccess().getUnitIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberTokRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"IDENT");
	    }

)
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIdentifierTok
entryRuleIdentifierTok returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierTokRule()); }
	 iv_ruleIdentifierTok=ruleIdentifierTok 
	 { $current=$iv_ruleIdentifierTok.current; } 
	 EOF 
;

// Rule IdentifierTok
ruleIdentifierTok returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIdentifierTokAccess().getIdentifierTokAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIdentifierTokAccess().getIdValidPropertyIdentParserRuleCall_1_0()); 
	    }
		lv_id_1_0=ruleValidPropertyIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIdentifierTokRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ValidPropertyIdent");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUrlTok
entryRuleUrlTok returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUrlTokRule()); }
	 iv_ruleUrlTok=ruleUrlTok 
	 { $current=$iv_ruleUrlTok.current; } 
	 EOF 
;

// Rule UrlTok
ruleUrlTok returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUrlTokAccess().getUrlTokAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUrlTokAccess().getUrlURLTypeParserRuleCall_1_0()); 
	    }
		lv_url_1_0=ruleURLType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUrlTokRule());
	        }
       		set(
       			$current, 
       			"url",
        		lv_url_1_0, 
        		"URLType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleColorTok
entryRuleColorTok returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorTokRule()); }
	 iv_ruleColorTok=ruleColorTok 
	 { $current=$iv_ruleColorTok.current; } 
	 EOF 
;

// Rule ColorTok
ruleColorTok returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getColorTokAccess().getColorTokAction_0(),
            $current);
    }
)this_HASHMARK_1=RULE_HASHMARK
    { 
    newLeafNode(this_HASHMARK_1, grammarAccess.getColorTokAccess().getHASHMARKTerminalRuleCall_1()); 
    }
(
(
(
		lv_color_2_1=RULE_HEX
		{
			newLeafNode(lv_color_2_1, grammarAccess.getColorTokAccess().getColorHEXTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorTokRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"color",
        		lv_color_2_1, 
        		"HEX");
	    }

    |		lv_color_2_2=RULE_IDENT
		{
			newLeafNode(lv_color_2_2, grammarAccess.getColorTokAccess().getColorIDENTTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorTokRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"color",
        		lv_color_2_2, 
        		"IDENT");
	    }

)

)
))
;





// Entry rule entryRuleCssTok
entryRuleCssTok returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getCssTokRule()); }
	 iv_ruleCssTok=ruleCssTok 
	 { $current=$iv_ruleCssTok.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CssTok
ruleCssTok returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCssTokAccess().getSymbolTokParserRuleCall_0()); 
    }
    this_SymbolTok_0=ruleSymbolTok
    { 
        $current = $this_SymbolTok_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCssTokAccess().getWSTokParserRuleCall_1()); 
    }
    this_WSTok_1=ruleWSTok
    { 
        $current = $this_WSTok_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCssTokAccess().getStringTokParserRuleCall_2()); 
    }
    this_StringTok_2=ruleStringTok
    { 
        $current = $this_StringTok_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCssTokAccess().getFuncTokParserRuleCall_3()); 
    }
    this_FuncTok_3=ruleFuncTok
    { 
        $current = $this_FuncTok_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCssTokAccess().getNumberTokParserRuleCall_4()); 
    }
    this_NumberTok_4=ruleNumberTok
    { 
        $current = $this_NumberTok_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCssTokAccess().getIdentifierTokParserRuleCall_5()); 
    }
    this_IdentifierTok_5=ruleIdentifierTok
    { 
        $current = $this_IdentifierTok_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCssTokAccess().getUrlTokParserRuleCall_6()); 
    }
    this_UrlTok_6=ruleUrlTok
    { 
        $current = $this_UrlTok_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCssTokAccess().getColorTokParserRuleCall_7()); 
    }
    this_ColorTok_7=ruleColorTok
    { 
        $current = $this_ColorTok_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRulefunction
entryRulefunction returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_rulefunction=rulefunction 
	 { $current=$iv_rulefunction.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule function
rulefunction returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((	otherlv_0='-' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getHyphenMinusKeyword_0());
    }
)?(
(
		lv_name_1_0=RULE_IDENT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENT");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getParamsCssTokParserRuleCall_3_0()); 
	    }
		lv_params_3_0=ruleCssTok		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"CssTok");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleURLType
entryRuleURLType returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getURLTypeRule()); }
	 iv_ruleURLType=ruleURLType 
	 { $current=$iv_ruleURLType.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule URLType
ruleURLType returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(	otherlv_0='url' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getURLTypeAccess().getUrlKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getURLTypeAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_url_2_0=RULE_STRING
		{
			newLeafNode(lv_url_2_0, grammarAccess.getURLTypeAccess().getUrlSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_3());
    }
)
;
finally {
	myHiddenTokenState.restore();
}







RULE_IMPORTANT_SYM : '!important';

RULE_INTEGER : ('0'..'9')+;

RULE_REAL : ('0'..'9')* '.' ('0'..'9')+;

RULE_HASHMARK : '#';

RULE_IDENT : ('_'|'a'..'z'|'A'..'Z') ('_'|'-'|'a'..'z'|'A'..'Z'|'0'..'9')*;

RULE_HEX : ('a'..'z'|'A'..'Z'|'0'..'9')+;

RULE_COMMA : ',';

RULE_PERCENT : '%';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_INCLUDES : '~=';

RULE_DASHMATCH : '|=';


