/*
* generated by Xtext
*/

package at.bestsolution.efxclipse.tooling.css.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class CssDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class StylesheetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "stylesheet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cRulesetAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cRulesetRulesetParserRuleCall_0_0 = (RuleCall)cRulesetAssignment_0.eContents().get(0);
		private final Assignment cMediaAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cMediaMediaParserRuleCall_1_0 = (RuleCall)cMediaAssignment_1.eContents().get(0);
		
		//stylesheet:
		//	(ruleset+=ruleset | media+=media)*;
		public ParserRule getRule() { return rule; }

		//(ruleset+=ruleset | media+=media)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//ruleset+=ruleset
		public Assignment getRulesetAssignment_0() { return cRulesetAssignment_0; }

		//ruleset
		public RuleCall getRulesetRulesetParserRuleCall_0_0() { return cRulesetRulesetParserRuleCall_0_0; }

		//media+=media
		public Assignment getMediaAssignment_1() { return cMediaAssignment_1; }

		//media
		public RuleCall getMediaMediaParserRuleCall_1_0() { return cMediaMediaParserRuleCall_1_0; }
	}

	public class MediaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "media");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMediaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cMedialistAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMedialistMedia_listParserRuleCall_2_0 = (RuleCall)cMedialistAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cRulesetsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRulesetsRulesetParserRuleCall_5_0 = (RuleCall)cRulesetsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cWSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//media:
		//	"media" WS* medialist=media_list "{" WS* rulesets+=ruleset* "}" WS*;
		public ParserRule getRule() { return rule; }

		//"media" WS* medialist=media_list "{" WS* rulesets+=ruleset* "}" WS*
		public Group getGroup() { return cGroup; }

		//"media"
		public Keyword getMediaKeyword_0() { return cMediaKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//medialist=media_list
		public Assignment getMedialistAssignment_2() { return cMedialistAssignment_2; }

		//media_list
		public RuleCall getMedialistMedia_listParserRuleCall_2_0() { return cMedialistMedia_listParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//rulesets+=ruleset*
		public Assignment getRulesetsAssignment_5() { return cRulesetsAssignment_5; }

		//ruleset
		public RuleCall getRulesetsRulesetParserRuleCall_5_0() { return cRulesetsRulesetParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//WS*
		public RuleCall getWSTerminalRuleCall_7() { return cWSTerminalRuleCall_7; }
	}

	public class Media_listElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "media_list");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMediumParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOMMATerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cMediumParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//media_list:
		//	medium (COMMA WS* medium)*;
		public ParserRule getRule() { return rule; }

		//medium (COMMA WS* medium)*
		public Group getGroup() { return cGroup; }

		//medium
		public RuleCall getMediumParserRuleCall_0() { return cMediumParserRuleCall_0; }

		//(COMMA WS* medium)*
		public Group getGroup_1() { return cGroup_1; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_0() { return cCOMMATerminalRuleCall_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//medium
		public RuleCall getMediumParserRuleCall_1_2() { return cMediumParserRuleCall_1_2; }
	}

	public class MediumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "medium");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDENTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//medium:
		//	IDENT WS*;
		public ParserRule getRule() { return rule; }

		//IDENT WS*
		public Group getGroup() { return cGroup; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_0() { return cIDENTTerminalRuleCall_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }
	}

	public class RulesetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ruleset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSelectorsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSelectorsSelectorParserRuleCall_0_0 = (RuleCall)cSelectorsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cCOMMATerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cSelectorsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSelectorsSelectorParserRuleCall_1_1_0 = (RuleCall)cSelectorsAssignment_1_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cDeclarationsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cDeclarationsCss_declarationParserRuleCall_4_0_0 = (RuleCall)cDeclarationsAssignment_4_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//ruleset:
		//	selectors+=selector (COMMA selectors+=selector)* "{" WS* (declarations+=css_declaration ";" WS*)* "}" WS*;
		public ParserRule getRule() { return rule; }

		//selectors+=selector (COMMA selectors+=selector)* "{" WS* (declarations+=css_declaration ";" WS*)* "}" WS*
		public Group getGroup() { return cGroup; }

		//selectors+=selector
		public Assignment getSelectorsAssignment_0() { return cSelectorsAssignment_0; }

		//selector
		public RuleCall getSelectorsSelectorParserRuleCall_0_0() { return cSelectorsSelectorParserRuleCall_0_0; }

		//(COMMA selectors+=selector)*
		public Group getGroup_1() { return cGroup_1; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_0() { return cCOMMATerminalRuleCall_1_0; }

		//selectors+=selector
		public Assignment getSelectorsAssignment_1_1() { return cSelectorsAssignment_1_1; }

		//selector
		public RuleCall getSelectorsSelectorParserRuleCall_1_1_0() { return cSelectorsSelectorParserRuleCall_1_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//(declarations+=css_declaration ";" WS*)*
		public Group getGroup_4() { return cGroup_4; }

		//declarations+=css_declaration
		public Assignment getDeclarationsAssignment_4_0() { return cDeclarationsAssignment_4_0; }

		//css_declaration
		public RuleCall getDeclarationsCss_declarationParserRuleCall_4_0_0() { return cDeclarationsCss_declarationParserRuleCall_4_0_0; }

		//";"
		public Keyword getSemicolonKeyword_4_1() { return cSemicolonKeyword_4_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_2() { return cWSTerminalRuleCall_4_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//WS*
		public RuleCall getWSTerminalRuleCall_6() { return cWSTerminalRuleCall_6; }
	}

	public class SelectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "selector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSimpleselectorsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSimpleselectorsSimple_selectorParserRuleCall_0_0 = (RuleCall)cSimpleselectorsAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cCombinatorAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final RuleCall cCombinatorCombinatorParserRuleCall_1_0_0_0 = (RuleCall)cCombinatorAssignment_1_0_0.eContents().get(0);
		private final Assignment cSelectorAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cSelectorSelectorParserRuleCall_1_0_1_0 = (RuleCall)cSelectorAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final Assignment cCombinatorAssignment_1_1_1_0 = (Assignment)cGroup_1_1_1.eContents().get(0);
		private final RuleCall cCombinatorCombinatorParserRuleCall_1_1_1_0_0 = (RuleCall)cCombinatorAssignment_1_1_1_0.eContents().get(0);
		private final Assignment cSelectorAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cSelectorSelectorParserRuleCall_1_1_1_1_0 = (RuleCall)cSelectorAssignment_1_1_1_1.eContents().get(0);
		
		//selector:
		//	simpleselectors+=simple_selector (combinator=combinator selector=selector | WS+ (combinator=combinator?
		//	selector=selector)?)?;
		public ParserRule getRule() { return rule; }

		//simpleselectors+=simple_selector (combinator=combinator selector=selector | WS+ (combinator=combinator?
		//selector=selector)?)?
		public Group getGroup() { return cGroup; }

		//simpleselectors+=simple_selector
		public Assignment getSimpleselectorsAssignment_0() { return cSimpleselectorsAssignment_0; }

		//simple_selector
		public RuleCall getSimpleselectorsSimple_selectorParserRuleCall_0_0() { return cSimpleselectorsSimple_selectorParserRuleCall_0_0; }

		//(combinator=combinator selector=selector | WS+ (combinator=combinator? selector=selector)?)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//combinator=combinator selector=selector
		public Group getGroup_1_0() { return cGroup_1_0; }

		//combinator=combinator
		public Assignment getCombinatorAssignment_1_0_0() { return cCombinatorAssignment_1_0_0; }

		//combinator
		public RuleCall getCombinatorCombinatorParserRuleCall_1_0_0_0() { return cCombinatorCombinatorParserRuleCall_1_0_0_0; }

		//selector=selector
		public Assignment getSelectorAssignment_1_0_1() { return cSelectorAssignment_1_0_1; }

		//selector
		public RuleCall getSelectorSelectorParserRuleCall_1_0_1_0() { return cSelectorSelectorParserRuleCall_1_0_1_0; }

		//WS+ (combinator=combinator? selector=selector)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_1_0() { return cWSTerminalRuleCall_1_1_0; }

		//(combinator=combinator? selector=selector)?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//combinator=combinator?
		public Assignment getCombinatorAssignment_1_1_1_0() { return cCombinatorAssignment_1_1_1_0; }

		//combinator
		public RuleCall getCombinatorCombinatorParserRuleCall_1_1_1_0_0() { return cCombinatorCombinatorParserRuleCall_1_1_1_0_0; }

		//selector=selector
		public Assignment getSelectorAssignment_1_1_1_1() { return cSelectorAssignment_1_1_1_1; }

		//selector
		public RuleCall getSelectorSelectorParserRuleCall_1_1_1_1_0() { return cSelectorSelectorParserRuleCall_1_1_1_1_0; }
	}

	public class Simple_selectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "simple_selector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cElementAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cElementElement_nameParserRuleCall_0_0_0 = (RuleCall)cElementAssignment_0_0.eContents().get(0);
		private final Assignment cIdAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cIdCss_idParserRuleCall_0_1_0 = (RuleCall)cIdAssignment_0_1.eContents().get(0);
		private final Assignment cClassAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cClassCss_classParserRuleCall_0_2_0 = (RuleCall)cClassAssignment_0_2.eContents().get(0);
		private final Assignment cPseudoclassesAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cPseudoclassesCss_pseudoParserRuleCall_0_3_0 = (RuleCall)cPseudoclassesAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIdAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cIdCss_idParserRuleCall_1_0_0 = (RuleCall)cIdAssignment_1_0.eContents().get(0);
		private final Assignment cClassAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cClassCss_classParserRuleCall_1_1_0 = (RuleCall)cClassAssignment_1_1.eContents().get(0);
		private final Assignment cPseudoclassesAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cPseudoclassesCss_pseudoParserRuleCall_1_2_0 = (RuleCall)cPseudoclassesAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cClassAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cClassCss_classParserRuleCall_2_0_0 = (RuleCall)cClassAssignment_2_0.eContents().get(0);
		private final Assignment cPseudoclassesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPseudoclassesCss_pseudoParserRuleCall_2_1_0 = (RuleCall)cPseudoclassesAssignment_2_1.eContents().get(0);
		private final Assignment cPseudoclassesAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cPseudoclassesCss_pseudoParserRuleCall_3_0 = (RuleCall)cPseudoclassesAssignment_3.eContents().get(0);
		
		//simple_selector:
		//	element=element_name id=css_id? class=css_class? pseudoclasses+=css_pseudo* | id=css_id class=css_class?
		//	pseudoclasses+=css_pseudo* | class=css_class pseudoclasses+=css_pseudo* | pseudoclasses+=css_pseudo+;
		public ParserRule getRule() { return rule; }

		//element=element_name id=css_id? class=css_class? pseudoclasses+=css_pseudo* | id=css_id class=css_class?
		//pseudoclasses+=css_pseudo* | class=css_class pseudoclasses+=css_pseudo* | pseudoclasses+=css_pseudo+
		public Alternatives getAlternatives() { return cAlternatives; }

		//element=element_name id=css_id? class=css_class? pseudoclasses+=css_pseudo*
		public Group getGroup_0() { return cGroup_0; }

		//element=element_name
		public Assignment getElementAssignment_0_0() { return cElementAssignment_0_0; }

		//element_name
		public RuleCall getElementElement_nameParserRuleCall_0_0_0() { return cElementElement_nameParserRuleCall_0_0_0; }

		//id=css_id?
		public Assignment getIdAssignment_0_1() { return cIdAssignment_0_1; }

		//css_id
		public RuleCall getIdCss_idParserRuleCall_0_1_0() { return cIdCss_idParserRuleCall_0_1_0; }

		//class=css_class?
		public Assignment getClassAssignment_0_2() { return cClassAssignment_0_2; }

		//css_class
		public RuleCall getClassCss_classParserRuleCall_0_2_0() { return cClassCss_classParserRuleCall_0_2_0; }

		//pseudoclasses+=css_pseudo*
		public Assignment getPseudoclassesAssignment_0_3() { return cPseudoclassesAssignment_0_3; }

		//css_pseudo
		public RuleCall getPseudoclassesCss_pseudoParserRuleCall_0_3_0() { return cPseudoclassesCss_pseudoParserRuleCall_0_3_0; }

		//id=css_id class=css_class? pseudoclasses+=css_pseudo*
		public Group getGroup_1() { return cGroup_1; }

		//id=css_id
		public Assignment getIdAssignment_1_0() { return cIdAssignment_1_0; }

		//css_id
		public RuleCall getIdCss_idParserRuleCall_1_0_0() { return cIdCss_idParserRuleCall_1_0_0; }

		//class=css_class?
		public Assignment getClassAssignment_1_1() { return cClassAssignment_1_1; }

		//css_class
		public RuleCall getClassCss_classParserRuleCall_1_1_0() { return cClassCss_classParserRuleCall_1_1_0; }

		//pseudoclasses+=css_pseudo*
		public Assignment getPseudoclassesAssignment_1_2() { return cPseudoclassesAssignment_1_2; }

		//css_pseudo
		public RuleCall getPseudoclassesCss_pseudoParserRuleCall_1_2_0() { return cPseudoclassesCss_pseudoParserRuleCall_1_2_0; }

		//class=css_class pseudoclasses+=css_pseudo*
		public Group getGroup_2() { return cGroup_2; }

		//class=css_class
		public Assignment getClassAssignment_2_0() { return cClassAssignment_2_0; }

		//css_class
		public RuleCall getClassCss_classParserRuleCall_2_0_0() { return cClassCss_classParserRuleCall_2_0_0; }

		//pseudoclasses+=css_pseudo*
		public Assignment getPseudoclassesAssignment_2_1() { return cPseudoclassesAssignment_2_1; }

		//css_pseudo
		public RuleCall getPseudoclassesCss_pseudoParserRuleCall_2_1_0() { return cPseudoclassesCss_pseudoParserRuleCall_2_1_0; }

		//pseudoclasses+=css_pseudo+
		public Assignment getPseudoclassesAssignment_3() { return cPseudoclassesAssignment_3; }

		//css_pseudo
		public RuleCall getPseudoclassesCss_pseudoParserRuleCall_3_0() { return cPseudoclassesCss_pseudoParserRuleCall_3_0; }
	}

	public class Element_nameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "element_name");
		private final RuleCall cIDENTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//element_name:
		//	IDENT;
		public ParserRule getRule() { return rule; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall() { return cIDENTTerminalRuleCall; }
	}

	public class Css_classElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "css_class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//css_class:
		//	"." IDENT;
		public ParserRule getRule() { return rule; }

		//"." IDENT
		public Group getGroup() { return cGroup; }

		//"."
		public Keyword getFullStopKeyword_0() { return cFullStopKeyword_0; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_1() { return cIDENTTerminalRuleCall_1; }
	}

	public class Css_idElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "css_id");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cHexdigitsTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cIDENTTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//css_id:
		//	"#" (hexdigits | IDENT);
		public ParserRule getRule() { return rule; }

		//"#" (hexdigits | IDENT)
		public Group getGroup() { return cGroup; }

		//"#"
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }

		//hexdigits | IDENT
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//hexdigits
		public RuleCall getHexdigitsTerminalRuleCall_1_0() { return cHexdigitsTerminalRuleCall_1_0; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_1_1() { return cIDENTTerminalRuleCall_1_1; }
	}

	public class Css_declarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "css_declaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCss_generic_declarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCss_fx_declarationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//css_declaration:
		//	css_generic_declaration | css_fx_declaration;
		public ParserRule getRule() { return rule; }

		//css_generic_declaration | css_fx_declaration
		public Alternatives getAlternatives() { return cAlternatives; }

		//css_generic_declaration
		public RuleCall getCss_generic_declarationParserRuleCall_0() { return cCss_generic_declarationParserRuleCall_0; }

		//css_fx_declaration
		public RuleCall getCss_fx_declarationParserRuleCall_1() { return cCss_fx_declarationParserRuleCall_1; }
	}

	public class Css_generic_declarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "css_generic_declaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyCss_propertyParserRuleCall_0_0 = (RuleCall)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cExpressionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionExprParserRuleCall_3_0 = (RuleCall)cExpressionAssignment_3.eContents().get(0);
		
		//css_generic_declaration:
		//	property=css_property ":" WS* expression=expr;
		public ParserRule getRule() { return rule; }

		//property=css_property ":" WS* expression=expr
		public Group getGroup() { return cGroup; }

		//property=css_property
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//css_property
		public RuleCall getPropertyCss_propertyParserRuleCall_0_0() { return cPropertyCss_propertyParserRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//expression=expr
		public Assignment getExpressionAssignment_3() { return cExpressionAssignment_3; }

		//expr
		public RuleCall getExpressionExprParserRuleCall_3_0() { return cExpressionExprParserRuleCall_3_0; }
	}

	public class Css_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "css_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDENTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//css_property:
		//	IDENT WS*;
		public ParserRule getRule() { return rule; }

		//IDENT WS*
		public Group getGroup() { return cGroup; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_0() { return cIDENTTerminalRuleCall_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }
	}

	public class Css_pseudoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "css_pseudo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//css_pseudo:
		//	":" IDENT;
		public ParserRule getRule() { return rule; }

		//":" IDENT
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_1() { return cIDENTTerminalRuleCall_1; }
	}

	public class CombinatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "combinator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//combinator:
		//	"+" | ">";
		public ParserRule getRule() { return rule; }

		//"+" | ">"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"+"
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_1() { return cGreaterThanSignKeyword_1; }
	}

	public class OperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cSolidusKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cCOMMATerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//operator:
		//	"/" WS* | COMMA WS*;
		public ParserRule getRule() { return rule; }

		//"/" WS* | COMMA WS*
		public Alternatives getAlternatives() { return cAlternatives; }

		//"/" WS*
		public Group getGroup_0() { return cGroup_0; }

		//"/"
		public Keyword getSolidusKeyword_0_0() { return cSolidusKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1() { return cWSTerminalRuleCall_0_1; }

		//COMMA WS*
		public Group getGroup_1() { return cGroup_1; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_0() { return cCOMMATerminalRuleCall_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }
	}

	public class Unary_operatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "unary_operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPlusSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//unary_operator:
		//	"-" | "+";
		public ParserRule getRule() { return rule; }

		//"-" | "+"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"-"
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//"+"
		public Keyword getPlusSignKeyword_1() { return cPlusSignKeyword_1; }
	}

	public class ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "expr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTermParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cOperatorParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cTermParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//expr:
		//	term (operator? term)*;
		public ParserRule getRule() { return rule; }

		//term (operator? term)*
		public Group getGroup() { return cGroup; }

		//term
		public RuleCall getTermParserRuleCall_0() { return cTermParserRuleCall_0; }

		//(operator? term)*
		public Group getGroup_1() { return cGroup_1; }

		//operator?
		public RuleCall getOperatorParserRuleCall_1_0() { return cOperatorParserRuleCall_1_0; }

		//term
		public RuleCall getTermParserRuleCall_1_1() { return cTermParserRuleCall_1_1; }
	}

	public class TermElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "term");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cUnary_operatorParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cNUMBERParserRuleCall_0_1_0_0 = (RuleCall)cGroup_0_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1_0_1 = (RuleCall)cGroup_0_1_0.eContents().get(1);
		private final Group cGroup_0_1_1 = (Group)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cPERCENTAGEParserRuleCall_0_1_1_0 = (RuleCall)cGroup_0_1_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1_1_1 = (RuleCall)cGroup_0_1_1.eContents().get(1);
		private final Group cGroup_0_1_2 = (Group)cAlternatives_0_1.eContents().get(2);
		private final RuleCall cLENGTHParserRuleCall_0_1_2_0 = (RuleCall)cGroup_0_1_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1_2_1 = (RuleCall)cGroup_0_1_2.eContents().get(1);
		private final Group cGroup_0_1_3 = (Group)cAlternatives_0_1.eContents().get(3);
		private final RuleCall cEMSParserRuleCall_0_1_3_0 = (RuleCall)cGroup_0_1_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1_3_1 = (RuleCall)cGroup_0_1_3.eContents().get(1);
		private final Group cGroup_0_1_4 = (Group)cAlternatives_0_1.eContents().get(4);
		private final RuleCall cEXSParserRuleCall_0_1_4_0 = (RuleCall)cGroup_0_1_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1_4_1 = (RuleCall)cGroup_0_1_4.eContents().get(1);
		private final Group cGroup_0_1_5 = (Group)cAlternatives_0_1.eContents().get(5);
		private final RuleCall cANGLEParserRuleCall_0_1_5_0 = (RuleCall)cGroup_0_1_5.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1_5_1 = (RuleCall)cGroup_0_1_5.eContents().get(1);
		private final Group cGroup_0_1_6 = (Group)cAlternatives_0_1.eContents().get(6);
		private final RuleCall cTIMEParserRuleCall_0_1_6_0 = (RuleCall)cGroup_0_1_6.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1_6_1 = (RuleCall)cGroup_0_1_6.eContents().get(1);
		private final Group cGroup_0_1_7 = (Group)cAlternatives_0_1.eContents().get(7);
		private final RuleCall cFREQParserRuleCall_0_1_7_0 = (RuleCall)cGroup_0_1_7.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1_7_1 = (RuleCall)cGroup_0_1_7.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final RuleCall cIDENTTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final RuleCall cURIParserRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cNumberSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cHexdigitsTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		
		//term:
		//	unary_operator? (NUMBER WS* | PERCENTAGE WS* | LENGTH WS* | EMS WS* | EXS WS* | ANGLE WS* | TIME WS* | FREQ WS*) //| function
		//	| STRING WS* | IDENT WS* | URI WS* | "#" hexdigits;
		public ParserRule getRule() { return rule; }

		//unary_operator? (NUMBER WS* | PERCENTAGE WS* | LENGTH WS* | EMS WS* | EXS WS* | ANGLE WS* | TIME WS* | FREQ WS*) //| function
		//| STRING WS* | IDENT WS* | URI WS* | "#" hexdigits
		public Alternatives getAlternatives() { return cAlternatives; }

		//unary_operator? (NUMBER WS* | PERCENTAGE WS* | LENGTH WS* | EMS WS* | EXS WS* | ANGLE WS* | TIME WS* | FREQ WS*)
		public Group getGroup_0() { return cGroup_0; }

		//unary_operator?
		public RuleCall getUnary_operatorParserRuleCall_0_0() { return cUnary_operatorParserRuleCall_0_0; }

		//NUMBER WS* | PERCENTAGE WS* | LENGTH WS* | EMS WS* | EXS WS* | ANGLE WS* | TIME WS* | FREQ WS*
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//NUMBER WS*
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_0_1_0_0() { return cNUMBERParserRuleCall_0_1_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1_0_1() { return cWSTerminalRuleCall_0_1_0_1; }

		//PERCENTAGE WS*
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }

		//PERCENTAGE
		public RuleCall getPERCENTAGEParserRuleCall_0_1_1_0() { return cPERCENTAGEParserRuleCall_0_1_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1_1_1() { return cWSTerminalRuleCall_0_1_1_1; }

		//LENGTH WS*
		public Group getGroup_0_1_2() { return cGroup_0_1_2; }

		//LENGTH
		public RuleCall getLENGTHParserRuleCall_0_1_2_0() { return cLENGTHParserRuleCall_0_1_2_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1_2_1() { return cWSTerminalRuleCall_0_1_2_1; }

		//EMS WS*
		public Group getGroup_0_1_3() { return cGroup_0_1_3; }

		//EMS
		public RuleCall getEMSParserRuleCall_0_1_3_0() { return cEMSParserRuleCall_0_1_3_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1_3_1() { return cWSTerminalRuleCall_0_1_3_1; }

		//EXS WS*
		public Group getGroup_0_1_4() { return cGroup_0_1_4; }

		//EXS
		public RuleCall getEXSParserRuleCall_0_1_4_0() { return cEXSParserRuleCall_0_1_4_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1_4_1() { return cWSTerminalRuleCall_0_1_4_1; }

		//ANGLE WS*
		public Group getGroup_0_1_5() { return cGroup_0_1_5; }

		//ANGLE
		public RuleCall getANGLEParserRuleCall_0_1_5_0() { return cANGLEParserRuleCall_0_1_5_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1_5_1() { return cWSTerminalRuleCall_0_1_5_1; }

		//TIME WS*
		public Group getGroup_0_1_6() { return cGroup_0_1_6; }

		//TIME
		public RuleCall getTIMEParserRuleCall_0_1_6_0() { return cTIMEParserRuleCall_0_1_6_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1_6_1() { return cWSTerminalRuleCall_0_1_6_1; }

		//FREQ WS*
		public Group getGroup_0_1_7() { return cGroup_0_1_7; }

		//FREQ
		public RuleCall getFREQParserRuleCall_0_1_7_0() { return cFREQParserRuleCall_0_1_7_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1_7_1() { return cWSTerminalRuleCall_0_1_7_1; }

		//STRING WS*
		public Group getGroup_1() { return cGroup_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_0() { return cSTRINGTerminalRuleCall_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//IDENT WS*
		public Group getGroup_2() { return cGroup_2; }

		//IDENT
		public RuleCall getIDENTTerminalRuleCall_2_0() { return cIDENTTerminalRuleCall_2_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_1() { return cWSTerminalRuleCall_2_1; }

		//URI WS*
		public Group getGroup_3() { return cGroup_3; }

		//URI
		public RuleCall getURIParserRuleCall_3_0() { return cURIParserRuleCall_3_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3_1() { return cWSTerminalRuleCall_3_1; }

		//"#" hexdigits
		public Group getGroup_4() { return cGroup_4; }

		//"#"
		public Keyword getNumberSignKeyword_4_0() { return cNumberSignKeyword_4_0; }

		//hexdigits
		public RuleCall getHexdigitsTerminalRuleCall_4_1() { return cHexdigitsTerminalRuleCall_4_1; }
	}

	public class NumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "num");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntegerTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRealTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//num:
		//	integer | real;
		public ParserRule getRule() { return rule; }

		//integer | real
		public Alternatives getAlternatives() { return cAlternatives; }

		//integer
		public RuleCall getIntegerTerminalRuleCall_0() { return cIntegerTerminalRuleCall_0; }

		//real
		public RuleCall getRealTerminalRuleCall_1() { return cRealTerminalRuleCall_1; }
	}

	public class Css_fx_declarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "css_fx_declaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFx_font_propertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFx_font_family_propertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFx_font_size_propertyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFx_font_style_propertyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cFx_font_weight_propertyParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cFx_cursor_propertyParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cFx_effect_propertyParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cFx_boolean_propertyParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cFx_size_propertyParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cFx_number_propertyParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cFx_integer_propertyParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cFx_paint_propertyParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cFx_blend_propertyParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cFx_url_propertyParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cFx_paint_propertiesParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cFx_multisize_propertiesParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cFx_hposition_propertyParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cFx_vposition_propertyParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cFx_side_propertyParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cFx_bar_policy_propertyParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cFx_url_propertiesParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cFx_repeat_propertiesParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cFx_multisize_propertyParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cFx_size_propertiesParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cFx_stroke_line_cap_propertyParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cFx_stroke_line_join_propertyParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cFx_alignment_propertyParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cFx_text_origin_propertyParserRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		private final RuleCall cFx_position_propertyParserRuleCall_28 = (RuleCall)cAlternatives.eContents().get(28);
		private final RuleCall cFx_background_image_size_propertyParserRuleCall_29 = (RuleCall)cAlternatives.eContents().get(29);
		private final RuleCall cFx_border_style_propertyParserRuleCall_30 = (RuleCall)cAlternatives.eContents().get(30);
		private final RuleCall cFx_border_image_slice_propertyParserRuleCall_31 = (RuleCall)cAlternatives.eContents().get(31);
		private final RuleCall cFx_text_overrun_propertyParserRuleCall_32 = (RuleCall)cAlternatives.eContents().get(32);
		private final RuleCall cFx_insets_propertyParserRuleCall_33 = (RuleCall)cAlternatives.eContents().get(33);
		private final RuleCall cFx_number_propertiesParserRuleCall_34 = (RuleCall)cAlternatives.eContents().get(34);
		private final RuleCall cFx_multi_paint_propertiesParserRuleCall_35 = (RuleCall)cAlternatives.eContents().get(35);
		private final RuleCall cFx_color_propertyParserRuleCall_36 = (RuleCall)cAlternatives.eContents().get(36);
		private final RuleCall cFx_string_propertyParserRuleCall_37 = (RuleCall)cAlternatives.eContents().get(37);
		
		//css_fx_declaration:
		//	fx_font_property | fx_font_family_property | fx_font_size_property | fx_font_style_property | fx_font_weight_property
		//	| fx_cursor_property | fx_effect_property | fx_boolean_property | fx_size_property | fx_number_property |
		//	fx_integer_property | fx_paint_property | fx_blend_property | fx_url_property | fx_paint_properties |
		//	fx_multisize_properties | fx_hposition_property | fx_vposition_property | fx_side_property | fx_bar_policy_property |
		//	fx_url_properties | fx_repeat_properties | fx_multisize_property | fx_size_properties | fx_stroke_line_cap_property |
		//	fx_stroke_line_join_property | fx_alignment_property | fx_text_origin_property | fx_position_property |
		//	fx_background_image_size_property | fx_border_style_property | fx_border_image_slice_property |
		//	fx_text_overrun_property | fx_insets_property | fx_number_properties | fx_multi_paint_properties | fx_color_property |
		//	fx_string_property;
		public ParserRule getRule() { return rule; }

		//fx_font_property | fx_font_family_property | fx_font_size_property | fx_font_style_property | fx_font_weight_property |
		//fx_cursor_property | fx_effect_property | fx_boolean_property | fx_size_property | fx_number_property |
		//fx_integer_property | fx_paint_property | fx_blend_property | fx_url_property | fx_paint_properties |
		//fx_multisize_properties | fx_hposition_property | fx_vposition_property | fx_side_property | fx_bar_policy_property |
		//fx_url_properties | fx_repeat_properties | fx_multisize_property | fx_size_properties | fx_stroke_line_cap_property |
		//fx_stroke_line_join_property | fx_alignment_property | fx_text_origin_property | fx_position_property |
		//fx_background_image_size_property | fx_border_style_property | fx_border_image_slice_property |
		//fx_text_overrun_property | fx_insets_property | fx_number_properties | fx_multi_paint_properties | fx_color_property |
		//fx_string_property
		public Alternatives getAlternatives() { return cAlternatives; }

		//fx_font_property
		public RuleCall getFx_font_propertyParserRuleCall_0() { return cFx_font_propertyParserRuleCall_0; }

		//fx_font_family_property
		public RuleCall getFx_font_family_propertyParserRuleCall_1() { return cFx_font_family_propertyParserRuleCall_1; }

		//fx_font_size_property
		public RuleCall getFx_font_size_propertyParserRuleCall_2() { return cFx_font_size_propertyParserRuleCall_2; }

		//fx_font_style_property
		public RuleCall getFx_font_style_propertyParserRuleCall_3() { return cFx_font_style_propertyParserRuleCall_3; }

		//fx_font_weight_property
		public RuleCall getFx_font_weight_propertyParserRuleCall_4() { return cFx_font_weight_propertyParserRuleCall_4; }

		//fx_cursor_property
		public RuleCall getFx_cursor_propertyParserRuleCall_5() { return cFx_cursor_propertyParserRuleCall_5; }

		//fx_effect_property
		public RuleCall getFx_effect_propertyParserRuleCall_6() { return cFx_effect_propertyParserRuleCall_6; }

		//fx_boolean_property
		public RuleCall getFx_boolean_propertyParserRuleCall_7() { return cFx_boolean_propertyParserRuleCall_7; }

		//fx_size_property
		public RuleCall getFx_size_propertyParserRuleCall_8() { return cFx_size_propertyParserRuleCall_8; }

		//fx_number_property
		public RuleCall getFx_number_propertyParserRuleCall_9() { return cFx_number_propertyParserRuleCall_9; }

		//fx_integer_property
		public RuleCall getFx_integer_propertyParserRuleCall_10() { return cFx_integer_propertyParserRuleCall_10; }

		//fx_paint_property
		public RuleCall getFx_paint_propertyParserRuleCall_11() { return cFx_paint_propertyParserRuleCall_11; }

		//fx_blend_property
		public RuleCall getFx_blend_propertyParserRuleCall_12() { return cFx_blend_propertyParserRuleCall_12; }

		//fx_url_property
		public RuleCall getFx_url_propertyParserRuleCall_13() { return cFx_url_propertyParserRuleCall_13; }

		//fx_paint_properties
		public RuleCall getFx_paint_propertiesParserRuleCall_14() { return cFx_paint_propertiesParserRuleCall_14; }

		//fx_multisize_properties
		public RuleCall getFx_multisize_propertiesParserRuleCall_15() { return cFx_multisize_propertiesParserRuleCall_15; }

		//fx_hposition_property
		public RuleCall getFx_hposition_propertyParserRuleCall_16() { return cFx_hposition_propertyParserRuleCall_16; }

		//fx_vposition_property
		public RuleCall getFx_vposition_propertyParserRuleCall_17() { return cFx_vposition_propertyParserRuleCall_17; }

		//fx_side_property
		public RuleCall getFx_side_propertyParserRuleCall_18() { return cFx_side_propertyParserRuleCall_18; }

		//fx_bar_policy_property
		public RuleCall getFx_bar_policy_propertyParserRuleCall_19() { return cFx_bar_policy_propertyParserRuleCall_19; }

		//fx_url_properties
		public RuleCall getFx_url_propertiesParserRuleCall_20() { return cFx_url_propertiesParserRuleCall_20; }

		//fx_repeat_properties
		public RuleCall getFx_repeat_propertiesParserRuleCall_21() { return cFx_repeat_propertiesParserRuleCall_21; }

		//fx_multisize_property
		public RuleCall getFx_multisize_propertyParserRuleCall_22() { return cFx_multisize_propertyParserRuleCall_22; }

		//fx_size_properties
		public RuleCall getFx_size_propertiesParserRuleCall_23() { return cFx_size_propertiesParserRuleCall_23; }

		//fx_stroke_line_cap_property
		public RuleCall getFx_stroke_line_cap_propertyParserRuleCall_24() { return cFx_stroke_line_cap_propertyParserRuleCall_24; }

		//fx_stroke_line_join_property
		public RuleCall getFx_stroke_line_join_propertyParserRuleCall_25() { return cFx_stroke_line_join_propertyParserRuleCall_25; }

		//fx_alignment_property
		public RuleCall getFx_alignment_propertyParserRuleCall_26() { return cFx_alignment_propertyParserRuleCall_26; }

		//fx_text_origin_property
		public RuleCall getFx_text_origin_propertyParserRuleCall_27() { return cFx_text_origin_propertyParserRuleCall_27; }

		//fx_position_property
		public RuleCall getFx_position_propertyParserRuleCall_28() { return cFx_position_propertyParserRuleCall_28; }

		//fx_background_image_size_property
		public RuleCall getFx_background_image_size_propertyParserRuleCall_29() { return cFx_background_image_size_propertyParserRuleCall_29; }

		//fx_border_style_property
		public RuleCall getFx_border_style_propertyParserRuleCall_30() { return cFx_border_style_propertyParserRuleCall_30; }

		//fx_border_image_slice_property
		public RuleCall getFx_border_image_slice_propertyParserRuleCall_31() { return cFx_border_image_slice_propertyParserRuleCall_31; }

		//fx_text_overrun_property
		public RuleCall getFx_text_overrun_propertyParserRuleCall_32() { return cFx_text_overrun_propertyParserRuleCall_32; }

		//fx_insets_property
		public RuleCall getFx_insets_propertyParserRuleCall_33() { return cFx_insets_propertyParserRuleCall_33; }

		//fx_number_properties
		public RuleCall getFx_number_propertiesParserRuleCall_34() { return cFx_number_propertiesParserRuleCall_34; }

		//fx_multi_paint_properties
		public RuleCall getFx_multi_paint_propertiesParserRuleCall_35() { return cFx_multi_paint_propertiesParserRuleCall_35; }

		//fx_color_property
		public RuleCall getFx_color_propertyParserRuleCall_36() { return cFx_color_propertyParserRuleCall_36; }

		//fx_string_property
		public RuleCall getFx_string_propertyParserRuleCall_37() { return cFx_string_propertyParserRuleCall_37; }
	}

	public class Fx_font_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_font_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueFONTParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_font_property:
		//	property=("-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
		//	"-fx-tick-label-font") WS* ":" WS* value=FONT;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
		//"-fx-tick-label-font") WS* ":" WS* value=FONT
		public Group getGroup() { return cGroup; }

		//property=("-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
		//"-fx-tick-label-font")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
		//"-fx-tick-label-font"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font"
		public Keyword getPropertyFxFontKeyword_0_0_0() { return cPropertyFxFontKeyword_0_0_0; }

		//"-fx-title-font"
		public Keyword getPropertyFxTitleFontKeyword_0_0_1() { return cPropertyFxTitleFontKeyword_0_0_1; }

		//"-fx-pie-label-font"
		public Keyword getPropertyFxPieLabelFontKeyword_0_0_2() { return cPropertyFxPieLabelFontKeyword_0_0_2; }

		//"-fx-pie-value-label-font"
		public Keyword getPropertyFxPieValueLabelFontKeyword_0_0_3() { return cPropertyFxPieValueLabelFontKeyword_0_0_3; }

		//"-fx-label-font"
		public Keyword getPropertyFxLabelFontKeyword_0_0_4() { return cPropertyFxLabelFontKeyword_0_0_4; }

		//"-fx-tick-label-font"
		public Keyword getPropertyFxTickLabelFontKeyword_0_0_5() { return cPropertyFxTickLabelFontKeyword_0_0_5; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=FONT
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//FONT
		public RuleCall getValueFONTParserRuleCall_4_0() { return cValueFONTParserRuleCall_4_0; }
	}

	public class Fx_font_family_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_font_family_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontFamilyKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontFamilyKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontFamilyKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontFamilyKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontFamilyKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontFamilyKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueFONTFAMILYParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_font_family_property:
		//	property=("-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" |
		//	"-fx-pie-value-label-font-family" | "-fx-label-font-family" | "-fx-tick-label-font-family") WS* ":" WS*
		//	value=FONTFAMILY;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" | "-fx-pie-value-label-font-family"
		//| "-fx-label-font-family" | "-fx-tick-label-font-family") WS* ":" WS* value=FONTFAMILY
		public Group getGroup() { return cGroup; }

		//property=("-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" | "-fx-pie-value-label-font-family"
		//| "-fx-label-font-family" | "-fx-tick-label-font-family")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" | "-fx-pie-value-label-font-family" |
		//"-fx-label-font-family" | "-fx-tick-label-font-family"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font-family"
		public Keyword getPropertyFxFontFamilyKeyword_0_0_0() { return cPropertyFxFontFamilyKeyword_0_0_0; }

		//"-fx-title-font-family"
		public Keyword getPropertyFxTitleFontFamilyKeyword_0_0_1() { return cPropertyFxTitleFontFamilyKeyword_0_0_1; }

		//"-fx-pie-label-font-family"
		public Keyword getPropertyFxPieLabelFontFamilyKeyword_0_0_2() { return cPropertyFxPieLabelFontFamilyKeyword_0_0_2; }

		//"-fx-pie-value-label-font-family"
		public Keyword getPropertyFxPieValueLabelFontFamilyKeyword_0_0_3() { return cPropertyFxPieValueLabelFontFamilyKeyword_0_0_3; }

		//"-fx-label-font-family"
		public Keyword getPropertyFxLabelFontFamilyKeyword_0_0_4() { return cPropertyFxLabelFontFamilyKeyword_0_0_4; }

		//"-fx-tick-label-font-family"
		public Keyword getPropertyFxTickLabelFontFamilyKeyword_0_0_5() { return cPropertyFxTickLabelFontFamilyKeyword_0_0_5; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=FONTFAMILY
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//FONTFAMILY
		public RuleCall getValueFONTFAMILYParserRuleCall_4_0() { return cValueFONTFAMILYParserRuleCall_4_0; }
	}

	public class Fx_font_size_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_font_size_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontSizeKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontSizeKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontSizeKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontSizeKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontSizeKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontSizeKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueSIZEParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_font_size_property:
		//	property=("-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
		//	"-fx-label-font-size" | "-fx-tick-label-font-size") WS* ":" WS* value=SIZE;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
		//"-fx-label-font-size" | "-fx-tick-label-font-size") WS* ":" WS* value=SIZE
		public Group getGroup() { return cGroup; }

		//property=("-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
		//"-fx-label-font-size" | "-fx-tick-label-font-size")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
		//"-fx-label-font-size" | "-fx-tick-label-font-size"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font-size"
		public Keyword getPropertyFxFontSizeKeyword_0_0_0() { return cPropertyFxFontSizeKeyword_0_0_0; }

		//"-fx-title-font-size"
		public Keyword getPropertyFxTitleFontSizeKeyword_0_0_1() { return cPropertyFxTitleFontSizeKeyword_0_0_1; }

		//"-fx-pie-label-font-size"
		public Keyword getPropertyFxPieLabelFontSizeKeyword_0_0_2() { return cPropertyFxPieLabelFontSizeKeyword_0_0_2; }

		//"-fx-pie-value-label-font-size"
		public Keyword getPropertyFxPieValueLabelFontSizeKeyword_0_0_3() { return cPropertyFxPieValueLabelFontSizeKeyword_0_0_3; }

		//"-fx-label-font-size"
		public Keyword getPropertyFxLabelFontSizeKeyword_0_0_4() { return cPropertyFxLabelFontSizeKeyword_0_0_4; }

		//"-fx-tick-label-font-size"
		public Keyword getPropertyFxTickLabelFontSizeKeyword_0_0_5() { return cPropertyFxTickLabelFontSizeKeyword_0_0_5; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=SIZE
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//SIZE
		public RuleCall getValueSIZEParserRuleCall_4_0() { return cValueSIZEParserRuleCall_4_0; }
	}

	public class Fx_font_style_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_font_style_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontStyleKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontStyleKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontStyleKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontStyleKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontStyleKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontStyleKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueFONTSTYLEParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_font_style_property:
		//	property=("-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
		//	"-fx-label-font-style" | "-fx-tick-label-font-style") WS* ":" WS* value=FONTSTYLE;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
		//"-fx-label-font-style" | "-fx-tick-label-font-style") WS* ":" WS* value=FONTSTYLE
		public Group getGroup() { return cGroup; }

		//property=("-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
		//"-fx-label-font-style" | "-fx-tick-label-font-style")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
		//"-fx-label-font-style" | "-fx-tick-label-font-style"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font-style"
		public Keyword getPropertyFxFontStyleKeyword_0_0_0() { return cPropertyFxFontStyleKeyword_0_0_0; }

		//"-fx-title-font-style"
		public Keyword getPropertyFxTitleFontStyleKeyword_0_0_1() { return cPropertyFxTitleFontStyleKeyword_0_0_1; }

		//"-fx-pie-label-font-style"
		public Keyword getPropertyFxPieLabelFontStyleKeyword_0_0_2() { return cPropertyFxPieLabelFontStyleKeyword_0_0_2; }

		//"-fx-pie-value-label-font-style"
		public Keyword getPropertyFxPieValueLabelFontStyleKeyword_0_0_3() { return cPropertyFxPieValueLabelFontStyleKeyword_0_0_3; }

		//"-fx-label-font-style"
		public Keyword getPropertyFxLabelFontStyleKeyword_0_0_4() { return cPropertyFxLabelFontStyleKeyword_0_0_4; }

		//"-fx-tick-label-font-style"
		public Keyword getPropertyFxTickLabelFontStyleKeyword_0_0_5() { return cPropertyFxTickLabelFontStyleKeyword_0_0_5; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=FONTSTYLE
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//FONTSTYLE
		public RuleCall getValueFONTSTYLEParserRuleCall_4_0() { return cValueFONTSTYLEParserRuleCall_4_0; }
	}

	public class Fx_font_weight_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_font_weight_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFontWeightKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleFontWeightKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxPieLabelFontWeightKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxPieValueLabelFontWeightKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxLabelFontWeightKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTickLabelFontWeightKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueFONTWEIGHTParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_font_weight_property:
		//	property=("-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" |
		//	"-fx-pie-value-label-font-weight" | "-fx-label-font-weight" | "-fx-tick-label-font-weight") WS* ":" WS*
		//	value=FONTWEIGHT;
		public ParserRule getRule() { return rule; }

		//property=("-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" | "-fx-pie-value-label-font-weight"
		//| "-fx-label-font-weight" | "-fx-tick-label-font-weight") WS* ":" WS* value=FONTWEIGHT
		public Group getGroup() { return cGroup; }

		//property=("-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" | "-fx-pie-value-label-font-weight"
		//| "-fx-label-font-weight" | "-fx-tick-label-font-weight")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" | "-fx-pie-value-label-font-weight" |
		//"-fx-label-font-weight" | "-fx-tick-label-font-weight"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-font-weight"
		public Keyword getPropertyFxFontWeightKeyword_0_0_0() { return cPropertyFxFontWeightKeyword_0_0_0; }

		//"-fx-title-font-weight"
		public Keyword getPropertyFxTitleFontWeightKeyword_0_0_1() { return cPropertyFxTitleFontWeightKeyword_0_0_1; }

		//"-fx-pie-label-font-weight"
		public Keyword getPropertyFxPieLabelFontWeightKeyword_0_0_2() { return cPropertyFxPieLabelFontWeightKeyword_0_0_2; }

		//"-fx-pie-value-label-font-weight"
		public Keyword getPropertyFxPieValueLabelFontWeightKeyword_0_0_3() { return cPropertyFxPieValueLabelFontWeightKeyword_0_0_3; }

		//"-fx-label-font-weight"
		public Keyword getPropertyFxLabelFontWeightKeyword_0_0_4() { return cPropertyFxLabelFontWeightKeyword_0_0_4; }

		//"-fx-tick-label-font-weight"
		public Keyword getPropertyFxTickLabelFontWeightKeyword_0_0_5() { return cPropertyFxTickLabelFontWeightKeyword_0_0_5; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=FONTWEIGHT
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//FONTWEIGHT
		public RuleCall getValueFONTWEIGHTParserRuleCall_4_0() { return cValueFONTWEIGHTParserRuleCall_4_0; }
	}

	public class Fx_cursor_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_cursor_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxCursorKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueCrosshairKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueDefaultKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueHandKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		private final Keyword cValueMoveKeyword_4_0_3 = (Keyword)cValueAlternatives_4_0.eContents().get(3);
		private final Keyword cValueEResizeKeyword_4_0_4 = (Keyword)cValueAlternatives_4_0.eContents().get(4);
		private final Keyword cValueHResizeKeyword_4_0_5 = (Keyword)cValueAlternatives_4_0.eContents().get(5);
		private final Keyword cValueNeResizeKeyword_4_0_6 = (Keyword)cValueAlternatives_4_0.eContents().get(6);
		private final Keyword cValueNwResizeKeyword_4_0_7 = (Keyword)cValueAlternatives_4_0.eContents().get(7);
		private final Keyword cValueNResizeKeyword_4_0_8 = (Keyword)cValueAlternatives_4_0.eContents().get(8);
		private final Keyword cValueSeResizeKeyword_4_0_9 = (Keyword)cValueAlternatives_4_0.eContents().get(9);
		private final Keyword cValueSwResizeKeyword_4_0_10 = (Keyword)cValueAlternatives_4_0.eContents().get(10);
		private final Keyword cValueSResizeKeyword_4_0_11 = (Keyword)cValueAlternatives_4_0.eContents().get(11);
		private final Keyword cValueWResizeKeyword_4_0_12 = (Keyword)cValueAlternatives_4_0.eContents().get(12);
		private final Keyword cValueVResizeKeyword_4_0_13 = (Keyword)cValueAlternatives_4_0.eContents().get(13);
		private final Keyword cValueTextKeyword_4_0_14 = (Keyword)cValueAlternatives_4_0.eContents().get(14);
		private final Keyword cValueWaitKeyword_4_0_15 = (Keyword)cValueAlternatives_4_0.eContents().get(15);
		
		//fx_cursor_property:
		//	property="-fx-cursor" WS* ":" WS* value=("crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" |
		//	"ne-resize" | "nw-resize" | "n-resize" | "se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" |
		//	"wait");
		public ParserRule getRule() { return rule; }

		//property="-fx-cursor" WS* ":" WS* value=("crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" |
		//"ne-resize" | "nw-resize" | "n-resize" | "se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" |
		//"wait")
		public Group getGroup() { return cGroup; }

		//property="-fx-cursor"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-cursor"
		public Keyword getPropertyFxCursorKeyword_0_0() { return cPropertyFxCursorKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" | "ne-resize" | "nw-resize" | "n-resize" |
		//"se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" | "wait")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" | "ne-resize" | "nw-resize" | "n-resize" |
		//"se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" | "wait"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"crosshair"
		public Keyword getValueCrosshairKeyword_4_0_0() { return cValueCrosshairKeyword_4_0_0; }

		//"default"
		public Keyword getValueDefaultKeyword_4_0_1() { return cValueDefaultKeyword_4_0_1; }

		//"hand"
		public Keyword getValueHandKeyword_4_0_2() { return cValueHandKeyword_4_0_2; }

		//"move"
		public Keyword getValueMoveKeyword_4_0_3() { return cValueMoveKeyword_4_0_3; }

		//"e-resize"
		public Keyword getValueEResizeKeyword_4_0_4() { return cValueEResizeKeyword_4_0_4; }

		//"h-resize"
		public Keyword getValueHResizeKeyword_4_0_5() { return cValueHResizeKeyword_4_0_5; }

		//"ne-resize"
		public Keyword getValueNeResizeKeyword_4_0_6() { return cValueNeResizeKeyword_4_0_6; }

		//"nw-resize"
		public Keyword getValueNwResizeKeyword_4_0_7() { return cValueNwResizeKeyword_4_0_7; }

		//"n-resize"
		public Keyword getValueNResizeKeyword_4_0_8() { return cValueNResizeKeyword_4_0_8; }

		//"se-resize"
		public Keyword getValueSeResizeKeyword_4_0_9() { return cValueSeResizeKeyword_4_0_9; }

		//"sw-resize"
		public Keyword getValueSwResizeKeyword_4_0_10() { return cValueSwResizeKeyword_4_0_10; }

		//"s-resize"
		public Keyword getValueSResizeKeyword_4_0_11() { return cValueSResizeKeyword_4_0_11; }

		//"w-resize"
		public Keyword getValueWResizeKeyword_4_0_12() { return cValueWResizeKeyword_4_0_12; }

		//"v-resize"
		public Keyword getValueVResizeKeyword_4_0_13() { return cValueVResizeKeyword_4_0_13; }

		//"text"
		public Keyword getValueTextKeyword_4_0_14() { return cValueTextKeyword_4_0_14; }

		//"wait"
		public Keyword getValueWaitKeyword_4_0_15() { return cValueWaitKeyword_4_0_15; }
	}

	public class Fx_effect_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_effect_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFxEffectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueEffectParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_effect_property:
		//	"-fx-effect" WS* ":" WS* value=Effect;
		public ParserRule getRule() { return rule; }

		//"-fx-effect" WS* ":" WS* value=Effect
		public Group getGroup() { return cGroup; }

		//"-fx-effect"
		public Keyword getFxEffectKeyword_0() { return cFxEffectKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=Effect
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//Effect
		public RuleCall getValueEffectParserRuleCall_4_0() { return cValueEffectParserRuleCall_4_0; }
	}

	public class Fx_boolean_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_boolean_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFocusTraversableKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxPannableKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxHgapKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxVposKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxSnapToPixelKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxVerticalKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxSmoothKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cPropertyFxStrikethroughKeyword_0_0_7 = (Keyword)cPropertyAlternatives_0_0.eContents().get(7);
		private final Keyword cPropertyFxUnderlineKeyword_0_0_8 = (Keyword)cPropertyAlternatives_0_0.eContents().get(8);
		private final Keyword cPropertyFxScaleShapeKeyword_0_0_9 = (Keyword)cPropertyAlternatives_0_0.eContents().get(9);
		private final Keyword cPropertyFxVerticalZeroLineVisibleKeyword_0_0_10 = (Keyword)cPropertyAlternatives_0_0.eContents().get(10);
		private final Keyword cPropertyFxVerticalGridLineVisibleKeyword_0_0_11 = (Keyword)cPropertyAlternatives_0_0.eContents().get(11);
		private final Keyword cPropertyFxHorizontalZeroLineVisibleKeyword_0_0_12 = (Keyword)cPropertyAlternatives_0_0.eContents().get(12);
		private final Keyword cPropertyFxHorizontalGridLineVisibleKeyword_0_0_13 = (Keyword)cPropertyAlternatives_0_0.eContents().get(13);
		private final Keyword cPropertyFxPieValueVisibleKeyword_0_0_14 = (Keyword)cPropertyAlternatives_0_0.eContents().get(14);
		private final Keyword cPropertyFxPieToLabelLineCurvedKeyword_0_0_15 = (Keyword)cPropertyAlternatives_0_0.eContents().get(15);
		private final Keyword cPropertyFxPieLabelVisibleKeyword_0_0_16 = (Keyword)cPropertyAlternatives_0_0.eContents().get(16);
		private final Keyword cPropertyFxClockwiseKeyword_0_0_17 = (Keyword)cPropertyAlternatives_0_0.eContents().get(17);
		private final Keyword cPropertyFxShowSymbolsKeyword_0_0_18 = (Keyword)cPropertyAlternatives_0_0.eContents().get(18);
		private final Keyword cPropertyFxLegendVisibleKeyword_0_0_19 = (Keyword)cPropertyAlternatives_0_0.eContents().get(19);
		private final Keyword cPropertyFxScaleBubbleRadiusUsingAxisKeyword_0_0_20 = (Keyword)cPropertyAlternatives_0_0.eContents().get(20);
		private final Keyword cPropertyFxSelectOnFocusKeyword_0_0_21 = (Keyword)cPropertyAlternatives_0_0.eContents().get(21);
		private final Keyword cPropertyFxEditableKeyword_0_0_22 = (Keyword)cPropertyAlternatives_0_0.eContents().get(22);
		private final Keyword cPropertyFxSnapToTicksKeyword_0_0_23 = (Keyword)cPropertyAlternatives_0_0.eContents().get(23);
		private final Keyword cPropertyFxShowTickMarksKeyword_0_0_24 = (Keyword)cPropertyAlternatives_0_0.eContents().get(24);
		private final Keyword cPropertyFxShowTickLabelsKeyword_0_0_25 = (Keyword)cPropertyAlternatives_0_0.eContents().get(25);
		private final Keyword cPropertyFxFitToWidthKeyword_0_0_26 = (Keyword)cPropertyAlternatives_0_0.eContents().get(26);
		private final Keyword cPropertyFxMinorTickVisibleKeyword_0_0_27 = (Keyword)cPropertyAlternatives_0_0.eContents().get(27);
		private final Keyword cPropertyFxGapStartAndEndKeyword_0_0_28 = (Keyword)cPropertyAlternatives_0_0.eContents().get(28);
		private final Keyword cPropertyFxTickMarkVisibleKeyword_0_0_29 = (Keyword)cPropertyAlternatives_0_0.eContents().get(29);
		private final Keyword cPropertyFxTickLabelsVisibleKeyword_0_0_30 = (Keyword)cPropertyAlternatives_0_0.eContents().get(30);
		private final Keyword cPropertyFxFitToHeightKeyword_0_0_31 = (Keyword)cPropertyAlternatives_0_0.eContents().get(31);
		private final Keyword cPropertyFxClickToPositionKeyword_0_0_32 = (Keyword)cPropertyAlternatives_0_0.eContents().get(32);
		private final Keyword cPropertyFxTextWrapKeyword_0_0_33 = (Keyword)cPropertyAlternatives_0_0.eContents().get(33);
		private final Keyword cPropertyFxPositionShapeKeyword_0_0_34 = (Keyword)cPropertyAlternatives_0_0.eContents().get(34);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueTrueKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueFalseKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		
		//fx_boolean_property:
		//	property=("-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" |
		//	"-fx-smooth" | "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
		//	"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
		//	"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
		//	"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
		//	"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
		//	"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
		//	"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape") WS* ":" WS* value=("true" |
		//	"false");
		public ParserRule getRule() { return rule; }

		//property=("-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" |
		//"-fx-smooth" | "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
		//"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
		//"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
		//"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
		//"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
		//"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
		//"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape") WS* ":" WS* value=("true" |
		//"false")
		public Group getGroup() { return cGroup; }

		//property=("-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" |
		//"-fx-smooth" | "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
		//"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
		//"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
		//"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
		//"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
		//"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
		//"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" | "-fx-smooth"
		//| "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
		//"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
		//"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
		//"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
		//"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
		//"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
		//"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-focus-traversable"
		public Keyword getPropertyFxFocusTraversableKeyword_0_0_0() { return cPropertyFxFocusTraversableKeyword_0_0_0; }

		//"-fx-pannable"
		public Keyword getPropertyFxPannableKeyword_0_0_1() { return cPropertyFxPannableKeyword_0_0_1; }

		//"-fx-hgap"
		public Keyword getPropertyFxHgapKeyword_0_0_2() { return cPropertyFxHgapKeyword_0_0_2; }

		//"-fx-vpos"
		public Keyword getPropertyFxVposKeyword_0_0_3() { return cPropertyFxVposKeyword_0_0_3; }

		//"-fx-snap-to-pixel"
		public Keyword getPropertyFxSnapToPixelKeyword_0_0_4() { return cPropertyFxSnapToPixelKeyword_0_0_4; }

		//"-fx-vertical"
		public Keyword getPropertyFxVerticalKeyword_0_0_5() { return cPropertyFxVerticalKeyword_0_0_5; }

		//"-fx-smooth"
		public Keyword getPropertyFxSmoothKeyword_0_0_6() { return cPropertyFxSmoothKeyword_0_0_6; }

		//"-fx-strikethrough"
		public Keyword getPropertyFxStrikethroughKeyword_0_0_7() { return cPropertyFxStrikethroughKeyword_0_0_7; }

		//"-fx-underline"
		public Keyword getPropertyFxUnderlineKeyword_0_0_8() { return cPropertyFxUnderlineKeyword_0_0_8; }

		//"-fx-scale-shape"
		public Keyword getPropertyFxScaleShapeKeyword_0_0_9() { return cPropertyFxScaleShapeKeyword_0_0_9; }

		//"-fx-vertical-zero-line-visible"
		public Keyword getPropertyFxVerticalZeroLineVisibleKeyword_0_0_10() { return cPropertyFxVerticalZeroLineVisibleKeyword_0_0_10; }

		//"-fx-vertical-grid-line-visible"
		public Keyword getPropertyFxVerticalGridLineVisibleKeyword_0_0_11() { return cPropertyFxVerticalGridLineVisibleKeyword_0_0_11; }

		//"-fx-horizontal-zero-line-visible"
		public Keyword getPropertyFxHorizontalZeroLineVisibleKeyword_0_0_12() { return cPropertyFxHorizontalZeroLineVisibleKeyword_0_0_12; }

		//"-fx-horizontal-grid-line-visible"
		public Keyword getPropertyFxHorizontalGridLineVisibleKeyword_0_0_13() { return cPropertyFxHorizontalGridLineVisibleKeyword_0_0_13; }

		//"-fx-pie-value-visible"
		public Keyword getPropertyFxPieValueVisibleKeyword_0_0_14() { return cPropertyFxPieValueVisibleKeyword_0_0_14; }

		//"-fx-pie-to-label-line-curved"
		public Keyword getPropertyFxPieToLabelLineCurvedKeyword_0_0_15() { return cPropertyFxPieToLabelLineCurvedKeyword_0_0_15; }

		//"-fx-pie-label-visible"
		public Keyword getPropertyFxPieLabelVisibleKeyword_0_0_16() { return cPropertyFxPieLabelVisibleKeyword_0_0_16; }

		//"-fx-clockwise"
		public Keyword getPropertyFxClockwiseKeyword_0_0_17() { return cPropertyFxClockwiseKeyword_0_0_17; }

		//"-fx-show-symbols"
		public Keyword getPropertyFxShowSymbolsKeyword_0_0_18() { return cPropertyFxShowSymbolsKeyword_0_0_18; }

		//"-fx-legend-visible"
		public Keyword getPropertyFxLegendVisibleKeyword_0_0_19() { return cPropertyFxLegendVisibleKeyword_0_0_19; }

		//"-fx-scale-bubble-radius-using-axis"
		public Keyword getPropertyFxScaleBubbleRadiusUsingAxisKeyword_0_0_20() { return cPropertyFxScaleBubbleRadiusUsingAxisKeyword_0_0_20; }

		//"-fx-select-on-focus"
		public Keyword getPropertyFxSelectOnFocusKeyword_0_0_21() { return cPropertyFxSelectOnFocusKeyword_0_0_21; }

		//"-fx-editable"
		public Keyword getPropertyFxEditableKeyword_0_0_22() { return cPropertyFxEditableKeyword_0_0_22; }

		//"-fx-snap-to-ticks"
		public Keyword getPropertyFxSnapToTicksKeyword_0_0_23() { return cPropertyFxSnapToTicksKeyword_0_0_23; }

		//"-fx-show-tick-marks"
		public Keyword getPropertyFxShowTickMarksKeyword_0_0_24() { return cPropertyFxShowTickMarksKeyword_0_0_24; }

		//"-fx-show-tick-labels"
		public Keyword getPropertyFxShowTickLabelsKeyword_0_0_25() { return cPropertyFxShowTickLabelsKeyword_0_0_25; }

		//"-fx-fit-to-width"
		public Keyword getPropertyFxFitToWidthKeyword_0_0_26() { return cPropertyFxFitToWidthKeyword_0_0_26; }

		//"-fx-minor-tick-visible"
		public Keyword getPropertyFxMinorTickVisibleKeyword_0_0_27() { return cPropertyFxMinorTickVisibleKeyword_0_0_27; }

		//"-fx-gap-start-and-end"
		public Keyword getPropertyFxGapStartAndEndKeyword_0_0_28() { return cPropertyFxGapStartAndEndKeyword_0_0_28; }

		//"-fx-tick-mark-visible"
		public Keyword getPropertyFxTickMarkVisibleKeyword_0_0_29() { return cPropertyFxTickMarkVisibleKeyword_0_0_29; }

		//"-fx-tick-labels-visible"
		public Keyword getPropertyFxTickLabelsVisibleKeyword_0_0_30() { return cPropertyFxTickLabelsVisibleKeyword_0_0_30; }

		//"-fx-fit-to-height"
		public Keyword getPropertyFxFitToHeightKeyword_0_0_31() { return cPropertyFxFitToHeightKeyword_0_0_31; }

		//"-fx-click-to-position"
		public Keyword getPropertyFxClickToPositionKeyword_0_0_32() { return cPropertyFxClickToPositionKeyword_0_0_32; }

		//"-fx-text-wrap"
		public Keyword getPropertyFxTextWrapKeyword_0_0_33() { return cPropertyFxTextWrapKeyword_0_0_33; }

		//"-fx-position-shape"
		public Keyword getPropertyFxPositionShapeKeyword_0_0_34() { return cPropertyFxPositionShapeKeyword_0_0_34; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("true" | "false")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"true" | "false"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"true"
		public Keyword getValueTrueKeyword_4_0_0() { return cValueTrueKeyword_4_0_0; }

		//"false"
		public Keyword getValueFalseKeyword_4_0_1() { return cValueFalseKeyword_4_0_1; }
	}

	public class Fx_size_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_size_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxSpacingKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxArcHeightKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxArcWidthKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxMinorTickLengthKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxStrokeWidthKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxStartMarginKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxEndMarginKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cPropertyFxTickMarkStrokeWidthKeyword_0_0_7 = (Keyword)cPropertyAlternatives_0_0.eContents().get(7);
		private final Keyword cPropertyFxTickMarkLengthKeyword_0_0_8 = (Keyword)cPropertyAlternatives_0_0.eContents().get(8);
		private final Keyword cPropertyFxTickLabelTickGapKeyword_0_0_9 = (Keyword)cPropertyAlternatives_0_0.eContents().get(9);
		private final Keyword cPropertyFxAxisStrokeWidthKeyword_0_0_10 = (Keyword)cPropertyAlternatives_0_0.eContents().get(10);
		private final Keyword cPropertyFxLabelTickGapKeyword_0_0_11 = (Keyword)cPropertyAlternatives_0_0.eContents().get(11);
		private final Keyword cPropertyFxVerticalGridLineStrokeWidthKeyword_0_0_12 = (Keyword)cPropertyAlternatives_0_0.eContents().get(12);
		private final Keyword cPropertyFxPlotBackgroundStrokeWidthKeyword_0_0_13 = (Keyword)cPropertyAlternatives_0_0.eContents().get(13);
		private final Keyword cPropertyFxHorizontalGridLineStrokeWidthKeyword_0_0_14 = (Keyword)cPropertyAlternatives_0_0.eContents().get(14);
		private final Keyword cPropertyFxPieThicknessKeyword_0_0_15 = (Keyword)cPropertyAlternatives_0_0.eContents().get(15);
		private final Keyword cPropertyFxPieStrokeWidthKeyword_0_0_16 = (Keyword)cPropertyAlternatives_0_0.eContents().get(16);
		private final Keyword cPropertyFxTitleGapKeyword_0_0_17 = (Keyword)cPropertyAlternatives_0_0.eContents().get(17);
		private final Keyword cPropertyFxLegendGapKeyword_0_0_18 = (Keyword)cPropertyAlternatives_0_0.eContents().get(18);
		private final Keyword cPropertyFxHoverStrokeWidthKeyword_0_0_19 = (Keyword)cPropertyAlternatives_0_0.eContents().get(19);
		private final Keyword cPropertyFxChartBackgroundStrokeWidthKeyword_0_0_20 = (Keyword)cPropertyAlternatives_0_0.eContents().get(20);
		private final Keyword cPropertyFxOffsetYKeyword_0_0_21 = (Keyword)cPropertyAlternatives_0_0.eContents().get(21);
		private final Keyword cPropertyFxOffsetXKeyword_0_0_22 = (Keyword)cPropertyAlternatives_0_0.eContents().get(22);
		private final Keyword cPropertyFxCategoryGapKeyword_0_0_23 = (Keyword)cPropertyAlternatives_0_0.eContents().get(23);
		private final Keyword cPropertyFxBarGapKeyword_0_0_24 = (Keyword)cPropertyAlternatives_0_0.eContents().get(24);
		private final Keyword cPropertyFxGraphicTextGapKeyword_0_0_25 = (Keyword)cPropertyAlternatives_0_0.eContents().get(25);
		private final Keyword cPropertyFxTabSpacingKeyword_0_0_26 = (Keyword)cPropertyAlternatives_0_0.eContents().get(26);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueSIZEParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_size_property:
		//	property=("-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" |
		//	"-fx-start-margin" | "-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" |
		//	"-fx-tick-label-tick-gap" | "-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
		//	"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
		//	"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
		//	"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
		//	"-fx-graphic-text-gap" | "-fx-tab-spacing") WS* ":" WS* value=SIZE;
		public ParserRule getRule() { return rule; }

		//property=("-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" |
		//"-fx-start-margin" | "-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" |
		//"-fx-tick-label-tick-gap" | "-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
		//"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
		//"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
		//"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
		//"-fx-graphic-text-gap" | "-fx-tab-spacing") WS* ":" WS* value=SIZE
		public Group getGroup() { return cGroup; }

		//property=("-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" |
		//"-fx-start-margin" | "-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" |
		//"-fx-tick-label-tick-gap" | "-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
		//"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
		//"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
		//"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
		//"-fx-graphic-text-gap" | "-fx-tab-spacing")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" | "-fx-start-margin" |
		//"-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" | "-fx-tick-label-tick-gap" |
		//"-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
		//"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
		//"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
		//"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
		//"-fx-graphic-text-gap" | "-fx-tab-spacing"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-spacing"
		public Keyword getPropertyFxSpacingKeyword_0_0_0() { return cPropertyFxSpacingKeyword_0_0_0; }

		//"-fx-arc-height"
		public Keyword getPropertyFxArcHeightKeyword_0_0_1() { return cPropertyFxArcHeightKeyword_0_0_1; }

		//"-fx-arc-width"
		public Keyword getPropertyFxArcWidthKeyword_0_0_2() { return cPropertyFxArcWidthKeyword_0_0_2; }

		//"-fx-minor-tick-length"
		public Keyword getPropertyFxMinorTickLengthKeyword_0_0_3() { return cPropertyFxMinorTickLengthKeyword_0_0_3; }

		//"-fx-stroke-width"
		public Keyword getPropertyFxStrokeWidthKeyword_0_0_4() { return cPropertyFxStrokeWidthKeyword_0_0_4; }

		//"-fx-start-margin"
		public Keyword getPropertyFxStartMarginKeyword_0_0_5() { return cPropertyFxStartMarginKeyword_0_0_5; }

		//"-fx-end-margin"
		public Keyword getPropertyFxEndMarginKeyword_0_0_6() { return cPropertyFxEndMarginKeyword_0_0_6; }

		//"-fx-tick-mark-stroke-width"
		public Keyword getPropertyFxTickMarkStrokeWidthKeyword_0_0_7() { return cPropertyFxTickMarkStrokeWidthKeyword_0_0_7; }

		//"-fx-tick-mark-length"
		public Keyword getPropertyFxTickMarkLengthKeyword_0_0_8() { return cPropertyFxTickMarkLengthKeyword_0_0_8; }

		//"-fx-tick-label-tick-gap"
		public Keyword getPropertyFxTickLabelTickGapKeyword_0_0_9() { return cPropertyFxTickLabelTickGapKeyword_0_0_9; }

		//"-fx-axis-stroke-width"
		public Keyword getPropertyFxAxisStrokeWidthKeyword_0_0_10() { return cPropertyFxAxisStrokeWidthKeyword_0_0_10; }

		//"-fx-label-tick-gap"
		public Keyword getPropertyFxLabelTickGapKeyword_0_0_11() { return cPropertyFxLabelTickGapKeyword_0_0_11; }

		//"-fx-vertical-grid-line-stroke-width"
		public Keyword getPropertyFxVerticalGridLineStrokeWidthKeyword_0_0_12() { return cPropertyFxVerticalGridLineStrokeWidthKeyword_0_0_12; }

		//"-fx-plot-background-stroke-width"
		public Keyword getPropertyFxPlotBackgroundStrokeWidthKeyword_0_0_13() { return cPropertyFxPlotBackgroundStrokeWidthKeyword_0_0_13; }

		//"-fx-horizontal-grid-line-stroke-width"
		public Keyword getPropertyFxHorizontalGridLineStrokeWidthKeyword_0_0_14() { return cPropertyFxHorizontalGridLineStrokeWidthKeyword_0_0_14; }

		//"-fx-pie-thickness"
		public Keyword getPropertyFxPieThicknessKeyword_0_0_15() { return cPropertyFxPieThicknessKeyword_0_0_15; }

		//"-fx-pie-stroke-width"
		public Keyword getPropertyFxPieStrokeWidthKeyword_0_0_16() { return cPropertyFxPieStrokeWidthKeyword_0_0_16; }

		//"-fx-title-gap"
		public Keyword getPropertyFxTitleGapKeyword_0_0_17() { return cPropertyFxTitleGapKeyword_0_0_17; }

		//"-fx-legend-gap"
		public Keyword getPropertyFxLegendGapKeyword_0_0_18() { return cPropertyFxLegendGapKeyword_0_0_18; }

		//"-fx-hover-stroke-width"
		public Keyword getPropertyFxHoverStrokeWidthKeyword_0_0_19() { return cPropertyFxHoverStrokeWidthKeyword_0_0_19; }

		//"-fx-chart-background-stroke-width"
		public Keyword getPropertyFxChartBackgroundStrokeWidthKeyword_0_0_20() { return cPropertyFxChartBackgroundStrokeWidthKeyword_0_0_20; }

		//"-fx-offset-y"
		public Keyword getPropertyFxOffsetYKeyword_0_0_21() { return cPropertyFxOffsetYKeyword_0_0_21; }

		//"-fx-offset-x"
		public Keyword getPropertyFxOffsetXKeyword_0_0_22() { return cPropertyFxOffsetXKeyword_0_0_22; }

		//"-fx-category-gap"
		public Keyword getPropertyFxCategoryGapKeyword_0_0_23() { return cPropertyFxCategoryGapKeyword_0_0_23; }

		//"-fx-bar-gap"
		public Keyword getPropertyFxBarGapKeyword_0_0_24() { return cPropertyFxBarGapKeyword_0_0_24; }

		//"-fx-graphic-text-gap"
		public Keyword getPropertyFxGraphicTextGapKeyword_0_0_25() { return cPropertyFxGraphicTextGapKeyword_0_0_25; }

		//"-fx-tab-spacing"
		public Keyword getPropertyFxTabSpacingKeyword_0_0_26() { return cPropertyFxTabSpacingKeyword_0_0_26; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=SIZE
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//SIZE
		public RuleCall getValueSIZEParserRuleCall_4_0() { return cValueSIZEParserRuleCall_4_0; }
	}

	public class Fx_number_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_number_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxRotateKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxScaleXKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxScaleYKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxScaleZKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxTranslateXKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxTranslateYKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxTranslateZKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cPropertyFxVgapKeyword_0_0_7 = (Keyword)cPropertyAlternatives_0_0.eContents().get(7);
		private final Keyword cPropertyFxTileHeightKeyword_0_0_8 = (Keyword)cPropertyAlternatives_0_0.eContents().get(8);
		private final Keyword cPropertyFxTileWidthKeyword_0_0_9 = (Keyword)cPropertyAlternatives_0_0.eContents().get(9);
		private final Keyword cPropertyFxStrokeDashOffsetKeyword_0_0_10 = (Keyword)cPropertyAlternatives_0_0.eContents().get(10);
		private final Keyword cPropertyFxStrokeMiterLimitKeyword_0_0_11 = (Keyword)cPropertyAlternatives_0_0.eContents().get(11);
		private final Keyword cPropertyFxBlockIncrementKeyword_0_0_12 = (Keyword)cPropertyAlternatives_0_0.eContents().get(12);
		private final Keyword cPropertyFxUnitIncrementKeyword_0_0_13 = (Keyword)cPropertyAlternatives_0_0.eContents().get(13);
		private final Keyword cPropertyFxMajorTickUnitKeyword_0_0_14 = (Keyword)cPropertyAlternatives_0_0.eContents().get(14);
		private final Keyword cPropertyFxDataOpacityKeyword_0_0_15 = (Keyword)cPropertyAlternatives_0_0.eContents().get(15);
		private final Keyword cPropertyFxRadiusScaleKeyword_0_0_16 = (Keyword)cPropertyAlternatives_0_0.eContents().get(16);
		private final Keyword cPropertyFxPieToLabelLineOneLengthKeyword_0_0_17 = (Keyword)cPropertyAlternatives_0_0.eContents().get(17);
		private final Keyword cPropertyFxPieToLabelLineStrokeWidthKeyword_0_0_18 = (Keyword)cPropertyAlternatives_0_0.eContents().get(18);
		private final Keyword cPropertyFxPieToLabelLineTwoLengthKeyword_0_0_19 = (Keyword)cPropertyAlternatives_0_0.eContents().get(19);
		private final Keyword cPropertyFxStartAngleKeyword_0_0_20 = (Keyword)cPropertyAlternatives_0_0.eContents().get(20);
		private final Keyword cPropertyFxTickUnitKeyword_0_0_21 = (Keyword)cPropertyAlternatives_0_0.eContents().get(21);
		private final Keyword cPropertyFxIndentKeyword_0_0_22 = (Keyword)cPropertyAlternatives_0_0.eContents().get(22);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueNUMBERParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_number_property:
		//	property=("-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" |
		//	"-fx-translate-z" | "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" |
		//	"-fx-stroke-miter-limit" | "-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" |
		//	"-fx-radius-scale" | "-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" |
		//	"-fx-pie-to-label-line-two-length" | "-fx-start-angle" | "-fx-tick-unit" | "-fx-indent") WS* ":" WS* value=NUMBER;
		public ParserRule getRule() { return rule; }

		//property=("-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" |
		//"-fx-translate-z" | "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" |
		//"-fx-stroke-miter-limit" | "-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" |
		//"-fx-radius-scale" | "-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" |
		//"-fx-pie-to-label-line-two-length" | "-fx-start-angle" | "-fx-tick-unit" | "-fx-indent") WS* ":" WS* value=NUMBER
		public Group getGroup() { return cGroup; }

		//property=("-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" |
		//"-fx-translate-z" | "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" |
		//"-fx-stroke-miter-limit" | "-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" |
		//"-fx-radius-scale" | "-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" |
		//"-fx-pie-to-label-line-two-length" | "-fx-start-angle" | "-fx-tick-unit" | "-fx-indent")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" | "-fx-translate-z"
		//| "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" | "-fx-stroke-miter-limit" |
		//"-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" | "-fx-radius-scale" |
		//"-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" | "-fx-pie-to-label-line-two-length" |
		//"-fx-start-angle" | "-fx-tick-unit" | "-fx-indent"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-rotate"
		public Keyword getPropertyFxRotateKeyword_0_0_0() { return cPropertyFxRotateKeyword_0_0_0; }

		//"-fx-scale-x"
		public Keyword getPropertyFxScaleXKeyword_0_0_1() { return cPropertyFxScaleXKeyword_0_0_1; }

		//"-fx-scale-y"
		public Keyword getPropertyFxScaleYKeyword_0_0_2() { return cPropertyFxScaleYKeyword_0_0_2; }

		//"-fx-scale-z"
		public Keyword getPropertyFxScaleZKeyword_0_0_3() { return cPropertyFxScaleZKeyword_0_0_3; }

		//"-fx-translate-x"
		public Keyword getPropertyFxTranslateXKeyword_0_0_4() { return cPropertyFxTranslateXKeyword_0_0_4; }

		//"-fx-translate-y"
		public Keyword getPropertyFxTranslateYKeyword_0_0_5() { return cPropertyFxTranslateYKeyword_0_0_5; }

		//"-fx-translate-z"
		public Keyword getPropertyFxTranslateZKeyword_0_0_6() { return cPropertyFxTranslateZKeyword_0_0_6; }

		//"-fx-vgap"
		public Keyword getPropertyFxVgapKeyword_0_0_7() { return cPropertyFxVgapKeyword_0_0_7; }

		//"-fx-tile-height"
		public Keyword getPropertyFxTileHeightKeyword_0_0_8() { return cPropertyFxTileHeightKeyword_0_0_8; }

		//"-fx-tile-width"
		public Keyword getPropertyFxTileWidthKeyword_0_0_9() { return cPropertyFxTileWidthKeyword_0_0_9; }

		//"-fx-stroke-dash-offset"
		public Keyword getPropertyFxStrokeDashOffsetKeyword_0_0_10() { return cPropertyFxStrokeDashOffsetKeyword_0_0_10; }

		//"-fx-stroke-miter-limit"
		public Keyword getPropertyFxStrokeMiterLimitKeyword_0_0_11() { return cPropertyFxStrokeMiterLimitKeyword_0_0_11; }

		//"-fx-block-increment"
		public Keyword getPropertyFxBlockIncrementKeyword_0_0_12() { return cPropertyFxBlockIncrementKeyword_0_0_12; }

		//"-fx-unit-increment"
		public Keyword getPropertyFxUnitIncrementKeyword_0_0_13() { return cPropertyFxUnitIncrementKeyword_0_0_13; }

		//"-fx-major-tick-unit"
		public Keyword getPropertyFxMajorTickUnitKeyword_0_0_14() { return cPropertyFxMajorTickUnitKeyword_0_0_14; }

		//"-fx-data-opacity"
		public Keyword getPropertyFxDataOpacityKeyword_0_0_15() { return cPropertyFxDataOpacityKeyword_0_0_15; }

		//"-fx-radius-scale"
		public Keyword getPropertyFxRadiusScaleKeyword_0_0_16() { return cPropertyFxRadiusScaleKeyword_0_0_16; }

		//"-fx-pie-to-label-line-one-length"
		public Keyword getPropertyFxPieToLabelLineOneLengthKeyword_0_0_17() { return cPropertyFxPieToLabelLineOneLengthKeyword_0_0_17; }

		//"-fx-pie-to-label-line-stroke-width"
		public Keyword getPropertyFxPieToLabelLineStrokeWidthKeyword_0_0_18() { return cPropertyFxPieToLabelLineStrokeWidthKeyword_0_0_18; }

		//"-fx-pie-to-label-line-two-length"
		public Keyword getPropertyFxPieToLabelLineTwoLengthKeyword_0_0_19() { return cPropertyFxPieToLabelLineTwoLengthKeyword_0_0_19; }

		//"-fx-start-angle"
		public Keyword getPropertyFxStartAngleKeyword_0_0_20() { return cPropertyFxStartAngleKeyword_0_0_20; }

		//"-fx-tick-unit"
		public Keyword getPropertyFxTickUnitKeyword_0_0_21() { return cPropertyFxTickUnitKeyword_0_0_21; }

		//"-fx-indent"
		public Keyword getPropertyFxIndentKeyword_0_0_22() { return cPropertyFxIndentKeyword_0_0_22; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=NUMBER
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_4_0() { return cValueNUMBERParserRuleCall_4_0; }
	}

	public class Fx_integer_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_integer_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxColumnsKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxRowsKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxLinesKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxMinorTickCountKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueIntegerTerminalRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_integer_property:
		//	property=("-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count") WS* ":" WS* value=integer;
		public ParserRule getRule() { return rule; }

		//property=("-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count") WS* ":" WS* value=integer
		public Group getGroup() { return cGroup; }

		//property=("-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-columns"
		public Keyword getPropertyFxColumnsKeyword_0_0_0() { return cPropertyFxColumnsKeyword_0_0_0; }

		//"-fx-rows"
		public Keyword getPropertyFxRowsKeyword_0_0_1() { return cPropertyFxRowsKeyword_0_0_1; }

		//"-fx-lines"
		public Keyword getPropertyFxLinesKeyword_0_0_2() { return cPropertyFxLinesKeyword_0_0_2; }

		//"-fx-minor-tick-count"
		public Keyword getPropertyFxMinorTickCountKeyword_0_0_3() { return cPropertyFxMinorTickCountKeyword_0_0_3; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=integer
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//integer
		public RuleCall getValueIntegerTerminalRuleCall_4_0() { return cValueIntegerTerminalRuleCall_4_0; }
	}

	public class Fx_paint_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_paint_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxFillKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxStrokeKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxTextFillKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxBarFillKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxBarStrokeKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxBottomShelfFillKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxBottomShelfStrokeKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final Keyword cPropertyFxSideShelfFillKeyword_0_0_7 = (Keyword)cPropertyAlternatives_0_0.eContents().get(7);
		private final Keyword cPropertyFxSideShelfStrokeKeyword_0_0_8 = (Keyword)cPropertyAlternatives_0_0.eContents().get(8);
		private final Keyword cPropertyFxZeroShelfFillKeyword_0_0_9 = (Keyword)cPropertyAlternatives_0_0.eContents().get(9);
		private final Keyword cPropertyFxZeroShelfStrokeKeyword_0_0_10 = (Keyword)cPropertyAlternatives_0_0.eContents().get(10);
		private final Keyword cPropertyFxChartBackgroundFillKeyword_0_0_11 = (Keyword)cPropertyAlternatives_0_0.eContents().get(11);
		private final Keyword cPropertyFxChartBackgroundStrokeKeyword_0_0_12 = (Keyword)cPropertyAlternatives_0_0.eContents().get(12);
		private final Keyword cPropertyFxHoverStrokeKeyword_0_0_13 = (Keyword)cPropertyAlternatives_0_0.eContents().get(13);
		private final Keyword cPropertyFxTitleFillKeyword_0_0_14 = (Keyword)cPropertyAlternatives_0_0.eContents().get(14);
		private final Keyword cPropertyFxPieLabelFillKeyword_0_0_15 = (Keyword)cPropertyAlternatives_0_0.eContents().get(15);
		private final Keyword cPropertyFxPieStrokeKeyword_0_0_16 = (Keyword)cPropertyAlternatives_0_0.eContents().get(16);
		private final Keyword cPropertyFxPieToLabelLineStrokeKeyword_0_0_17 = (Keyword)cPropertyAlternatives_0_0.eContents().get(17);
		private final Keyword cPropertyFxPieValueLabelFillKeyword_0_0_18 = (Keyword)cPropertyAlternatives_0_0.eContents().get(18);
		private final Keyword cPropertyFxHorizontalAlternateRowFillKeyword_0_0_19 = (Keyword)cPropertyAlternatives_0_0.eContents().get(19);
		private final Keyword cPropertyFxPlotBackgroundFillKeyword_0_0_20 = (Keyword)cPropertyAlternatives_0_0.eContents().get(20);
		private final Keyword cPropertyFxHorizontalGridLineStrokeKeyword_0_0_21 = (Keyword)cPropertyAlternatives_0_0.eContents().get(21);
		private final Keyword cPropertyFxPlotBackgroundStrokeKeyword_0_0_22 = (Keyword)cPropertyAlternatives_0_0.eContents().get(22);
		private final Keyword cPropertyFxVerticalAlternateRowFillKeyword_0_0_23 = (Keyword)cPropertyAlternatives_0_0.eContents().get(23);
		private final Keyword cPropertyFxVerticalGridLineStrokeKeyword_0_0_24 = (Keyword)cPropertyAlternatives_0_0.eContents().get(24);
		private final Keyword cPropertyFxAxisStrokeKeyword_0_0_25 = (Keyword)cPropertyAlternatives_0_0.eContents().get(25);
		private final Keyword cPropertyFxTickLabelFillKeyword_0_0_26 = (Keyword)cPropertyAlternatives_0_0.eContents().get(26);
		private final Keyword cPropertyFxLabelFillKeyword_0_0_27 = (Keyword)cPropertyAlternatives_0_0.eContents().get(27);
		private final Keyword cPropertyFxTickMarkStrokeKeyword_0_0_28 = (Keyword)cPropertyAlternatives_0_0.eContents().get(28);
		private final Keyword cPropertyFxHoverFillKeyword_0_0_29 = (Keyword)cPropertyAlternatives_0_0.eContents().get(29);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuePaintParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_paint_property:
		//	property=("-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
		//	"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
		//	"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
		//	"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
		//	"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
		//	"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
		//	"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" |
		//	"-fx-tick-mark-stroke" | "-fx-hover-fill") WS* ":" WS* value=Paint;
		public ParserRule getRule() { return rule; }

		//property=("-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
		//"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
		//"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
		//"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
		//"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
		//"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
		//"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" | "-fx-tick-mark-stroke"
		//| "-fx-hover-fill") WS* ":" WS* value=Paint
		public Group getGroup() { return cGroup; }

		//property=("-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
		//"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
		//"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
		//"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
		//"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
		//"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
		//"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" | "-fx-tick-mark-stroke"
		//| "-fx-hover-fill")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
		//"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
		//"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
		//"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
		//"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
		//"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
		//"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" | "-fx-tick-mark-stroke"
		//| "-fx-hover-fill"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-fill"
		public Keyword getPropertyFxFillKeyword_0_0_0() { return cPropertyFxFillKeyword_0_0_0; }

		//"-fx-stroke"
		public Keyword getPropertyFxStrokeKeyword_0_0_1() { return cPropertyFxStrokeKeyword_0_0_1; }

		//"-fx-text-fill"
		public Keyword getPropertyFxTextFillKeyword_0_0_2() { return cPropertyFxTextFillKeyword_0_0_2; }

		//"-fx-bar-fill"
		public Keyword getPropertyFxBarFillKeyword_0_0_3() { return cPropertyFxBarFillKeyword_0_0_3; }

		//"-fx-bar-stroke"
		public Keyword getPropertyFxBarStrokeKeyword_0_0_4() { return cPropertyFxBarStrokeKeyword_0_0_4; }

		//"-fx-bottom-shelf-fill"
		public Keyword getPropertyFxBottomShelfFillKeyword_0_0_5() { return cPropertyFxBottomShelfFillKeyword_0_0_5; }

		//"-fx-bottom-shelf-stroke"
		public Keyword getPropertyFxBottomShelfStrokeKeyword_0_0_6() { return cPropertyFxBottomShelfStrokeKeyword_0_0_6; }

		//"-fx-side-shelf-fill"
		public Keyword getPropertyFxSideShelfFillKeyword_0_0_7() { return cPropertyFxSideShelfFillKeyword_0_0_7; }

		//"-fx-side-shelf-stroke"
		public Keyword getPropertyFxSideShelfStrokeKeyword_0_0_8() { return cPropertyFxSideShelfStrokeKeyword_0_0_8; }

		//"-fx-zero-shelf-fill"
		public Keyword getPropertyFxZeroShelfFillKeyword_0_0_9() { return cPropertyFxZeroShelfFillKeyword_0_0_9; }

		//"-fx-zero-shelf-stroke"
		public Keyword getPropertyFxZeroShelfStrokeKeyword_0_0_10() { return cPropertyFxZeroShelfStrokeKeyword_0_0_10; }

		//"-fx-chart-background-fill"
		public Keyword getPropertyFxChartBackgroundFillKeyword_0_0_11() { return cPropertyFxChartBackgroundFillKeyword_0_0_11; }

		//"-fx-chart-background-stroke"
		public Keyword getPropertyFxChartBackgroundStrokeKeyword_0_0_12() { return cPropertyFxChartBackgroundStrokeKeyword_0_0_12; }

		//"-fx-hover-stroke"
		public Keyword getPropertyFxHoverStrokeKeyword_0_0_13() { return cPropertyFxHoverStrokeKeyword_0_0_13; }

		//"-fx-title-fill"
		public Keyword getPropertyFxTitleFillKeyword_0_0_14() { return cPropertyFxTitleFillKeyword_0_0_14; }

		//"-fx-pie-label-fill"
		public Keyword getPropertyFxPieLabelFillKeyword_0_0_15() { return cPropertyFxPieLabelFillKeyword_0_0_15; }

		//"-fx-pie-stroke"
		public Keyword getPropertyFxPieStrokeKeyword_0_0_16() { return cPropertyFxPieStrokeKeyword_0_0_16; }

		//"-fx-pie-to-label-line-stroke"
		public Keyword getPropertyFxPieToLabelLineStrokeKeyword_0_0_17() { return cPropertyFxPieToLabelLineStrokeKeyword_0_0_17; }

		//"-fx-pie-value-label-fill"
		public Keyword getPropertyFxPieValueLabelFillKeyword_0_0_18() { return cPropertyFxPieValueLabelFillKeyword_0_0_18; }

		//"-fx-horizontal-alternate-row-fill"
		public Keyword getPropertyFxHorizontalAlternateRowFillKeyword_0_0_19() { return cPropertyFxHorizontalAlternateRowFillKeyword_0_0_19; }

		//"-fx-plot-background-fill"
		public Keyword getPropertyFxPlotBackgroundFillKeyword_0_0_20() { return cPropertyFxPlotBackgroundFillKeyword_0_0_20; }

		//"-fx-horizontal-grid-line-stroke"
		public Keyword getPropertyFxHorizontalGridLineStrokeKeyword_0_0_21() { return cPropertyFxHorizontalGridLineStrokeKeyword_0_0_21; }

		//"-fx-plot-background-stroke"
		public Keyword getPropertyFxPlotBackgroundStrokeKeyword_0_0_22() { return cPropertyFxPlotBackgroundStrokeKeyword_0_0_22; }

		//"-fx-vertical-alternate-row-fill"
		public Keyword getPropertyFxVerticalAlternateRowFillKeyword_0_0_23() { return cPropertyFxVerticalAlternateRowFillKeyword_0_0_23; }

		//"-fx-vertical-grid-line-stroke"
		public Keyword getPropertyFxVerticalGridLineStrokeKeyword_0_0_24() { return cPropertyFxVerticalGridLineStrokeKeyword_0_0_24; }

		//"-fx-axis-stroke"
		public Keyword getPropertyFxAxisStrokeKeyword_0_0_25() { return cPropertyFxAxisStrokeKeyword_0_0_25; }

		//"-fx-tick-label-fill"
		public Keyword getPropertyFxTickLabelFillKeyword_0_0_26() { return cPropertyFxTickLabelFillKeyword_0_0_26; }

		//"-fx-label-fill"
		public Keyword getPropertyFxLabelFillKeyword_0_0_27() { return cPropertyFxLabelFillKeyword_0_0_27; }

		//"-fx-tick-mark-stroke"
		public Keyword getPropertyFxTickMarkStrokeKeyword_0_0_28() { return cPropertyFxTickMarkStrokeKeyword_0_0_28; }

		//"-fx-hover-fill"
		public Keyword getPropertyFxHoverFillKeyword_0_0_29() { return cPropertyFxHoverFillKeyword_0_0_29; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=Paint
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//Paint
		public RuleCall getValuePaintParserRuleCall_4_0() { return cValuePaintParserRuleCall_4_0; }
	}

	public class Fx_blend_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_blend_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxBlendModeKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueAddKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueBlueKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueColorBurnKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		private final Keyword cValueColorDodgeKeyword_4_0_3 = (Keyword)cValueAlternatives_4_0.eContents().get(3);
		private final Keyword cValueDarkenKeyword_4_0_4 = (Keyword)cValueAlternatives_4_0.eContents().get(4);
		private final Keyword cValueDifferenceKeyword_4_0_5 = (Keyword)cValueAlternatives_4_0.eContents().get(5);
		private final Keyword cValueExclusionKeyword_4_0_6 = (Keyword)cValueAlternatives_4_0.eContents().get(6);
		private final Keyword cValueGreenKeyword_4_0_7 = (Keyword)cValueAlternatives_4_0.eContents().get(7);
		private final Keyword cValueHardLightKeyword_4_0_8 = (Keyword)cValueAlternatives_4_0.eContents().get(8);
		private final Keyword cValueLightenKeyword_4_0_9 = (Keyword)cValueAlternatives_4_0.eContents().get(9);
		private final Keyword cValueMultiplyKeyword_4_0_10 = (Keyword)cValueAlternatives_4_0.eContents().get(10);
		private final Keyword cValueOverlayKeyword_4_0_11 = (Keyword)cValueAlternatives_4_0.eContents().get(11);
		private final Keyword cValueRedKeyword_4_0_12 = (Keyword)cValueAlternatives_4_0.eContents().get(12);
		private final Keyword cValueScreenKeyword_4_0_13 = (Keyword)cValueAlternatives_4_0.eContents().get(13);
		private final Keyword cValueSoftLightKeyword_4_0_14 = (Keyword)cValueAlternatives_4_0.eContents().get(14);
		private final Keyword cValueSrcAtopKeyword_4_0_15 = (Keyword)cValueAlternatives_4_0.eContents().get(15);
		private final Keyword cValueSrcInKeyword_4_0_16 = (Keyword)cValueAlternatives_4_0.eContents().get(16);
		private final Keyword cValueSrcOutKeyword_4_0_17 = (Keyword)cValueAlternatives_4_0.eContents().get(17);
		private final Keyword cValueSrcOverKeyword_4_0_18 = (Keyword)cValueAlternatives_4_0.eContents().get(18);
		
		//fx_blend_property:
		//	property="-fx-blend-mode" WS* ":" WS* value=("add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" |
		//	"exclusion" | "green" | "hard-light" | "lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" |
		//	"src-atop" | "src-in" | "src-out" | "src-over");
		public ParserRule getRule() { return rule; }

		//property="-fx-blend-mode" WS* ":" WS* value=("add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" |
		//"exclusion" | "green" | "hard-light" | "lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" |
		//"src-atop" | "src-in" | "src-out" | "src-over")
		public Group getGroup() { return cGroup; }

		//property="-fx-blend-mode"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-blend-mode"
		public Keyword getPropertyFxBlendModeKeyword_0_0() { return cPropertyFxBlendModeKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "green" | "hard-light" |
		//"lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" | "src-atop" | "src-in" | "src-out" | "src-over")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "green" | "hard-light" |
		//"lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" | "src-atop" | "src-in" | "src-out" | "src-over"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"add"
		public Keyword getValueAddKeyword_4_0_0() { return cValueAddKeyword_4_0_0; }

		//"blue"
		public Keyword getValueBlueKeyword_4_0_1() { return cValueBlueKeyword_4_0_1; }

		//"color-burn"
		public Keyword getValueColorBurnKeyword_4_0_2() { return cValueColorBurnKeyword_4_0_2; }

		//"color-dodge"
		public Keyword getValueColorDodgeKeyword_4_0_3() { return cValueColorDodgeKeyword_4_0_3; }

		//"darken"
		public Keyword getValueDarkenKeyword_4_0_4() { return cValueDarkenKeyword_4_0_4; }

		//"difference"
		public Keyword getValueDifferenceKeyword_4_0_5() { return cValueDifferenceKeyword_4_0_5; }

		//"exclusion"
		public Keyword getValueExclusionKeyword_4_0_6() { return cValueExclusionKeyword_4_0_6; }

		//"green"
		public Keyword getValueGreenKeyword_4_0_7() { return cValueGreenKeyword_4_0_7; }

		//"hard-light"
		public Keyword getValueHardLightKeyword_4_0_8() { return cValueHardLightKeyword_4_0_8; }

		//"lighten"
		public Keyword getValueLightenKeyword_4_0_9() { return cValueLightenKeyword_4_0_9; }

		//"multiply"
		public Keyword getValueMultiplyKeyword_4_0_10() { return cValueMultiplyKeyword_4_0_10; }

		//"overlay"
		public Keyword getValueOverlayKeyword_4_0_11() { return cValueOverlayKeyword_4_0_11; }

		//"red"
		public Keyword getValueRedKeyword_4_0_12() { return cValueRedKeyword_4_0_12; }

		//"screen"
		public Keyword getValueScreenKeyword_4_0_13() { return cValueScreenKeyword_4_0_13; }

		//"soft-light"
		public Keyword getValueSoftLightKeyword_4_0_14() { return cValueSoftLightKeyword_4_0_14; }

		//"src-atop"
		public Keyword getValueSrcAtopKeyword_4_0_15() { return cValueSrcAtopKeyword_4_0_15; }

		//"src-in"
		public Keyword getValueSrcInKeyword_4_0_16() { return cValueSrcInKeyword_4_0_16; }

		//"src-out"
		public Keyword getValueSrcOutKeyword_4_0_17() { return cValueSrcOutKeyword_4_0_17; }

		//"src-over"
		public Keyword getValueSrcOverKeyword_4_0_18() { return cValueSrcOverKeyword_4_0_18; }
	}

	public class Fx_url_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_url_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxImageKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxGraphicKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxBorderImageSourceKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueURLTypeParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_url_property:
		//	property=("-fx-image" | "-fx-graphic" | "-fx-border-image-source") WS* ":" WS* value=URLType;
		public ParserRule getRule() { return rule; }

		//property=("-fx-image" | "-fx-graphic" | "-fx-border-image-source") WS* ":" WS* value=URLType
		public Group getGroup() { return cGroup; }

		//property=("-fx-image" | "-fx-graphic" | "-fx-border-image-source")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-image" | "-fx-graphic" | "-fx-border-image-source"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-image"
		public Keyword getPropertyFxImageKeyword_0_0_0() { return cPropertyFxImageKeyword_0_0_0; }

		//"-fx-graphic"
		public Keyword getPropertyFxGraphicKeyword_0_0_1() { return cPropertyFxGraphicKeyword_0_0_1; }

		//"-fx-border-image-source"
		public Keyword getPropertyFxBorderImageSourceKeyword_0_0_2() { return cPropertyFxBorderImageSourceKeyword_0_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=URLType
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//URLType
		public RuleCall getValueURLTypeParserRuleCall_4_0() { return cValueURLTypeParserRuleCall_4_0; }
	}

	public class Fx_paint_propertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_paint_properties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxBackgroundColorKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cValuesAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cValuesPaintParserRuleCall_4_0_0_0 = (RuleCall)cValuesAssignment_4_0_0.eContents().get(0);
		private final Group cGroup_4_0_1 = (Group)cGroup_4_0.eContents().get(1);
		private final RuleCall cCOMMATerminalRuleCall_4_0_1_0 = (RuleCall)cGroup_4_0_1.eContents().get(0);
		private final Assignment cValuesAssignment_4_0_1_1 = (Assignment)cGroup_4_0_1.eContents().get(1);
		private final RuleCall cValuesPaintParserRuleCall_4_0_1_1_0 = (RuleCall)cValuesAssignment_4_0_1_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_0_1_2 = (RuleCall)cGroup_4_0_1.eContents().get(2);
		private final Keyword cNullKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//fx_paint_properties:
		//	property="-fx-background-color" WS* ":" WS* (values+=Paint (COMMA values+=Paint WS*)* | "null");
		public ParserRule getRule() { return rule; }

		//property="-fx-background-color" WS* ":" WS* (values+=Paint (COMMA values+=Paint WS*)* | "null")
		public Group getGroup() { return cGroup; }

		//property="-fx-background-color"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-color"
		public Keyword getPropertyFxBackgroundColorKeyword_0_0() { return cPropertyFxBackgroundColorKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=Paint (COMMA values+=Paint WS*)* | "null"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//values+=Paint (COMMA values+=Paint WS*)*
		public Group getGroup_4_0() { return cGroup_4_0; }

		//values+=Paint
		public Assignment getValuesAssignment_4_0_0() { return cValuesAssignment_4_0_0; }

		//Paint
		public RuleCall getValuesPaintParserRuleCall_4_0_0_0() { return cValuesPaintParserRuleCall_4_0_0_0; }

		//(COMMA values+=Paint WS*)*
		public Group getGroup_4_0_1() { return cGroup_4_0_1; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4_0_1_0() { return cCOMMATerminalRuleCall_4_0_1_0; }

		//values+=Paint
		public Assignment getValuesAssignment_4_0_1_1() { return cValuesAssignment_4_0_1_1; }

		//Paint
		public RuleCall getValuesPaintParserRuleCall_4_0_1_1_0() { return cValuesPaintParserRuleCall_4_0_1_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_0_1_2() { return cWSTerminalRuleCall_4_0_1_2; }

		//"null"
		public Keyword getNullKeyword_4_1() { return cNullKeyword_4_1; }
	}

	public class Fx_multisize_propertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_multisize_properties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundInsetsKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundRadiusKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxBorderInsetsKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxBorderRadiusKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final Keyword cPropertyFxBorderWidthKeyword_0_0_4 = (Keyword)cPropertyAlternatives_0_0.eContents().get(4);
		private final Keyword cPropertyFxBorderImageInsetsKeyword_0_0_5 = (Keyword)cPropertyAlternatives_0_0.eContents().get(5);
		private final Keyword cPropertyFxBorderImageWidthKeyword_0_0_6 = (Keyword)cPropertyAlternatives_0_0.eContents().get(6);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesDim4SizeParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesDim4SizeParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		
		//fx_multisize_properties:
		//	property=("-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" |
		//	"-fx-border-width" | "-fx-border-image-insets" | "-fx-border-image-width") WS* ":" WS* values+=Dim4Size (COMMA
		//	values+=Dim4Size)*;
		public ParserRule getRule() { return rule; }

		//property=("-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" |
		//"-fx-border-width" | "-fx-border-image-insets" | "-fx-border-image-width") WS* ":" WS* values+=Dim4Size (COMMA
		//values+=Dim4Size)*
		public Group getGroup() { return cGroup; }

		//property=("-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" |
		//"-fx-border-width" | "-fx-border-image-insets" | "-fx-border-image-width")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" | "-fx-border-width" |
		//"-fx-border-image-insets" | "-fx-border-image-width"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-background-insets"
		public Keyword getPropertyFxBackgroundInsetsKeyword_0_0_0() { return cPropertyFxBackgroundInsetsKeyword_0_0_0; }

		//"-fx-background-radius"
		public Keyword getPropertyFxBackgroundRadiusKeyword_0_0_1() { return cPropertyFxBackgroundRadiusKeyword_0_0_1; }

		//"-fx-border-insets"
		public Keyword getPropertyFxBorderInsetsKeyword_0_0_2() { return cPropertyFxBorderInsetsKeyword_0_0_2; }

		//"-fx-border-radius"
		public Keyword getPropertyFxBorderRadiusKeyword_0_0_3() { return cPropertyFxBorderRadiusKeyword_0_0_3; }

		//"-fx-border-width"
		public Keyword getPropertyFxBorderWidthKeyword_0_0_4() { return cPropertyFxBorderWidthKeyword_0_0_4; }

		//"-fx-border-image-insets"
		public Keyword getPropertyFxBorderImageInsetsKeyword_0_0_5() { return cPropertyFxBorderImageInsetsKeyword_0_0_5; }

		//"-fx-border-image-width"
		public Keyword getPropertyFxBorderImageWidthKeyword_0_0_6() { return cPropertyFxBorderImageWidthKeyword_0_0_6; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=Dim4Size
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//Dim4Size
		public RuleCall getValuesDim4SizeParserRuleCall_4_0() { return cValuesDim4SizeParserRuleCall_4_0; }

		//(COMMA values+=Dim4Size)*
		public Group getGroup_5() { return cGroup_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5_0() { return cCOMMATerminalRuleCall_5_0; }

		//values+=Dim4Size
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }

		//Dim4Size
		public RuleCall getValuesDim4SizeParserRuleCall_5_1_0() { return cValuesDim4SizeParserRuleCall_5_1_0; }
	}

	public class Fx_hposition_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_hposition_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxHposKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxNodeHposKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxGraphicHposKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueHPositionEnumRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_hposition_property:
		//	property=("-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos") WS* ":" WS* value=HPosition;
		public ParserRule getRule() { return rule; }

		//property=("-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos") WS* ":" WS* value=HPosition
		public Group getGroup() { return cGroup; }

		//property=("-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-hpos"
		public Keyword getPropertyFxHposKeyword_0_0_0() { return cPropertyFxHposKeyword_0_0_0; }

		//"-fx-node-hpos"
		public Keyword getPropertyFxNodeHposKeyword_0_0_1() { return cPropertyFxNodeHposKeyword_0_0_1; }

		//"-fx-graphic-hpos"
		public Keyword getPropertyFxGraphicHposKeyword_0_0_2() { return cPropertyFxGraphicHposKeyword_0_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=HPosition
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//HPosition
		public RuleCall getValueHPositionEnumRuleCall_4_0() { return cValueHPositionEnumRuleCall_4_0; }
	}

	public class Fx_vposition_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_vposition_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxVposKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxNodeVposKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxGraphicVposKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueVPositionParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_vposition_property:
		//	property=("-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos") WS* ":" WS* value=VPosition;
		public ParserRule getRule() { return rule; }

		//property=("-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos") WS* ":" WS* value=VPosition
		public Group getGroup() { return cGroup; }

		//property=("-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-vpos"
		public Keyword getPropertyFxVposKeyword_0_0_0() { return cPropertyFxVposKeyword_0_0_0; }

		//"-fx-node-vpos"
		public Keyword getPropertyFxNodeVposKeyword_0_0_1() { return cPropertyFxNodeVposKeyword_0_0_1; }

		//"-fx-graphic-vpos"
		public Keyword getPropertyFxGraphicVposKeyword_0_0_2() { return cPropertyFxGraphicVposKeyword_0_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=VPosition
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//VPosition
		public RuleCall getValueVPositionParserRuleCall_4_0() { return cValueVPositionParserRuleCall_4_0; }
	}

	public class Fx_side_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_side_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxLegendSideKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxTitleSideKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxSideKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueTopKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueBottomKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueLeftKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		private final Keyword cValueRightKeyword_4_0_3 = (Keyword)cValueAlternatives_4_0.eContents().get(3);
		
		//fx_side_property:
		//	property=("-fx-legend-side" | "-fx-title-side" | "-fx-side") WS* ":" WS* value=("top" | "bottom" | "left" | "right");
		public ParserRule getRule() { return rule; }

		//property=("-fx-legend-side" | "-fx-title-side" | "-fx-side") WS* ":" WS* value=("top" | "bottom" | "left" | "right")
		public Group getGroup() { return cGroup; }

		//property=("-fx-legend-side" | "-fx-title-side" | "-fx-side")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-legend-side" | "-fx-title-side" | "-fx-side"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-legend-side"
		public Keyword getPropertyFxLegendSideKeyword_0_0_0() { return cPropertyFxLegendSideKeyword_0_0_0; }

		//"-fx-title-side"
		public Keyword getPropertyFxTitleSideKeyword_0_0_1() { return cPropertyFxTitleSideKeyword_0_0_1; }

		//"-fx-side"
		public Keyword getPropertyFxSideKeyword_0_0_2() { return cPropertyFxSideKeyword_0_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("top" | "bottom" | "left" | "right")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"top" | "bottom" | "left" | "right"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"top"
		public Keyword getValueTopKeyword_4_0_0() { return cValueTopKeyword_4_0_0; }

		//"bottom"
		public Keyword getValueBottomKeyword_4_0_1() { return cValueBottomKeyword_4_0_1; }

		//"left"
		public Keyword getValueLeftKeyword_4_0_2() { return cValueLeftKeyword_4_0_2; }

		//"right"
		public Keyword getValueRightKeyword_4_0_3() { return cValueRightKeyword_4_0_3; }
	}

	public class Fx_bar_policy_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_bar_policy_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxHbarPolicyKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxVbarPolicyKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueNeverKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueAlwaysKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueAs_neededKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		
		//fx_bar_policy_property:
		//	property=("-fx-hbar-policy" | "-fx-vbar-policy") WS* ":" WS* value=("never" | "always" | "as_needed");
		public ParserRule getRule() { return rule; }

		//property=("-fx-hbar-policy" | "-fx-vbar-policy") WS* ":" WS* value=("never" | "always" | "as_needed")
		public Group getGroup() { return cGroup; }

		//property=("-fx-hbar-policy" | "-fx-vbar-policy")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-hbar-policy" | "-fx-vbar-policy"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-hbar-policy"
		public Keyword getPropertyFxHbarPolicyKeyword_0_0_0() { return cPropertyFxHbarPolicyKeyword_0_0_0; }

		//"-fx-vbar-policy"
		public Keyword getPropertyFxVbarPolicyKeyword_0_0_1() { return cPropertyFxVbarPolicyKeyword_0_0_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("never" | "always" | "as_needed")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"never" | "always" | "as_needed"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"never"
		public Keyword getValueNeverKeyword_4_0_0() { return cValueNeverKeyword_4_0_0; }

		//"always"
		public Keyword getValueAlwaysKeyword_4_0_1() { return cValueAlwaysKeyword_4_0_1; }

		//"as_needed"
		public Keyword getValueAs_neededKeyword_4_0_2() { return cValueAs_neededKeyword_4_0_2; }
	}

	public class Fx_url_propertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_url_properties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundImageKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxBorderImageKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesURLTypeParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesURLTypeParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		
		//fx_url_properties:
		//	property=("-fx-background-image" | "-fx-border-image") WS* ":" WS* values+=URLType (COMMA values+=URLType)*;
		public ParserRule getRule() { return rule; }

		//property=("-fx-background-image" | "-fx-border-image") WS* ":" WS* values+=URLType (COMMA values+=URLType)*
		public Group getGroup() { return cGroup; }

		//property=("-fx-background-image" | "-fx-border-image")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-image" | "-fx-border-image"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-background-image"
		public Keyword getPropertyFxBackgroundImageKeyword_0_0_0() { return cPropertyFxBackgroundImageKeyword_0_0_0; }

		//"-fx-border-image"
		public Keyword getPropertyFxBorderImageKeyword_0_0_1() { return cPropertyFxBorderImageKeyword_0_0_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=URLType
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//URLType
		public RuleCall getValuesURLTypeParserRuleCall_4_0() { return cValuesURLTypeParserRuleCall_4_0; }

		//(COMMA values+=URLType)*
		public Group getGroup_5() { return cGroup_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5_0() { return cCOMMATerminalRuleCall_5_0; }

		//values+=URLType
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }

		//URLType
		public RuleCall getValuesURLTypeParserRuleCall_5_1_0() { return cValuesURLTypeParserRuleCall_5_1_0; }
	}

	public class Fx_repeat_propertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_repeat_properties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundImageRepeatKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxBorderImageRepeatKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxBackgroundRepeatKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesRepeatStyleParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesRepeatStyleParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		
		//fx_repeat_properties:
		//	property=("-fx-background-image-repeat" | "-fx-border-image-repeat" | "-fx-background-repeat") WS* ":" WS*
		//	values+=RepeatStyle (COMMA values+=RepeatStyle)*;
		public ParserRule getRule() { return rule; }

		//property=("-fx-background-image-repeat" | "-fx-border-image-repeat" | "-fx-background-repeat") WS* ":" WS*
		//values+=RepeatStyle (COMMA values+=RepeatStyle)*
		public Group getGroup() { return cGroup; }

		//property=("-fx-background-image-repeat" | "-fx-border-image-repeat" | "-fx-background-repeat")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-image-repeat" | "-fx-border-image-repeat" | "-fx-background-repeat"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-background-image-repeat"
		public Keyword getPropertyFxBackgroundImageRepeatKeyword_0_0_0() { return cPropertyFxBackgroundImageRepeatKeyword_0_0_0; }

		//"-fx-border-image-repeat"
		public Keyword getPropertyFxBorderImageRepeatKeyword_0_0_1() { return cPropertyFxBorderImageRepeatKeyword_0_0_1; }

		//"-fx-background-repeat"
		public Keyword getPropertyFxBackgroundRepeatKeyword_0_0_2() { return cPropertyFxBackgroundRepeatKeyword_0_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=RepeatStyle
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//RepeatStyle
		public RuleCall getValuesRepeatStyleParserRuleCall_4_0() { return cValuesRepeatStyleParserRuleCall_4_0; }

		//(COMMA values+=RepeatStyle)*
		public Group getGroup_5() { return cGroup_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5_0() { return cCOMMATerminalRuleCall_5_0; }

		//values+=RepeatStyle
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }

		//RepeatStyle
		public RuleCall getValuesRepeatStyleParserRuleCall_5_1_0() { return cValuesRepeatStyleParserRuleCall_5_1_0; }
	}

	public class Fx_multisize_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_multisize_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxPaddingKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueDim4SizeParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_multisize_property:
		//	property="-fx-padding" WS* ":" WS* value=Dim4Size;
		public ParserRule getRule() { return rule; }

		//property="-fx-padding" WS* ":" WS* value=Dim4Size
		public Group getGroup() { return cGroup; }

		//property="-fx-padding"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-padding"
		public Keyword getPropertyFxPaddingKeyword_0_0() { return cPropertyFxPaddingKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=Dim4Size
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//Dim4Size
		public RuleCall getValueDim4SizeParserRuleCall_4_0() { return cValueDim4SizeParserRuleCall_4_0; }
	}

	public class Fx_size_propertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_size_properties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxStrokeDashArrayKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesSIZEParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		
		//fx_size_properties:
		//	property="-fx-stroke-dash-array" WS* ":" WS* values+=SIZE;
		public ParserRule getRule() { return rule; }

		//property="-fx-stroke-dash-array" WS* ":" WS* values+=SIZE
		public Group getGroup() { return cGroup; }

		//property="-fx-stroke-dash-array"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-stroke-dash-array"
		public Keyword getPropertyFxStrokeDashArrayKeyword_0_0() { return cPropertyFxStrokeDashArrayKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=SIZE
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//SIZE
		public RuleCall getValuesSIZEParserRuleCall_4_0() { return cValuesSIZEParserRuleCall_4_0; }
	}

	public class Fx_stroke_line_cap_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_stroke_line_cap_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxStrokeLineCapKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueSquareKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueButtKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueRoundKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		
		//fx_stroke_line_cap_property:
		//	property="-fx-stroke-line-cap" WS* ":" WS* value=("square" | "butt" | "round");
		public ParserRule getRule() { return rule; }

		//property="-fx-stroke-line-cap" WS* ":" WS* value=("square" | "butt" | "round")
		public Group getGroup() { return cGroup; }

		//property="-fx-stroke-line-cap"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-stroke-line-cap"
		public Keyword getPropertyFxStrokeLineCapKeyword_0_0() { return cPropertyFxStrokeLineCapKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("square" | "butt" | "round")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"square" | "butt" | "round"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"square"
		public Keyword getValueSquareKeyword_4_0_0() { return cValueSquareKeyword_4_0_0; }

		//"butt"
		public Keyword getValueButtKeyword_4_0_1() { return cValueButtKeyword_4_0_1; }

		//"round"
		public Keyword getValueRoundKeyword_4_0_2() { return cValueRoundKeyword_4_0_2; }
	}

	public class Fx_stroke_line_join_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_stroke_line_join_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxStrokeLineJoinKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueMiterKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueBevelKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueRoundKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		
		//fx_stroke_line_join_property:
		//	property="-fx-stroke-line-join" WS* ":" WS* value=("miter" | "bevel" | "round");
		public ParserRule getRule() { return rule; }

		//property="-fx-stroke-line-join" WS* ":" WS* value=("miter" | "bevel" | "round")
		public Group getGroup() { return cGroup; }

		//property="-fx-stroke-line-join"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-stroke-line-join"
		public Keyword getPropertyFxStrokeLineJoinKeyword_0_0() { return cPropertyFxStrokeLineJoinKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("miter" | "bevel" | "round")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"miter" | "bevel" | "round"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"miter"
		public Keyword getValueMiterKeyword_4_0_0() { return cValueMiterKeyword_4_0_0; }

		//"bevel"
		public Keyword getValueBevelKeyword_4_0_1() { return cValueBevelKeyword_4_0_1; }

		//"round"
		public Keyword getValueRoundKeyword_4_0_2() { return cValueRoundKeyword_4_0_2; }
	}

	public class Fx_alignment_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_alignment_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxTextAlignmentKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxAlignmentKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueLeftKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueCenterKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueRightKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		private final Keyword cValueJustifyKeyword_4_0_3 = (Keyword)cValueAlternatives_4_0.eContents().get(3);
		
		//fx_alignment_property:
		//	property=("-fx-text-alignment" | "-fx-alignment") WS* ":" WS* value=("left" | "center" | "right" | "justify");
		public ParserRule getRule() { return rule; }

		//property=("-fx-text-alignment" | "-fx-alignment") WS* ":" WS* value=("left" | "center" | "right" | "justify")
		public Group getGroup() { return cGroup; }

		//property=("-fx-text-alignment" | "-fx-alignment")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-text-alignment" | "-fx-alignment"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-text-alignment"
		public Keyword getPropertyFxTextAlignmentKeyword_0_0_0() { return cPropertyFxTextAlignmentKeyword_0_0_0; }

		//"-fx-alignment"
		public Keyword getPropertyFxAlignmentKeyword_0_0_1() { return cPropertyFxAlignmentKeyword_0_0_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("left" | "center" | "right" | "justify")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"left" | "center" | "right" | "justify"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"left"
		public Keyword getValueLeftKeyword_4_0_0() { return cValueLeftKeyword_4_0_0; }

		//"center"
		public Keyword getValueCenterKeyword_4_0_1() { return cValueCenterKeyword_4_0_1; }

		//"right"
		public Keyword getValueRightKeyword_4_0_2() { return cValueRightKeyword_4_0_2; }

		//"justify"
		public Keyword getValueJustifyKeyword_4_0_3() { return cValueJustifyKeyword_4_0_3; }
	}

	public class Fx_text_origin_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_text_origin_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxTextOriginKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueBaselineKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueTopKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueBottomKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		
		//fx_text_origin_property:
		//	property="-fx-text-origin" WS* ":" WS* value=("baseline" | "top" | "bottom");
		public ParserRule getRule() { return rule; }

		//property="-fx-text-origin" WS* ":" WS* value=("baseline" | "top" | "bottom")
		public Group getGroup() { return cGroup; }

		//property="-fx-text-origin"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-text-origin"
		public Keyword getPropertyFxTextOriginKeyword_0_0() { return cPropertyFxTextOriginKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("baseline" | "top" | "bottom")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"baseline" | "top" | "bottom"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"baseline"
		public Keyword getValueBaselineKeyword_4_0_0() { return cValueBaselineKeyword_4_0_0; }

		//"top"
		public Keyword getValueTopKeyword_4_0_1() { return cValueTopKeyword_4_0_1; }

		//"bottom"
		public Keyword getValueBottomKeyword_4_0_2() { return cValueBottomKeyword_4_0_2; }
	}

	public class Fx_position_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_position_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundImagePositionKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxBackgroundPositionKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesBgPositionParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesBgPositionParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		
		//fx_position_property:
		//	property=("-fx-background-image-position" | "-fx-background-position") WS* ":" WS* values+=BgPosition (COMMA
		//	values+=BgPosition)*;
		public ParserRule getRule() { return rule; }

		//property=("-fx-background-image-position" | "-fx-background-position") WS* ":" WS* values+=BgPosition (COMMA
		//values+=BgPosition)*
		public Group getGroup() { return cGroup; }

		//property=("-fx-background-image-position" | "-fx-background-position")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-image-position" | "-fx-background-position"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-background-image-position"
		public Keyword getPropertyFxBackgroundImagePositionKeyword_0_0_0() { return cPropertyFxBackgroundImagePositionKeyword_0_0_0; }

		//"-fx-background-position"
		public Keyword getPropertyFxBackgroundPositionKeyword_0_0_1() { return cPropertyFxBackgroundPositionKeyword_0_0_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=BgPosition
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//BgPosition
		public RuleCall getValuesBgPositionParserRuleCall_4_0() { return cValuesBgPositionParserRuleCall_4_0; }

		//(COMMA values+=BgPosition)*
		public Group getGroup_5() { return cGroup_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5_0() { return cCOMMATerminalRuleCall_5_0; }

		//values+=BgPosition
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }

		//BgPosition
		public RuleCall getValuesBgPositionParserRuleCall_5_1_0() { return cValuesBgPositionParserRuleCall_5_1_0; }
	}

	public class Fx_background_image_size_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_background_image_size_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxBackgroundImageSizeKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesBgSizeParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesBgSizeParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		
		//fx_background_image_size_property:
		//	property="-fx-background-image-size" WS* ":" WS* values+=BgSize (COMMA values+=BgSize)*;
		public ParserRule getRule() { return rule; }

		//property="-fx-background-image-size" WS* ":" WS* values+=BgSize (COMMA values+=BgSize)*
		public Group getGroup() { return cGroup; }

		//property="-fx-background-image-size"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-background-image-size"
		public Keyword getPropertyFxBackgroundImageSizeKeyword_0_0() { return cPropertyFxBackgroundImageSizeKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=BgSize
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//BgSize
		public RuleCall getValuesBgSizeParserRuleCall_4_0() { return cValuesBgSizeParserRuleCall_4_0; }

		//(COMMA values+=BgSize)*
		public Group getGroup_5() { return cGroup_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5_0() { return cCOMMATerminalRuleCall_5_0; }

		//values+=BgSize
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }

		//BgSize
		public RuleCall getValuesBgSizeParserRuleCall_5_1_0() { return cValuesBgSizeParserRuleCall_5_1_0; }
	}

	public class Fx_border_style_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_border_style_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxBorderStyleKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesBorderStyleParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesBorderStyleParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		
		//fx_border_style_property:
		//	property="-fx-border-style" WS* ":" WS* values+=BorderStyle (COMMA values+=BorderStyle)*;
		public ParserRule getRule() { return rule; }

		//property="-fx-border-style" WS* ":" WS* values+=BorderStyle (COMMA values+=BorderStyle)*
		public Group getGroup() { return cGroup; }

		//property="-fx-border-style"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-border-style"
		public Keyword getPropertyFxBorderStyleKeyword_0_0() { return cPropertyFxBorderStyleKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=BorderStyle
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//BorderStyle
		public RuleCall getValuesBorderStyleParserRuleCall_4_0() { return cValuesBorderStyleParserRuleCall_4_0; }

		//(COMMA values+=BorderStyle)*
		public Group getGroup_5() { return cGroup_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5_0() { return cCOMMATerminalRuleCall_5_0; }

		//values+=BorderStyle
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }

		//BorderStyle
		public RuleCall getValuesBorderStyleParserRuleCall_5_1_0() { return cValuesBorderStyleParserRuleCall_5_1_0; }
	}

	public class Fx_border_image_slice_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_border_image_slice_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxBorderImageSliceKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesSizeFillParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesSizeFillParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		
		//fx_border_image_slice_property:
		//	property="-fx-border-image-slice" WS* ":" WS* values+=SizeFill (COMMA values+=SizeFill)*;
		public ParserRule getRule() { return rule; }

		//property="-fx-border-image-slice" WS* ":" WS* values+=SizeFill (COMMA values+=SizeFill)*
		public Group getGroup() { return cGroup; }

		//property="-fx-border-image-slice"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-border-image-slice"
		public Keyword getPropertyFxBorderImageSliceKeyword_0_0() { return cPropertyFxBorderImageSliceKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=SizeFill
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//SizeFill
		public RuleCall getValuesSizeFillParserRuleCall_4_0() { return cValuesSizeFillParserRuleCall_4_0; }

		//(COMMA values+=SizeFill)*
		public Group getGroup_5() { return cGroup_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5_0() { return cCOMMATerminalRuleCall_5_0; }

		//values+=SizeFill
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }

		//SizeFill
		public RuleCall getValuesSizeFillParserRuleCall_5_1_0() { return cValuesSizeFillParserRuleCall_5_1_0; }
	}

	public class Fx_text_overrun_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_text_overrun_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxTextOverrunKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cValueAlternatives_4_0 = (Alternatives)cValueAssignment_4.eContents().get(0);
		private final Keyword cValueCenterEllipsesKeyword_4_0_0 = (Keyword)cValueAlternatives_4_0.eContents().get(0);
		private final Keyword cValueCenterWordEllipsesKeyword_4_0_1 = (Keyword)cValueAlternatives_4_0.eContents().get(1);
		private final Keyword cValueClipKeyword_4_0_2 = (Keyword)cValueAlternatives_4_0.eContents().get(2);
		private final Keyword cValueEllipsesKeyword_4_0_3 = (Keyword)cValueAlternatives_4_0.eContents().get(3);
		private final Keyword cValueLeadingEllipsesKeyword_4_0_4 = (Keyword)cValueAlternatives_4_0.eContents().get(4);
		private final Keyword cValueLeadingWordEllipsesKeyword_4_0_5 = (Keyword)cValueAlternatives_4_0.eContents().get(5);
		private final Keyword cValueWordEllipsesKeyword_4_0_6 = (Keyword)cValueAlternatives_4_0.eContents().get(6);
		
		//fx_text_overrun_property:
		//	property="-fx-text-overrun" WS* ":" WS* value=("center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" |
		//	"leading-ellipses" | "leading-word-ellipses" | "word-ellipses");
		public ParserRule getRule() { return rule; }

		//property="-fx-text-overrun" WS* ":" WS* value=("center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" |
		//"leading-ellipses" | "leading-word-ellipses" | "word-ellipses")
		public Group getGroup() { return cGroup; }

		//property="-fx-text-overrun"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-text-overrun"
		public Keyword getPropertyFxTextOverrunKeyword_0_0() { return cPropertyFxTextOverrunKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=("center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" | "leading-ellipses" | "leading-word-ellipses" |
		//"word-ellipses")
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" | "leading-ellipses" | "leading-word-ellipses" |
		//"word-ellipses"
		public Alternatives getValueAlternatives_4_0() { return cValueAlternatives_4_0; }

		//"center-ellipses"
		public Keyword getValueCenterEllipsesKeyword_4_0_0() { return cValueCenterEllipsesKeyword_4_0_0; }

		//"center-word-ellipses"
		public Keyword getValueCenterWordEllipsesKeyword_4_0_1() { return cValueCenterWordEllipsesKeyword_4_0_1; }

		//"clip"
		public Keyword getValueClipKeyword_4_0_2() { return cValueClipKeyword_4_0_2; }

		//"ellipses"
		public Keyword getValueEllipsesKeyword_4_0_3() { return cValueEllipsesKeyword_4_0_3; }

		//"leading-ellipses"
		public Keyword getValueLeadingEllipsesKeyword_4_0_4() { return cValueLeadingEllipsesKeyword_4_0_4; }

		//"leading-word-ellipses"
		public Keyword getValueLeadingWordEllipsesKeyword_4_0_5() { return cValueLeadingWordEllipsesKeyword_4_0_5; }

		//"word-ellipses"
		public Keyword getValueWordEllipsesKeyword_4_0_6() { return cValueWordEllipsesKeyword_4_0_6; }
	}

	public class Fx_insets_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_insets_property");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cPropertyAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cPropertyFxInsetsKeyword_0_0_0 = (Keyword)cPropertyAssignment_0_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cColonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Assignment cValueAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cValueNUMBERParserRuleCall_0_4_0 = (RuleCall)cValueAssignment_0_4.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cValueAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cValueNUMBERParserRuleCall_1_0_0 = (RuleCall)cValueAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cValueAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cValueNUMBERParserRuleCall_1_2_0 = (RuleCall)cValueAssignment_1_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueNUMBERParserRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		private final Assignment cValueAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cValueNUMBERParserRuleCall_1_6_0 = (RuleCall)cValueAssignment_1_6.eContents().get(0);
		
		//fx_insets_property:
		//	property="-fx-insets" WS* ":" WS* value+=NUMBER | value+=NUMBER WS+ value+=NUMBER WS+ value+=NUMBER WS+ value+=NUMBER;
		public ParserRule getRule() { return rule; }

		//property="-fx-insets" WS* ":" WS* value+=NUMBER | value+=NUMBER WS+ value+=NUMBER WS+ value+=NUMBER WS+ value+=NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//property="-fx-insets" WS* ":" WS* value+=NUMBER
		public Group getGroup_0() { return cGroup_0; }

		//property="-fx-insets"
		public Assignment getPropertyAssignment_0_0() { return cPropertyAssignment_0_0; }

		//"-fx-insets"
		public Keyword getPropertyFxInsetsKeyword_0_0_0() { return cPropertyFxInsetsKeyword_0_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1() { return cWSTerminalRuleCall_0_1; }

		//":"
		public Keyword getColonKeyword_0_2() { return cColonKeyword_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_3() { return cWSTerminalRuleCall_0_3; }

		//value+=NUMBER
		public Assignment getValueAssignment_0_4() { return cValueAssignment_0_4; }

		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_0_4_0() { return cValueNUMBERParserRuleCall_0_4_0; }

		//value+=NUMBER WS+ value+=NUMBER WS+ value+=NUMBER WS+ value+=NUMBER
		public Group getGroup_1() { return cGroup_1; }

		//value+=NUMBER
		public Assignment getValueAssignment_1_0() { return cValueAssignment_1_0; }

		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_1_0_0() { return cValueNUMBERParserRuleCall_1_0_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//value+=NUMBER
		public Assignment getValueAssignment_1_2() { return cValueAssignment_1_2; }

		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_1_2_0() { return cValueNUMBERParserRuleCall_1_2_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }

		//value+=NUMBER
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }

		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_1_4_0() { return cValueNUMBERParserRuleCall_1_4_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_5() { return cWSTerminalRuleCall_1_5; }

		//value+=NUMBER
		public Assignment getValueAssignment_1_6() { return cValueAssignment_1_6; }

		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_1_6_0() { return cValueNUMBERParserRuleCall_1_6_0; }
	}

	public class Fx_number_propertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_number_properties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxHorizontalGridLineStrokeDashArrayKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxVerticalGridLineStrokeDashArrayKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueNUMBERParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_number_properties:
		//	property=("-fx-horizontal-grid-line-stroke-dash-array" | "-fx-vertical-grid-line-stroke-dash-array") WS* ":" WS*
		//	value+=NUMBER+;
		public ParserRule getRule() { return rule; }

		//property=("-fx-horizontal-grid-line-stroke-dash-array" | "-fx-vertical-grid-line-stroke-dash-array") WS* ":" WS*
		//value+=NUMBER+
		public Group getGroup() { return cGroup; }

		//property=("-fx-horizontal-grid-line-stroke-dash-array" | "-fx-vertical-grid-line-stroke-dash-array")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-horizontal-grid-line-stroke-dash-array" | "-fx-vertical-grid-line-stroke-dash-array"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-horizontal-grid-line-stroke-dash-array"
		public Keyword getPropertyFxHorizontalGridLineStrokeDashArrayKeyword_0_0_0() { return cPropertyFxHorizontalGridLineStrokeDashArrayKeyword_0_0_0; }

		//"-fx-vertical-grid-line-stroke-dash-array"
		public Keyword getPropertyFxVerticalGridLineStrokeDashArrayKeyword_0_0_1() { return cPropertyFxVerticalGridLineStrokeDashArrayKeyword_0_0_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value+=NUMBER+
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_4_0() { return cValueNUMBERParserRuleCall_4_0; }
	}

	public class Fx_multi_paint_propertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_multi_paint_properties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPropertyFxBorderColorKeyword_0_0 = (Keyword)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cValuesAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cValuesMultiPaintParserRuleCall_4_0_0_0 = (RuleCall)cValuesAssignment_4_0_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_0_1 = (RuleCall)cGroup_4_0.eContents().get(1);
		private final Group cGroup_4_0_2 = (Group)cGroup_4_0.eContents().get(2);
		private final RuleCall cCOMMATerminalRuleCall_4_0_2_0 = (RuleCall)cGroup_4_0_2.eContents().get(0);
		private final Assignment cValuesAssignment_4_0_2_1 = (Assignment)cGroup_4_0_2.eContents().get(1);
		private final RuleCall cValuesMultiPaintParserRuleCall_4_0_2_1_0 = (RuleCall)cValuesAssignment_4_0_2_1.eContents().get(0);
		private final Keyword cNullKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//fx_multi_paint_properties:
		//	property="-fx-border-color" WS* ":" WS* (values+=MultiPaint WS* (COMMA values+=MultiPaint)* | "null");
		public ParserRule getRule() { return rule; }

		//property="-fx-border-color" WS* ":" WS* (values+=MultiPaint WS* (COMMA values+=MultiPaint)* | "null")
		public Group getGroup() { return cGroup; }

		//property="-fx-border-color"
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-border-color"
		public Keyword getPropertyFxBorderColorKeyword_0_0() { return cPropertyFxBorderColorKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//values+=MultiPaint WS* (COMMA values+=MultiPaint)* | "null"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//values+=MultiPaint WS* (COMMA values+=MultiPaint)*
		public Group getGroup_4_0() { return cGroup_4_0; }

		//values+=MultiPaint
		public Assignment getValuesAssignment_4_0_0() { return cValuesAssignment_4_0_0; }

		//MultiPaint
		public RuleCall getValuesMultiPaintParserRuleCall_4_0_0_0() { return cValuesMultiPaintParserRuleCall_4_0_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_0_1() { return cWSTerminalRuleCall_4_0_1; }

		//(COMMA values+=MultiPaint)*
		public Group getGroup_4_0_2() { return cGroup_4_0_2; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4_0_2_0() { return cCOMMATerminalRuleCall_4_0_2_0; }

		//values+=MultiPaint
		public Assignment getValuesAssignment_4_0_2_1() { return cValuesAssignment_4_0_2_1; }

		//MultiPaint
		public RuleCall getValuesMultiPaintParserRuleCall_4_0_2_1_0() { return cValuesMultiPaintParserRuleCall_4_0_2_1_0; }

		//"null"
		public Keyword getNullKeyword_4_1() { return cNullKeyword_4_1; }
	}

	public class Fx_string_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_string_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cPropertyAlternatives_0_0 = (Alternatives)cPropertyAssignment_0.eContents().get(0);
		private final Keyword cPropertyFxSkinKeyword_0_0_0 = (Keyword)cPropertyAlternatives_0_0.eContents().get(0);
		private final Keyword cPropertyFxShapeKeyword_0_0_1 = (Keyword)cPropertyAlternatives_0_0.eContents().get(1);
		private final Keyword cPropertyFxTextKeyword_0_0_2 = (Keyword)cPropertyAlternatives_0_0.eContents().get(2);
		private final Keyword cPropertyFxEchoCharKeyword_0_0_3 = (Keyword)cPropertyAlternatives_0_0.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_4_0_0 = (RuleCall)cValueAssignment_4_0.eContents().get(0);
		private final Keyword cNullKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//fx_string_property:
		//	property=("-fx-skin" | "-fx-shape" | "-fx-text" | "-fx-echo-char") WS* ":" WS* (value=STRING | "null");
		public ParserRule getRule() { return rule; }

		//property=("-fx-skin" | "-fx-shape" | "-fx-text" | "-fx-echo-char") WS* ":" WS* (value=STRING | "null")
		public Group getGroup() { return cGroup; }

		//property=("-fx-skin" | "-fx-shape" | "-fx-text" | "-fx-echo-char")
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//"-fx-skin" | "-fx-shape" | "-fx-text" | "-fx-echo-char"
		public Alternatives getPropertyAlternatives_0_0() { return cPropertyAlternatives_0_0; }

		//"-fx-skin"
		public Keyword getPropertyFxSkinKeyword_0_0_0() { return cPropertyFxSkinKeyword_0_0_0; }

		//"-fx-shape"
		public Keyword getPropertyFxShapeKeyword_0_0_1() { return cPropertyFxShapeKeyword_0_0_1; }

		//"-fx-text"
		public Keyword getPropertyFxTextKeyword_0_0_2() { return cPropertyFxTextKeyword_0_0_2; }

		//"-fx-echo-char"
		public Keyword getPropertyFxEchoCharKeyword_0_0_3() { return cPropertyFxEchoCharKeyword_0_0_3; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=STRING | "null"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//value=STRING
		public Assignment getValueAssignment_4_0() { return cValueAssignment_4_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_4_0_0() { return cValueSTRINGTerminalRuleCall_4_0_0; }

		//"null"
		public Keyword getNullKeyword_4_1() { return cNullKeyword_4_1; }
	}

	public class EffectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Effect");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEffectDropShadowParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEffectInnerShadowParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Effect:
		//	EffectDropShadow | EffectInnerShadow;
		public ParserRule getRule() { return rule; }

		//EffectDropShadow | EffectInnerShadow
		public Alternatives getAlternatives() { return cAlternatives; }

		//EffectDropShadow
		public RuleCall getEffectDropShadowParserRuleCall_0() { return cEffectDropShadowParserRuleCall_0; }

		//EffectInnerShadow
		public RuleCall getEffectInnerShadowParserRuleCall_1() { return cEffectInnerShadowParserRuleCall_1; }
	}

	public class EffectDropShadowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EffectDropShadow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDropshadowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cBlurAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBlurBLURParserRuleCall_4_0 = (RuleCall)cBlurAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cColorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cColorColorParserRuleCall_6_0 = (RuleCall)cColorAssignment_6.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cBlurRadiusAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cBlurRadiusNUMBERParserRuleCall_8_0 = (RuleCall)cBlurRadiusAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cSpreadAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSpreadNUMBERParserRuleCall_10_0 = (RuleCall)cSpreadAssignment_10.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cOffsetXAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cOffsetXNUMBERParserRuleCall_12_0 = (RuleCall)cOffsetXAssignment_12.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		private final Assignment cOffsetYAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cOffsetYNUMBERParserRuleCall_14_0 = (RuleCall)cOffsetYAssignment_14.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final Keyword cRightParenthesisKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//EffectDropShadow:
		//	"dropshadow" WS* "(" WS* blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA spread=NUMBER COMMA offsetX=NUMBER
		//	COMMA offsetY=NUMBER WS* ")";
		public ParserRule getRule() { return rule; }

		//"dropshadow" WS* "(" WS* blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA spread=NUMBER COMMA offsetX=NUMBER
		//COMMA offsetY=NUMBER WS* ")"
		public Group getGroup() { return cGroup; }

		//"dropshadow"
		public Keyword getDropshadowKeyword_0() { return cDropshadowKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//blur=BLUR
		public Assignment getBlurAssignment_4() { return cBlurAssignment_4; }

		//BLUR
		public RuleCall getBlurBLURParserRuleCall_4_0() { return cBlurBLURParserRuleCall_4_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }

		//color=Color
		public Assignment getColorAssignment_6() { return cColorAssignment_6; }

		//Color
		public RuleCall getColorColorParserRuleCall_6_0() { return cColorColorParserRuleCall_6_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_7() { return cCOMMATerminalRuleCall_7; }

		//blurRadius=NUMBER
		public Assignment getBlurRadiusAssignment_8() { return cBlurRadiusAssignment_8; }

		//NUMBER
		public RuleCall getBlurRadiusNUMBERParserRuleCall_8_0() { return cBlurRadiusNUMBERParserRuleCall_8_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }

		//spread=NUMBER
		public Assignment getSpreadAssignment_10() { return cSpreadAssignment_10; }

		//NUMBER
		public RuleCall getSpreadNUMBERParserRuleCall_10_0() { return cSpreadNUMBERParserRuleCall_10_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_11() { return cCOMMATerminalRuleCall_11; }

		//offsetX=NUMBER
		public Assignment getOffsetXAssignment_12() { return cOffsetXAssignment_12; }

		//NUMBER
		public RuleCall getOffsetXNUMBERParserRuleCall_12_0() { return cOffsetXNUMBERParserRuleCall_12_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_13() { return cCOMMATerminalRuleCall_13; }

		//offsetY=NUMBER
		public Assignment getOffsetYAssignment_14() { return cOffsetYAssignment_14; }

		//NUMBER
		public RuleCall getOffsetYNUMBERParserRuleCall_14_0() { return cOffsetYNUMBERParserRuleCall_14_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_15() { return cWSTerminalRuleCall_15; }

		//")"
		public Keyword getRightParenthesisKeyword_16() { return cRightParenthesisKeyword_16; }
	}

	public class EffectInnerShadowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EffectInnerShadow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInnershadowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cBlurAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBlurBLURParserRuleCall_4_0 = (RuleCall)cBlurAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cColorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cColorColorParserRuleCall_6_0 = (RuleCall)cColorAssignment_6.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cBlurRadiusAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cBlurRadiusNUMBERParserRuleCall_8_0 = (RuleCall)cBlurRadiusAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cChokeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cChokeNUMBERParserRuleCall_10_0 = (RuleCall)cChokeAssignment_10.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cOffsetXAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cOffsetXNUMBERParserRuleCall_12_0 = (RuleCall)cOffsetXAssignment_12.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		private final Assignment cOffsetYAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cOffsetYNUMBERParserRuleCall_14_0 = (RuleCall)cOffsetYAssignment_14.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final Keyword cRightParenthesisKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//EffectInnerShadow:
		//	"innershadow" WS* "(" WS* blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA choke=NUMBER COMMA offsetX=NUMBER
		//	COMMA offsetY=NUMBER WS* ")";
		public ParserRule getRule() { return rule; }

		//"innershadow" WS* "(" WS* blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA choke=NUMBER COMMA offsetX=NUMBER
		//COMMA offsetY=NUMBER WS* ")"
		public Group getGroup() { return cGroup; }

		//"innershadow"
		public Keyword getInnershadowKeyword_0() { return cInnershadowKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//blur=BLUR
		public Assignment getBlurAssignment_4() { return cBlurAssignment_4; }

		//BLUR
		public RuleCall getBlurBLURParserRuleCall_4_0() { return cBlurBLURParserRuleCall_4_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }

		//color=Color
		public Assignment getColorAssignment_6() { return cColorAssignment_6; }

		//Color
		public RuleCall getColorColorParserRuleCall_6_0() { return cColorColorParserRuleCall_6_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_7() { return cCOMMATerminalRuleCall_7; }

		//blurRadius=NUMBER
		public Assignment getBlurRadiusAssignment_8() { return cBlurRadiusAssignment_8; }

		//NUMBER
		public RuleCall getBlurRadiusNUMBERParserRuleCall_8_0() { return cBlurRadiusNUMBERParserRuleCall_8_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }

		//choke=NUMBER
		public Assignment getChokeAssignment_10() { return cChokeAssignment_10; }

		//NUMBER
		public RuleCall getChokeNUMBERParserRuleCall_10_0() { return cChokeNUMBERParserRuleCall_10_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_11() { return cCOMMATerminalRuleCall_11; }

		//offsetX=NUMBER
		public Assignment getOffsetXAssignment_12() { return cOffsetXAssignment_12; }

		//NUMBER
		public RuleCall getOffsetXNUMBERParserRuleCall_12_0() { return cOffsetXNUMBERParserRuleCall_12_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_13() { return cCOMMATerminalRuleCall_13; }

		//offsetY=NUMBER
		public Assignment getOffsetYAssignment_14() { return cOffsetYAssignment_14; }

		//NUMBER
		public RuleCall getOffsetYNUMBERParserRuleCall_14_0() { return cOffsetYNUMBERParserRuleCall_14_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_15() { return cWSTerminalRuleCall_15; }

		//")"
		public Keyword getRightParenthesisKeyword_16() { return cRightParenthesisKeyword_16; }
	}

	public class MultiPaintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiPaint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValuesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValuesPaintParserRuleCall_0_0 = (RuleCall)cValuesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValuesPaintParserRuleCall_1_1_0 = (RuleCall)cValuesAssignment_1_1.eContents().get(0);
		
		//// values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue
		//// values+=PaintValue // | (values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
		//// (values+=PaintValue | values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
		//MultiPaint:
		//	values+=Paint (WS* values+=Paint)*;
		public ParserRule getRule() { return rule; }

		//values+=Paint (WS* values+=Paint)*
		public Group getGroup() { return cGroup; }

		//values+=Paint
		public Assignment getValuesAssignment_0() { return cValuesAssignment_0; }

		//Paint
		public RuleCall getValuesPaintParserRuleCall_0_0() { return cValuesPaintParserRuleCall_0_0; }

		//(WS* values+=Paint)*
		public Group getGroup_1() { return cGroup_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_0() { return cWSTerminalRuleCall_1_0; }

		//values+=Paint
		public Assignment getValuesAssignment_1_1() { return cValuesAssignment_1_1; }

		//Paint
		public RuleCall getValuesPaintParserRuleCall_1_1_0() { return cValuesPaintParserRuleCall_1_1_0; }
	}

	public class PaintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Paint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLinearGradientParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRadialGradientParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cColorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Paint:
		//	LinearGradient | RadialGradient | Color;
		public ParserRule getRule() { return rule; }

		//LinearGradient | RadialGradient | Color
		public Alternatives getAlternatives() { return cAlternatives; }

		//LinearGradient
		public RuleCall getLinearGradientParserRuleCall_0() { return cLinearGradientParserRuleCall_0; }

		//RadialGradient
		public RuleCall getRadialGradientParserRuleCall_1() { return cRadialGradientParserRuleCall_1; }

		//Color
		public RuleCall getColorParserRuleCall_2() { return cColorParserRuleCall_2; }
	}

	public class LinearGradientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LinearGradient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStartAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStartPointValueParserRuleCall_3_0 = (RuleCall)cStartAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cToKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cWSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEndAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEndPointValueParserRuleCall_9_0 = (RuleCall)cEndAssignment_9.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cWSTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Keyword cStopsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final RuleCall cWSTerminalRuleCall_13_0 = (RuleCall)cGroup_13.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cStopsAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cStopsStopValueParserRuleCall_13_2_0 = (RuleCall)cStopsAssignment_13_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_13_3 = (Keyword)cGroup_13.eContents().get(3);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final RuleCall cWSTerminalRuleCall_14_0 = (RuleCall)cGroup_14.eContents().get(0);
		private final Alternatives cAlternatives_14_1 = (Alternatives)cGroup_14.eContents().get(1);
		private final Keyword cRepeatKeyword_14_1_0 = (Keyword)cAlternatives_14_1.eContents().get(0);
		private final Keyword cReflectKeyword_14_1_1 = (Keyword)cAlternatives_14_1.eContents().get(1);
		
		//LinearGradient:
		//	"linear" WS* "(" start=PointValue ")" WS* "to" WS* "(" end=PointValue ")" WS* "stops" (WS* "(" stops+=StopValue ")")+
		//	(WS+ ("repeat" | "reflect"))?;
		public ParserRule getRule() { return rule; }

		//"linear" WS* "(" start=PointValue ")" WS* "to" WS* "(" end=PointValue ")" WS* "stops" (WS* "(" stops+=StopValue ")")+
		//(WS+ ("repeat" | "reflect"))?
		public Group getGroup() { return cGroup; }

		//"linear"
		public Keyword getLinearKeyword_0() { return cLinearKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//start=PointValue
		public Assignment getStartAssignment_3() { return cStartAssignment_3; }

		//PointValue
		public RuleCall getStartPointValueParserRuleCall_3_0() { return cStartPointValueParserRuleCall_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//"to"
		public Keyword getToKeyword_6() { return cToKeyword_6; }

		//WS*
		public RuleCall getWSTerminalRuleCall_7() { return cWSTerminalRuleCall_7; }

		//"("
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }

		//end=PointValue
		public Assignment getEndAssignment_9() { return cEndAssignment_9; }

		//PointValue
		public RuleCall getEndPointValueParserRuleCall_9_0() { return cEndPointValueParserRuleCall_9_0; }

		//")"
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }

		//WS*
		public RuleCall getWSTerminalRuleCall_11() { return cWSTerminalRuleCall_11; }

		//"stops"
		public Keyword getStopsKeyword_12() { return cStopsKeyword_12; }

		//(WS* "(" stops+=StopValue ")")+
		public Group getGroup_13() { return cGroup_13; }

		//WS*
		public RuleCall getWSTerminalRuleCall_13_0() { return cWSTerminalRuleCall_13_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_13_1() { return cLeftParenthesisKeyword_13_1; }

		//stops+=StopValue
		public Assignment getStopsAssignment_13_2() { return cStopsAssignment_13_2; }

		//StopValue
		public RuleCall getStopsStopValueParserRuleCall_13_2_0() { return cStopsStopValueParserRuleCall_13_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_13_3() { return cRightParenthesisKeyword_13_3; }

		//(WS+ ("repeat" | "reflect"))?
		public Group getGroup_14() { return cGroup_14; }

		//WS+
		public RuleCall getWSTerminalRuleCall_14_0() { return cWSTerminalRuleCall_14_0; }

		//"repeat" | "reflect"
		public Alternatives getAlternatives_14_1() { return cAlternatives_14_1; }

		//"repeat"
		public Keyword getRepeatKeyword_14_1_0() { return cRepeatKeyword_14_1_0; }

		//"reflect"
		public Keyword getReflectKeyword_14_1_1() { return cReflectKeyword_14_1_1; }
	}

	public class RadialGradientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RadialGradient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRadialKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCenterAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCenterPointValueParserRuleCall_2_1_0 = (RuleCall)cCenterAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final RuleCall cCOMMATerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Assignment cRadiusAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRadiusSizeTypeParserRuleCall_3_0 = (RuleCall)cRadiusAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Keyword cFocusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final RuleCall cWSTerminalRuleCall_4_4 = (RuleCall)cGroup_4.eContents().get(4);
		private final Assignment cFocusAssignment_4_5 = (Assignment)cGroup_4.eContents().get(5);
		private final RuleCall cFocusPointValueParserRuleCall_4_5_0 = (RuleCall)cFocusAssignment_4_5.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_6 = (RuleCall)cGroup_4.eContents().get(6);
		private final Keyword cRightParenthesisKeyword_4_7 = (Keyword)cGroup_4.eContents().get(7);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cStopsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cWSTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cStopsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cStopsStopValueParserRuleCall_7_2_0 = (RuleCall)cStopsAssignment_7_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final RuleCall cWSTerminalRuleCall_8_0 = (RuleCall)cGroup_8.eContents().get(0);
		private final Alternatives cAlternatives_8_1 = (Alternatives)cGroup_8.eContents().get(1);
		private final Keyword cRepeatKeyword_8_1_0 = (Keyword)cAlternatives_8_1.eContents().get(0);
		private final Keyword cReflectKeyword_8_1_1 = (Keyword)cAlternatives_8_1.eContents().get(1);
		
		//RadialGradient:
		//	"radial" WS* ("(" center=PointValue ")" COMMA)? radius=SizeType (WS* "focus" WS* "(" WS* focus=PointValue WS* ")") WS*
		//	"stops" (WS* "(" stops+=StopValue ")")+ (WS+ ("repeat" | "reflect"))?;
		public ParserRule getRule() { return rule; }

		//"radial" WS* ("(" center=PointValue ")" COMMA)? radius=SizeType (WS* "focus" WS* "(" WS* focus=PointValue WS* ")") WS*
		//"stops" (WS* "(" stops+=StopValue ")")+ (WS+ ("repeat" | "reflect"))?
		public Group getGroup() { return cGroup; }

		//"radial"
		public Keyword getRadialKeyword_0() { return cRadialKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//("(" center=PointValue ")" COMMA)?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//center=PointValue
		public Assignment getCenterAssignment_2_1() { return cCenterAssignment_2_1; }

		//PointValue
		public RuleCall getCenterPointValueParserRuleCall_2_1_0() { return cCenterPointValueParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_2_3() { return cCOMMATerminalRuleCall_2_3; }

		//radius=SizeType
		public Assignment getRadiusAssignment_3() { return cRadiusAssignment_3; }

		//SizeType
		public RuleCall getRadiusSizeTypeParserRuleCall_3_0() { return cRadiusSizeTypeParserRuleCall_3_0; }

		//WS* "focus" WS* "(" WS* focus=PointValue WS* ")"
		public Group getGroup_4() { return cGroup_4; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_0() { return cWSTerminalRuleCall_4_0; }

		//"focus"
		public Keyword getFocusKeyword_4_1() { return cFocusKeyword_4_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_2() { return cWSTerminalRuleCall_4_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_3() { return cLeftParenthesisKeyword_4_3; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_4() { return cWSTerminalRuleCall_4_4; }

		//focus=PointValue
		public Assignment getFocusAssignment_4_5() { return cFocusAssignment_4_5; }

		//PointValue
		public RuleCall getFocusPointValueParserRuleCall_4_5_0() { return cFocusPointValueParserRuleCall_4_5_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_6() { return cWSTerminalRuleCall_4_6; }

		//")"
		public Keyword getRightParenthesisKeyword_4_7() { return cRightParenthesisKeyword_4_7; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//"stops"
		public Keyword getStopsKeyword_6() { return cStopsKeyword_6; }

		//(WS* "(" stops+=StopValue ")")+
		public Group getGroup_7() { return cGroup_7; }

		//WS*
		public RuleCall getWSTerminalRuleCall_7_0() { return cWSTerminalRuleCall_7_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_7_1() { return cLeftParenthesisKeyword_7_1; }

		//stops+=StopValue
		public Assignment getStopsAssignment_7_2() { return cStopsAssignment_7_2; }

		//StopValue
		public RuleCall getStopsStopValueParserRuleCall_7_2_0() { return cStopsStopValueParserRuleCall_7_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7_3() { return cRightParenthesisKeyword_7_3; }

		//(WS+ ("repeat" | "reflect"))?
		public Group getGroup_8() { return cGroup_8; }

		//WS+
		public RuleCall getWSTerminalRuleCall_8_0() { return cWSTerminalRuleCall_8_0; }

		//"repeat" | "reflect"
		public Alternatives getAlternatives_8_1() { return cAlternatives_8_1; }

		//"repeat"
		public Keyword getRepeatKeyword_8_1_0() { return cRepeatKeyword_8_1_0; }

		//"reflect"
		public Keyword getReflectKeyword_8_1_1() { return cReflectKeyword_8_1_1; }
	}

	public class StopValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StopValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPosAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPosSizeTypeParserRuleCall_0_0 = (RuleCall)cPosAssignment_0.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cColorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cColorColorParserRuleCall_2_0 = (RuleCall)cColorAssignment_2.eContents().get(0);
		
		//StopValue:
		//	pos=SizeType COMMA color=Color;
		public ParserRule getRule() { return rule; }

		//pos=SizeType COMMA color=Color
		public Group getGroup() { return cGroup; }

		//pos=SizeType
		public Assignment getPosAssignment_0() { return cPosAssignment_0; }

		//SizeType
		public RuleCall getPosSizeTypeParserRuleCall_0_0() { return cPosSizeTypeParserRuleCall_0_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1() { return cCOMMATerminalRuleCall_1; }

		//color=Color
		public Assignment getColorAssignment_2() { return cColorAssignment_2; }

		//Color
		public RuleCall getColorColorParserRuleCall_2_0() { return cColorColorParserRuleCall_2_0; }
	}

	public class PointValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PointValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cXAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cXSizeTypeParserRuleCall_0_0 = (RuleCall)cXAssignment_0.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cYAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cYSizeTypeParserRuleCall_2_0 = (RuleCall)cYAssignment_2.eContents().get(0);
		
		//PointValue:
		//	x=SizeType COMMA y=SizeType;
		public ParserRule getRule() { return rule; }

		//x=SizeType COMMA y=SizeType
		public Group getGroup() { return cGroup; }

		//x=SizeType
		public Assignment getXAssignment_0() { return cXAssignment_0; }

		//SizeType
		public RuleCall getXSizeTypeParserRuleCall_0_0() { return cXSizeTypeParserRuleCall_0_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1() { return cCOMMATerminalRuleCall_1; }

		//y=SizeType
		public Assignment getYAssignment_2() { return cYAssignment_2; }

		//SizeType
		public RuleCall getYSizeTypeParserRuleCall_2_0() { return cYSizeTypeParserRuleCall_2_0; }
	}

	public class VPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VPosition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTopKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCenterKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cBaselineKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cBottomKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cPageEndKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cPageStartKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//VPosition:
		//	"top" | "center" | "baseline" | "bottom" | "page-end" | "page-start";
		public ParserRule getRule() { return rule; }

		//"top" | "center" | "baseline" | "bottom" | "page-end" | "page-start"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"top"
		public Keyword getTopKeyword_0() { return cTopKeyword_0; }

		//"center"
		public Keyword getCenterKeyword_1() { return cCenterKeyword_1; }

		//"baseline"
		public Keyword getBaselineKeyword_2() { return cBaselineKeyword_2; }

		//"bottom"
		public Keyword getBottomKeyword_3() { return cBottomKeyword_3; }

		//"page-end"
		public Keyword getPageEndKeyword_4() { return cPageEndKeyword_4; }

		//"page-start"
		public Keyword getPageStartKeyword_5() { return cPageStartKeyword_5; }
	}

	public class RepeatStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RepeatStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cVAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Alternatives cVAlternatives_0_0 = (Alternatives)cVAssignment_0.eContents().get(0);
		private final Keyword cVRepeatXKeyword_0_0_0 = (Keyword)cVAlternatives_0_0.eContents().get(0);
		private final Keyword cVRepeatYKeyword_0_0_1 = (Keyword)cVAlternatives_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cVAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Alternatives cVAlternatives_1_0_0 = (Alternatives)cVAssignment_1_0.eContents().get(0);
		private final Keyword cVRepeatKeyword_1_0_0_0 = (Keyword)cVAlternatives_1_0_0.eContents().get(0);
		private final Keyword cVSpaceKeyword_1_0_0_1 = (Keyword)cVAlternatives_1_0_0.eContents().get(1);
		private final Keyword cVRoundKeyword_1_0_0_2 = (Keyword)cVAlternatives_1_0_0.eContents().get(2);
		private final Keyword cVNoRepeatKeyword_1_0_0_3 = (Keyword)cVAlternatives_1_0_0.eContents().get(3);
		private final Keyword cVStretchKeyword_1_0_0_4 = (Keyword)cVAlternatives_1_0_0.eContents().get(4);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cV2Assignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Alternatives cV2Alternatives_1_1_1_0 = (Alternatives)cV2Assignment_1_1_1.eContents().get(0);
		private final Keyword cV2RepeatKeyword_1_1_1_0_0 = (Keyword)cV2Alternatives_1_1_1_0.eContents().get(0);
		private final Keyword cV2SpaceKeyword_1_1_1_0_1 = (Keyword)cV2Alternatives_1_1_1_0.eContents().get(1);
		private final Keyword cV2RoundKeyword_1_1_1_0_2 = (Keyword)cV2Alternatives_1_1_1_0.eContents().get(2);
		private final Keyword cV2NoRepeatKeyword_1_1_1_0_3 = (Keyword)cV2Alternatives_1_1_1_0.eContents().get(3);
		private final Keyword cV2StretchKeyword_1_1_1_0_4 = (Keyword)cV2Alternatives_1_1_1_0.eContents().get(4);
		
		//RepeatStyle:
		//	v=("repeat-x" | "repeat-y") | v=("repeat" | "space" | "round" | "no-repeat" | "stretch") (WS+ v2=("repeat" | "space" |
		//	"round" | "no-repeat" | "stretch"))?;
		public ParserRule getRule() { return rule; }

		//v=("repeat-x" | "repeat-y") | v=("repeat" | "space" | "round" | "no-repeat" | "stretch") (WS+ v2=("repeat" | "space" |
		//"round" | "no-repeat" | "stretch"))?
		public Alternatives getAlternatives() { return cAlternatives; }

		//v=("repeat-x" | "repeat-y")
		public Assignment getVAssignment_0() { return cVAssignment_0; }

		//"repeat-x" | "repeat-y"
		public Alternatives getVAlternatives_0_0() { return cVAlternatives_0_0; }

		//"repeat-x"
		public Keyword getVRepeatXKeyword_0_0_0() { return cVRepeatXKeyword_0_0_0; }

		//"repeat-y"
		public Keyword getVRepeatYKeyword_0_0_1() { return cVRepeatYKeyword_0_0_1; }

		//v=("repeat" | "space" | "round" | "no-repeat" | "stretch") (WS+ v2=("repeat" | "space" | "round" | "no-repeat" |
		//"stretch"))?
		public Group getGroup_1() { return cGroup_1; }

		//v=("repeat" | "space" | "round" | "no-repeat" | "stretch")
		public Assignment getVAssignment_1_0() { return cVAssignment_1_0; }

		//"repeat" | "space" | "round" | "no-repeat" | "stretch"
		public Alternatives getVAlternatives_1_0_0() { return cVAlternatives_1_0_0; }

		//"repeat"
		public Keyword getVRepeatKeyword_1_0_0_0() { return cVRepeatKeyword_1_0_0_0; }

		//"space"
		public Keyword getVSpaceKeyword_1_0_0_1() { return cVSpaceKeyword_1_0_0_1; }

		//"round"
		public Keyword getVRoundKeyword_1_0_0_2() { return cVRoundKeyword_1_0_0_2; }

		//"no-repeat"
		public Keyword getVNoRepeatKeyword_1_0_0_3() { return cVNoRepeatKeyword_1_0_0_3; }

		//"stretch"
		public Keyword getVStretchKeyword_1_0_0_4() { return cVStretchKeyword_1_0_0_4; }

		//(WS+ v2=("repeat" | "space" | "round" | "no-repeat" | "stretch"))?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//WS+
		public RuleCall getWSTerminalRuleCall_1_1_0() { return cWSTerminalRuleCall_1_1_0; }

		//v2=("repeat" | "space" | "round" | "no-repeat" | "stretch")
		public Assignment getV2Assignment_1_1_1() { return cV2Assignment_1_1_1; }

		//"repeat" | "space" | "round" | "no-repeat" | "stretch"
		public Alternatives getV2Alternatives_1_1_1_0() { return cV2Alternatives_1_1_1_0; }

		//"repeat"
		public Keyword getV2RepeatKeyword_1_1_1_0_0() { return cV2RepeatKeyword_1_1_1_0_0; }

		//"space"
		public Keyword getV2SpaceKeyword_1_1_1_0_1() { return cV2SpaceKeyword_1_1_1_0_1; }

		//"round"
		public Keyword getV2RoundKeyword_1_1_1_0_2() { return cV2RoundKeyword_1_1_1_0_2; }

		//"no-repeat"
		public Keyword getV2NoRepeatKeyword_1_1_1_0_3() { return cV2NoRepeatKeyword_1_1_1_0_3; }

		//"stretch"
		public Keyword getV2StretchKeyword_1_1_1_0_4() { return cV2StretchKeyword_1_1_1_0_4; }
	}

	public class Dim4SizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dim4Size");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValuesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValuesSIZEParserRuleCall_0_0 = (RuleCall)cValuesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cValuesAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cValuesSIZEParserRuleCall_1_0_0 = (RuleCall)cValuesAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cValuesAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cValuesSIZEParserRuleCall_1_2_0 = (RuleCall)cValuesAssignment_1_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cValuesAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValuesSIZEParserRuleCall_1_4_0 = (RuleCall)cValuesAssignment_1_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		private final Assignment cValuesAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cValuesSIZEParserRuleCall_1_6_0 = (RuleCall)cValuesAssignment_1_6.eContents().get(0);
		
		//Dim4Size:
		//	values+=SIZE | values+=SIZE WS* values+=SIZE WS* values+=SIZE WS* values+=SIZE;
		public ParserRule getRule() { return rule; }

		//values+=SIZE | values+=SIZE WS* values+=SIZE WS* values+=SIZE WS* values+=SIZE
		public Alternatives getAlternatives() { return cAlternatives; }

		//values+=SIZE
		public Assignment getValuesAssignment_0() { return cValuesAssignment_0; }

		//SIZE
		public RuleCall getValuesSIZEParserRuleCall_0_0() { return cValuesSIZEParserRuleCall_0_0; }

		//values+=SIZE WS* values+=SIZE WS* values+=SIZE WS* values+=SIZE
		public Group getGroup_1() { return cGroup_1; }

		//values+=SIZE
		public Assignment getValuesAssignment_1_0() { return cValuesAssignment_1_0; }

		//SIZE
		public RuleCall getValuesSIZEParserRuleCall_1_0_0() { return cValuesSIZEParserRuleCall_1_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//values+=SIZE
		public Assignment getValuesAssignment_1_2() { return cValuesAssignment_1_2; }

		//SIZE
		public RuleCall getValuesSIZEParserRuleCall_1_2_0() { return cValuesSIZEParserRuleCall_1_2_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }

		//values+=SIZE
		public Assignment getValuesAssignment_1_4() { return cValuesAssignment_1_4; }

		//SIZE
		public RuleCall getValuesSIZEParserRuleCall_1_4_0() { return cValuesSIZEParserRuleCall_1_4_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_5() { return cWSTerminalRuleCall_1_5; }

		//values+=SIZE
		public Assignment getValuesAssignment_1_6() { return cValuesAssignment_1_6; }

		//SIZE
		public RuleCall getValuesSIZEParserRuleCall_1_6_0() { return cValuesSIZEParserRuleCall_1_6_0; }
	}

	public class BgPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BgPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cAbsxAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cAbsxSIZEParserRuleCall_0_0_0 = (RuleCall)cAbsxAssignment_0_0.eContents().get(0);
		private final Assignment cRelxAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Alternatives cRelxAlternatives_0_1_0 = (Alternatives)cRelxAssignment_0_1.eContents().get(0);
		private final Keyword cRelxLeftKeyword_0_1_0_0 = (Keyword)cRelxAlternatives_0_1_0.eContents().get(0);
		private final Keyword cRelxCenterKeyword_0_1_0_1 = (Keyword)cRelxAlternatives_0_1_0.eContents().get(1);
		private final Keyword cRelxRightKeyword_0_1_0_2 = (Keyword)cRelxAlternatives_0_1_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cAbsyAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cAbsySIZEParserRuleCall_2_0_0 = (RuleCall)cAbsyAssignment_2_0.eContents().get(0);
		private final Assignment cRelyAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final Alternatives cRelyAlternatives_2_1_0 = (Alternatives)cRelyAssignment_2_1.eContents().get(0);
		private final Keyword cRelyTopKeyword_2_1_0_0 = (Keyword)cRelyAlternatives_2_1_0.eContents().get(0);
		private final Keyword cRelyCenterKeyword_2_1_0_1 = (Keyword)cRelyAlternatives_2_1_0.eContents().get(1);
		private final Keyword cRelyBottomKeyword_2_1_0_2 = (Keyword)cRelyAlternatives_2_1_0.eContents().get(2);
		
		////	|
		////	(
		////		( center | ( left | right ) SizeValue? ) | ( center | ( top | bottom ) SizeValue? )
		////	)
		//BgPosition:
		//	(absx=SIZE | relx=("left" | "center" | "right")) WS* (absy=SIZE | rely=("top" | "center" | "bottom"));
		public ParserRule getRule() { return rule; }

		//(absx=SIZE | relx=("left" | "center" | "right")) WS* (absy=SIZE | rely=("top" | "center" | "bottom"))
		public Group getGroup() { return cGroup; }

		//absx=SIZE | relx=("left" | "center" | "right")
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//absx=SIZE
		public Assignment getAbsxAssignment_0_0() { return cAbsxAssignment_0_0; }

		//SIZE
		public RuleCall getAbsxSIZEParserRuleCall_0_0_0() { return cAbsxSIZEParserRuleCall_0_0_0; }

		//relx=("left" | "center" | "right")
		public Assignment getRelxAssignment_0_1() { return cRelxAssignment_0_1; }

		//"left" | "center" | "right"
		public Alternatives getRelxAlternatives_0_1_0() { return cRelxAlternatives_0_1_0; }

		//"left"
		public Keyword getRelxLeftKeyword_0_1_0_0() { return cRelxLeftKeyword_0_1_0_0; }

		//"center"
		public Keyword getRelxCenterKeyword_0_1_0_1() { return cRelxCenterKeyword_0_1_0_1; }

		//"right"
		public Keyword getRelxRightKeyword_0_1_0_2() { return cRelxRightKeyword_0_1_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//absy=SIZE | rely=("top" | "center" | "bottom")
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//absy=SIZE
		public Assignment getAbsyAssignment_2_0() { return cAbsyAssignment_2_0; }

		//SIZE
		public RuleCall getAbsySIZEParserRuleCall_2_0_0() { return cAbsySIZEParserRuleCall_2_0_0; }

		//rely=("top" | "center" | "bottom")
		public Assignment getRelyAssignment_2_1() { return cRelyAssignment_2_1; }

		//"top" | "center" | "bottom"
		public Alternatives getRelyAlternatives_2_1_0() { return cRelyAlternatives_2_1_0; }

		//"top"
		public Keyword getRelyTopKeyword_2_1_0_0() { return cRelyTopKeyword_2_1_0_0; }

		//"center"
		public Keyword getRelyCenterKeyword_2_1_0_1() { return cRelyCenterKeyword_2_1_0_1; }

		//"bottom"
		public Keyword getRelyBottomKeyword_2_1_0_2() { return cRelyBottomKeyword_2_1_0_2; }
	}

	public class Fx_color_propertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fx_color_property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPropertyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPropertyCOLOR_PROPERTIESParserRuleCall_0_0 = (RuleCall)cPropertyAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueColorParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//fx_color_property:
		//	property=COLOR_PROPERTIES WS* ":" WS* value=Color;
		public ParserRule getRule() { return rule; }

		//property=COLOR_PROPERTIES WS* ":" WS* value=Color
		public Group getGroup() { return cGroup; }

		//property=COLOR_PROPERTIES
		public Assignment getPropertyAssignment_0() { return cPropertyAssignment_0; }

		//COLOR_PROPERTIES
		public RuleCall getPropertyCOLOR_PROPERTIESParserRuleCall_0_0() { return cPropertyCOLOR_PROPERTIESParserRuleCall_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//value=Color
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//Color
		public RuleCall getValueColorParserRuleCall_4_0() { return cValueColorParserRuleCall_4_0; }
	}

	public class BgSizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BgSize");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cXsizeAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Alternatives cXsizeAlternatives_0_0_0 = (Alternatives)cXsizeAssignment_0_0.eContents().get(0);
		private final RuleCall cXsizeSIZEParserRuleCall_0_0_0_0 = (RuleCall)cXsizeAlternatives_0_0_0.eContents().get(0);
		private final Keyword cXsizeAutoKeyword_0_0_0_1 = (Keyword)cXsizeAlternatives_0_0_0.eContents().get(1);
		private final Assignment cYsizeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Alternatives cYsizeAlternatives_0_1_0 = (Alternatives)cYsizeAssignment_0_1.eContents().get(0);
		private final RuleCall cYsizeSIZEParserRuleCall_0_1_0_0 = (RuleCall)cYsizeAlternatives_0_1_0.eContents().get(0);
		private final Keyword cYsizeAutoKeyword_0_1_0_1 = (Keyword)cYsizeAlternatives_0_1_0.eContents().get(1);
		private final Assignment cPredefinedAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Alternatives cPredefinedAlternatives_1_0 = (Alternatives)cPredefinedAssignment_1.eContents().get(0);
		private final Keyword cPredefinedCoverKeyword_1_0_0 = (Keyword)cPredefinedAlternatives_1_0.eContents().get(0);
		private final Keyword cPredefinedContainKeyword_1_0_1 = (Keyword)cPredefinedAlternatives_1_0.eContents().get(1);
		
		//BgSize:
		//	xsize=(SIZE | "auto") ysize=(SIZE | "auto")? | predefined=("cover" | "contain");
		public ParserRule getRule() { return rule; }

		//xsize=(SIZE | "auto") ysize=(SIZE | "auto")? | predefined=("cover" | "contain")
		public Alternatives getAlternatives() { return cAlternatives; }

		//xsize=(SIZE | "auto") ysize=(SIZE | "auto")?
		public Group getGroup_0() { return cGroup_0; }

		//xsize=(SIZE | "auto")
		public Assignment getXsizeAssignment_0_0() { return cXsizeAssignment_0_0; }

		//SIZE | "auto"
		public Alternatives getXsizeAlternatives_0_0_0() { return cXsizeAlternatives_0_0_0; }

		//SIZE
		public RuleCall getXsizeSIZEParserRuleCall_0_0_0_0() { return cXsizeSIZEParserRuleCall_0_0_0_0; }

		//"auto"
		public Keyword getXsizeAutoKeyword_0_0_0_1() { return cXsizeAutoKeyword_0_0_0_1; }

		//ysize=(SIZE | "auto")?
		public Assignment getYsizeAssignment_0_1() { return cYsizeAssignment_0_1; }

		//SIZE | "auto"
		public Alternatives getYsizeAlternatives_0_1_0() { return cYsizeAlternatives_0_1_0; }

		//SIZE
		public RuleCall getYsizeSIZEParserRuleCall_0_1_0_0() { return cYsizeSIZEParserRuleCall_0_1_0_0; }

		//"auto"
		public Keyword getYsizeAutoKeyword_0_1_0_1() { return cYsizeAutoKeyword_0_1_0_1; }

		//predefined=("cover" | "contain")
		public Assignment getPredefinedAssignment_1() { return cPredefinedAssignment_1; }

		//"cover" | "contain"
		public Alternatives getPredefinedAlternatives_1_0() { return cPredefinedAlternatives_1_0; }

		//"cover"
		public Keyword getPredefinedCoverKeyword_1_0_0() { return cPredefinedCoverKeyword_1_0_0; }

		//"contain"
		public Keyword getPredefinedContainKeyword_1_0_1() { return cPredefinedContainKeyword_1_0_1; }
	}

	public class BorderStyleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BorderStyle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDashStyleAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cDashStyleAlternatives_0_0 = (Alternatives)cDashStyleAssignment_0.eContents().get(0);
		private final Keyword cDashStyleNoneKeyword_0_0_0 = (Keyword)cDashStyleAlternatives_0_0.eContents().get(0);
		private final Keyword cDashStyleSolidKeyword_0_0_1 = (Keyword)cDashStyleAlternatives_0_0.eContents().get(1);
		private final Keyword cDashStyleDottedKeyword_0_0_2 = (Keyword)cDashStyleAlternatives_0_0.eContents().get(2);
		private final Keyword cDashStyleDashedKeyword_0_0_3 = (Keyword)cDashStyleAlternatives_0_0.eContents().get(3);
		private final Assignment cLocationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cLocationAlternatives_1_0 = (Alternatives)cLocationAssignment_1.eContents().get(0);
		private final Keyword cLocationCenteredKeyword_1_0_0 = (Keyword)cLocationAlternatives_1_0.eContents().get(0);
		private final Keyword cLocationInsideKeyword_1_0_1 = (Keyword)cLocationAlternatives_1_0.eContents().get(1);
		private final Keyword cLocationOutsideKeyword_1_0_2 = (Keyword)cLocationAlternatives_1_0.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLineJoinKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Alternatives cAlternatives_2_1 = (Alternatives)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cAlternatives_2_1.eContents().get(0);
		private final Keyword cMiterKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Assignment cMiterAbsAssignment_2_1_0_1 = (Assignment)cGroup_2_1_0.eContents().get(1);
		private final RuleCall cMiterAbsNUMBERParserRuleCall_2_1_0_1_0 = (RuleCall)cMiterAbsAssignment_2_1_0_1.eContents().get(0);
		private final Assignment cMiterPredefinedAssignment_2_1_1 = (Assignment)cAlternatives_2_1.eContents().get(1);
		private final Alternatives cMiterPredefinedAlternatives_2_1_1_0 = (Alternatives)cMiterPredefinedAssignment_2_1_1.eContents().get(0);
		private final Keyword cMiterPredefinedBevelKeyword_2_1_1_0_0 = (Keyword)cMiterPredefinedAlternatives_2_1_1_0.eContents().get(0);
		private final Keyword cMiterPredefinedRoundKeyword_2_1_1_0_1 = (Keyword)cMiterPredefinedAlternatives_2_1_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLineCapKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLineCapAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Alternatives cLineCapAlternatives_3_1_0 = (Alternatives)cLineCapAssignment_3_1.eContents().get(0);
		private final Keyword cLineCapSquareKeyword_3_1_0_0 = (Keyword)cLineCapAlternatives_3_1_0.eContents().get(0);
		private final Keyword cLineCapButtKeyword_3_1_0_1 = (Keyword)cLineCapAlternatives_3_1_0.eContents().get(1);
		private final Keyword cLineCapRoundKeyword_3_1_0_2 = (Keyword)cLineCapAlternatives_3_1_0.eContents().get(2);
		
		//BorderStyle:
		//	dashStyle=("none" | "solid" | "dotted" | "dashed") location=("centered" | "inside" | "outside")? ("line-join" ("miter"
		//	miterAbs=NUMBER | miterPredefined=("bevel" | "round")))? ("line-cap" lineCap=("square" | "butt" | "round"))?;
		public ParserRule getRule() { return rule; }

		//dashStyle=("none" | "solid" | "dotted" | "dashed") location=("centered" | "inside" | "outside")? ("line-join" ("miter"
		//miterAbs=NUMBER | miterPredefined=("bevel" | "round")))? ("line-cap" lineCap=("square" | "butt" | "round"))?
		public Group getGroup() { return cGroup; }

		//dashStyle=("none" | "solid" | "dotted" | "dashed")
		public Assignment getDashStyleAssignment_0() { return cDashStyleAssignment_0; }

		//"none" | "solid" | "dotted" | "dashed"
		public Alternatives getDashStyleAlternatives_0_0() { return cDashStyleAlternatives_0_0; }

		//"none"
		public Keyword getDashStyleNoneKeyword_0_0_0() { return cDashStyleNoneKeyword_0_0_0; }

		//"solid"
		public Keyword getDashStyleSolidKeyword_0_0_1() { return cDashStyleSolidKeyword_0_0_1; }

		//"dotted"
		public Keyword getDashStyleDottedKeyword_0_0_2() { return cDashStyleDottedKeyword_0_0_2; }

		//"dashed"
		public Keyword getDashStyleDashedKeyword_0_0_3() { return cDashStyleDashedKeyword_0_0_3; }

		//location=("centered" | "inside" | "outside")?
		public Assignment getLocationAssignment_1() { return cLocationAssignment_1; }

		//"centered" | "inside" | "outside"
		public Alternatives getLocationAlternatives_1_0() { return cLocationAlternatives_1_0; }

		//"centered"
		public Keyword getLocationCenteredKeyword_1_0_0() { return cLocationCenteredKeyword_1_0_0; }

		//"inside"
		public Keyword getLocationInsideKeyword_1_0_1() { return cLocationInsideKeyword_1_0_1; }

		//"outside"
		public Keyword getLocationOutsideKeyword_1_0_2() { return cLocationOutsideKeyword_1_0_2; }

		//("line-join" ("miter" miterAbs=NUMBER | miterPredefined=("bevel" | "round")))?
		public Group getGroup_2() { return cGroup_2; }

		//"line-join"
		public Keyword getLineJoinKeyword_2_0() { return cLineJoinKeyword_2_0; }

		//"miter" miterAbs=NUMBER | miterPredefined=("bevel" | "round")
		public Alternatives getAlternatives_2_1() { return cAlternatives_2_1; }

		//"miter" miterAbs=NUMBER
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//"miter"
		public Keyword getMiterKeyword_2_1_0_0() { return cMiterKeyword_2_1_0_0; }

		//miterAbs=NUMBER
		public Assignment getMiterAbsAssignment_2_1_0_1() { return cMiterAbsAssignment_2_1_0_1; }

		//NUMBER
		public RuleCall getMiterAbsNUMBERParserRuleCall_2_1_0_1_0() { return cMiterAbsNUMBERParserRuleCall_2_1_0_1_0; }

		//miterPredefined=("bevel" | "round")
		public Assignment getMiterPredefinedAssignment_2_1_1() { return cMiterPredefinedAssignment_2_1_1; }

		//"bevel" | "round"
		public Alternatives getMiterPredefinedAlternatives_2_1_1_0() { return cMiterPredefinedAlternatives_2_1_1_0; }

		//"bevel"
		public Keyword getMiterPredefinedBevelKeyword_2_1_1_0_0() { return cMiterPredefinedBevelKeyword_2_1_1_0_0; }

		//"round"
		public Keyword getMiterPredefinedRoundKeyword_2_1_1_0_1() { return cMiterPredefinedRoundKeyword_2_1_1_0_1; }

		//("line-cap" lineCap=("square" | "butt" | "round"))?
		public Group getGroup_3() { return cGroup_3; }

		//"line-cap"
		public Keyword getLineCapKeyword_3_0() { return cLineCapKeyword_3_0; }

		//lineCap=("square" | "butt" | "round")
		public Assignment getLineCapAssignment_3_1() { return cLineCapAssignment_3_1; }

		//"square" | "butt" | "round"
		public Alternatives getLineCapAlternatives_3_1_0() { return cLineCapAlternatives_3_1_0; }

		//"square"
		public Keyword getLineCapSquareKeyword_3_1_0_0() { return cLineCapSquareKeyword_3_1_0_0; }

		//"butt"
		public Keyword getLineCapButtKeyword_3_1_0_1() { return cLineCapButtKeyword_3_1_0_1; }

		//"round"
		public Keyword getLineCapRoundKeyword_3_1_0_2() { return cLineCapRoundKeyword_3_1_0_2; }
	}

	public class SizeFillElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SizeFill");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueDim4SizeParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cFillAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cFillFillKeyword_2_0 = (Keyword)cFillAssignment_2.eContents().get(0);
		
		//SizeFill:
		//	value=Dim4Size WS* fill="fill"?;
		public ParserRule getRule() { return rule; }

		//value=Dim4Size WS* fill="fill"?
		public Group getGroup() { return cGroup; }

		//value=Dim4Size
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//Dim4Size
		public RuleCall getValueDim4SizeParserRuleCall_0_0() { return cValueDim4SizeParserRuleCall_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//fill="fill"?
		public Assignment getFillAssignment_2() { return cFillAssignment_2; }

		//"fill"
		public Keyword getFillFillKeyword_2_0() { return cFillFillKeyword_2_0; }
	}

	public class ColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Color");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNamedColorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLookedUpColorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRGBColorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cHSBColorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cColorFunctionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Color:
		//	NamedColor | LookedUpColor | RGBColor | HSBColor | ColorFunction;
		public ParserRule getRule() { return rule; }

		//NamedColor | LookedUpColor | RGBColor | HSBColor | ColorFunction
		public Alternatives getAlternatives() { return cAlternatives; }

		//NamedColor
		public RuleCall getNamedColorParserRuleCall_0() { return cNamedColorParserRuleCall_0; }

		//LookedUpColor
		public RuleCall getLookedUpColorParserRuleCall_1() { return cLookedUpColorParserRuleCall_1; }

		//RGBColor
		public RuleCall getRGBColorParserRuleCall_2() { return cRGBColorParserRuleCall_2; }

		//HSBColor
		public RuleCall getHSBColorParserRuleCall_3() { return cHSBColorParserRuleCall_3; }

		//ColorFunction
		public RuleCall getColorFunctionParserRuleCall_4() { return cColorFunctionParserRuleCall_4; }
	}

	public class COLOR_PROPERTIESElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "COLOR_PROPERTIES");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cFxColorKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFxLightTextColorKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cFxAccentKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFxSelectionBarKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFxSelectionBarTextKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cFxBackgroundKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//COLOR_PROPERTIES:
		//	"-fx-color" | "-fx-light-text-color" | "-fx-accent" | "-fx-selection-bar" | "-fx-selection-bar-text" |
		//	"-fx-background";
		public ParserRule getRule() { return rule; }

		//"-fx-color" | "-fx-light-text-color" | "-fx-accent" | "-fx-selection-bar" | "-fx-selection-bar-text" | "-fx-background"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"-fx-color"
		public Keyword getFxColorKeyword_0() { return cFxColorKeyword_0; }

		//"-fx-light-text-color"
		public Keyword getFxLightTextColorKeyword_1() { return cFxLightTextColorKeyword_1; }

		//"-fx-accent"
		public Keyword getFxAccentKeyword_2() { return cFxAccentKeyword_2; }

		//"-fx-selection-bar"
		public Keyword getFxSelectionBarKeyword_3() { return cFxSelectionBarKeyword_3; }

		//"-fx-selection-bar-text"
		public Keyword getFxSelectionBarTextKeyword_4() { return cFxSelectionBarTextKeyword_4; }

		//"-fx-background"
		public Keyword getFxBackgroundKeyword_5() { return cFxBackgroundKeyword_5; }
	}

	public class LookedUpColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LookedUpColor");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final RuleCall cValueCOLOR_PROPERTIESParserRuleCall_0_0 = (RuleCall)cValueAlternatives_0.eContents().get(0);
		private final RuleCall cValueIDENTTerminalRuleCall_0_1 = (RuleCall)cValueAlternatives_0.eContents().get(1);
		
		//LookedUpColor:
		//	value=(COLOR_PROPERTIES | IDENT);
		public ParserRule getRule() { return rule; }

		//value=(COLOR_PROPERTIES | IDENT)
		public Assignment getValueAssignment() { return cValueAssignment; }

		//COLOR_PROPERTIES | IDENT
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }

		//COLOR_PROPERTIES
		public RuleCall getValueCOLOR_PROPERTIESParserRuleCall_0_0() { return cValueCOLOR_PROPERTIESParserRuleCall_0_0; }

		//IDENT
		public RuleCall getValueIDENTTerminalRuleCall_0_1() { return cValueIDENTTerminalRuleCall_0_1; }
	}

	public class NamedColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedColor");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final Keyword cValueAliceblueKeyword_0_0 = (Keyword)cValueAlternatives_0.eContents().get(0);
		private final Keyword cValueAntiquewhiteKeyword_0_1 = (Keyword)cValueAlternatives_0.eContents().get(1);
		private final Keyword cValueAquaKeyword_0_2 = (Keyword)cValueAlternatives_0.eContents().get(2);
		private final Keyword cValueAquamarineKeyword_0_3 = (Keyword)cValueAlternatives_0.eContents().get(3);
		private final Keyword cValueAzureKeyword_0_4 = (Keyword)cValueAlternatives_0.eContents().get(4);
		private final Keyword cValueBeigeKeyword_0_5 = (Keyword)cValueAlternatives_0.eContents().get(5);
		private final Keyword cValueBisqueKeyword_0_6 = (Keyword)cValueAlternatives_0.eContents().get(6);
		private final Keyword cValueBlackKeyword_0_7 = (Keyword)cValueAlternatives_0.eContents().get(7);
		private final Keyword cValueBlanchedalmondKeyword_0_8 = (Keyword)cValueAlternatives_0.eContents().get(8);
		private final Keyword cValueBlueKeyword_0_9 = (Keyword)cValueAlternatives_0.eContents().get(9);
		private final Keyword cValueBluevioletKeyword_0_10 = (Keyword)cValueAlternatives_0.eContents().get(10);
		private final Keyword cValueBrownKeyword_0_11 = (Keyword)cValueAlternatives_0.eContents().get(11);
		private final Keyword cValueBurlywoodKeyword_0_12 = (Keyword)cValueAlternatives_0.eContents().get(12);
		private final Keyword cValueCadetblueKeyword_0_13 = (Keyword)cValueAlternatives_0.eContents().get(13);
		private final Keyword cValueChartreuseKeyword_0_14 = (Keyword)cValueAlternatives_0.eContents().get(14);
		private final Keyword cValueChocolateKeyword_0_15 = (Keyword)cValueAlternatives_0.eContents().get(15);
		private final Keyword cValueCoralKeyword_0_16 = (Keyword)cValueAlternatives_0.eContents().get(16);
		private final Keyword cValueCornflowerblueKeyword_0_17 = (Keyword)cValueAlternatives_0.eContents().get(17);
		private final Keyword cValueCornsilkKeyword_0_18 = (Keyword)cValueAlternatives_0.eContents().get(18);
		private final Keyword cValueCrimsonKeyword_0_19 = (Keyword)cValueAlternatives_0.eContents().get(19);
		private final Keyword cValueCyanKeyword_0_20 = (Keyword)cValueAlternatives_0.eContents().get(20);
		private final Keyword cValueDarkblueKeyword_0_21 = (Keyword)cValueAlternatives_0.eContents().get(21);
		private final Keyword cValueDarkcyanKeyword_0_22 = (Keyword)cValueAlternatives_0.eContents().get(22);
		private final Keyword cValueDarkgoldenrodKeyword_0_23 = (Keyword)cValueAlternatives_0.eContents().get(23);
		private final Keyword cValueDarkgrayKeyword_0_24 = (Keyword)cValueAlternatives_0.eContents().get(24);
		private final Keyword cValueDarkgreenKeyword_0_25 = (Keyword)cValueAlternatives_0.eContents().get(25);
		private final Keyword cValueDarkgreyKeyword_0_26 = (Keyword)cValueAlternatives_0.eContents().get(26);
		private final Keyword cValueDarkkhakiKeyword_0_27 = (Keyword)cValueAlternatives_0.eContents().get(27);
		private final Keyword cValueDarkmagentaKeyword_0_28 = (Keyword)cValueAlternatives_0.eContents().get(28);
		private final Keyword cValueDarkolivegreenKeyword_0_29 = (Keyword)cValueAlternatives_0.eContents().get(29);
		private final Keyword cValueDarkorangeKeyword_0_30 = (Keyword)cValueAlternatives_0.eContents().get(30);
		private final Keyword cValueDarkorchidKeyword_0_31 = (Keyword)cValueAlternatives_0.eContents().get(31);
		private final Keyword cValueDarkredKeyword_0_32 = (Keyword)cValueAlternatives_0.eContents().get(32);
		private final Keyword cValueDarksalmonKeyword_0_33 = (Keyword)cValueAlternatives_0.eContents().get(33);
		private final Keyword cValueDarkseagreenKeyword_0_34 = (Keyword)cValueAlternatives_0.eContents().get(34);
		private final Keyword cValueDarkslateblueKeyword_0_35 = (Keyword)cValueAlternatives_0.eContents().get(35);
		private final Keyword cValueDarkslategrayKeyword_0_36 = (Keyword)cValueAlternatives_0.eContents().get(36);
		private final Keyword cValueDarkslategreyKeyword_0_37 = (Keyword)cValueAlternatives_0.eContents().get(37);
		private final Keyword cValueDarkturquoiseKeyword_0_38 = (Keyword)cValueAlternatives_0.eContents().get(38);
		private final Keyword cValueDarkvioletKeyword_0_39 = (Keyword)cValueAlternatives_0.eContents().get(39);
		private final Keyword cValueDeeppinkKeyword_0_40 = (Keyword)cValueAlternatives_0.eContents().get(40);
		private final Keyword cValueDeepskyblueKeyword_0_41 = (Keyword)cValueAlternatives_0.eContents().get(41);
		private final Keyword cValueDimgrayKeyword_0_42 = (Keyword)cValueAlternatives_0.eContents().get(42);
		private final Keyword cValueDimgreyKeyword_0_43 = (Keyword)cValueAlternatives_0.eContents().get(43);
		private final Keyword cValueDodgerblueKeyword_0_44 = (Keyword)cValueAlternatives_0.eContents().get(44);
		private final Keyword cValueFirebrickKeyword_0_45 = (Keyword)cValueAlternatives_0.eContents().get(45);
		private final Keyword cValueFloralwhiteKeyword_0_46 = (Keyword)cValueAlternatives_0.eContents().get(46);
		private final Keyword cValueForestgreenKeyword_0_47 = (Keyword)cValueAlternatives_0.eContents().get(47);
		private final Keyword cValueFuchsiaKeyword_0_48 = (Keyword)cValueAlternatives_0.eContents().get(48);
		private final Keyword cValueGainsboroKeyword_0_49 = (Keyword)cValueAlternatives_0.eContents().get(49);
		private final Keyword cValueGhostwhiteKeyword_0_50 = (Keyword)cValueAlternatives_0.eContents().get(50);
		private final Keyword cValueGoldKeyword_0_51 = (Keyword)cValueAlternatives_0.eContents().get(51);
		private final Keyword cValueGoldenrodKeyword_0_52 = (Keyword)cValueAlternatives_0.eContents().get(52);
		private final Keyword cValueGrayKeyword_0_53 = (Keyword)cValueAlternatives_0.eContents().get(53);
		private final Keyword cValueGreenKeyword_0_54 = (Keyword)cValueAlternatives_0.eContents().get(54);
		private final Keyword cValueGreenyellowKeyword_0_55 = (Keyword)cValueAlternatives_0.eContents().get(55);
		private final Keyword cValueGreyKeyword_0_56 = (Keyword)cValueAlternatives_0.eContents().get(56);
		private final Keyword cValueHoneydewKeyword_0_57 = (Keyword)cValueAlternatives_0.eContents().get(57);
		private final Keyword cValueHotpinkKeyword_0_58 = (Keyword)cValueAlternatives_0.eContents().get(58);
		private final Keyword cValueIndianredKeyword_0_59 = (Keyword)cValueAlternatives_0.eContents().get(59);
		private final Keyword cValueIndigoKeyword_0_60 = (Keyword)cValueAlternatives_0.eContents().get(60);
		private final Keyword cValueIvoryKeyword_0_61 = (Keyword)cValueAlternatives_0.eContents().get(61);
		private final Keyword cValueKhakiKeyword_0_62 = (Keyword)cValueAlternatives_0.eContents().get(62);
		private final Keyword cValueLavenderKeyword_0_63 = (Keyword)cValueAlternatives_0.eContents().get(63);
		private final Keyword cValueLavenderblushKeyword_0_64 = (Keyword)cValueAlternatives_0.eContents().get(64);
		private final Keyword cValueLawngreenKeyword_0_65 = (Keyword)cValueAlternatives_0.eContents().get(65);
		private final Keyword cValueLemonchiffonKeyword_0_66 = (Keyword)cValueAlternatives_0.eContents().get(66);
		private final Keyword cValueLightblueKeyword_0_67 = (Keyword)cValueAlternatives_0.eContents().get(67);
		private final Keyword cValueLightcoralKeyword_0_68 = (Keyword)cValueAlternatives_0.eContents().get(68);
		private final Keyword cValueLightcyanKeyword_0_69 = (Keyword)cValueAlternatives_0.eContents().get(69);
		private final Keyword cValueLightgoldenrodyellowKeyword_0_70 = (Keyword)cValueAlternatives_0.eContents().get(70);
		private final Keyword cValueLightgrayKeyword_0_71 = (Keyword)cValueAlternatives_0.eContents().get(71);
		private final Keyword cValueLightgreenKeyword_0_72 = (Keyword)cValueAlternatives_0.eContents().get(72);
		private final Keyword cValueLightgreyKeyword_0_73 = (Keyword)cValueAlternatives_0.eContents().get(73);
		private final Keyword cValueLightpinkKeyword_0_74 = (Keyword)cValueAlternatives_0.eContents().get(74);
		private final Keyword cValueLightsalmonKeyword_0_75 = (Keyword)cValueAlternatives_0.eContents().get(75);
		private final Keyword cValueLightseagreenKeyword_0_76 = (Keyword)cValueAlternatives_0.eContents().get(76);
		private final Keyword cValueLightskyblueKeyword_0_77 = (Keyword)cValueAlternatives_0.eContents().get(77);
		private final Keyword cValueLightslategrayKeyword_0_78 = (Keyword)cValueAlternatives_0.eContents().get(78);
		private final Keyword cValueLightslategreyKeyword_0_79 = (Keyword)cValueAlternatives_0.eContents().get(79);
		private final Keyword cValueLightsteelblueKeyword_0_80 = (Keyword)cValueAlternatives_0.eContents().get(80);
		private final Keyword cValueLightyellowKeyword_0_81 = (Keyword)cValueAlternatives_0.eContents().get(81);
		private final Keyword cValueLimeKeyword_0_82 = (Keyword)cValueAlternatives_0.eContents().get(82);
		private final Keyword cValueLimegreenKeyword_0_83 = (Keyword)cValueAlternatives_0.eContents().get(83);
		private final Keyword cValueLinenKeyword_0_84 = (Keyword)cValueAlternatives_0.eContents().get(84);
		private final Keyword cValueMagentaKeyword_0_85 = (Keyword)cValueAlternatives_0.eContents().get(85);
		private final Keyword cValueMaroonKeyword_0_86 = (Keyword)cValueAlternatives_0.eContents().get(86);
		private final Keyword cValueMediumaquamarineKeyword_0_87 = (Keyword)cValueAlternatives_0.eContents().get(87);
		private final Keyword cValueMediumblueKeyword_0_88 = (Keyword)cValueAlternatives_0.eContents().get(88);
		private final Keyword cValueMediumorchidKeyword_0_89 = (Keyword)cValueAlternatives_0.eContents().get(89);
		private final Keyword cValueMediumpurpleKeyword_0_90 = (Keyword)cValueAlternatives_0.eContents().get(90);
		private final Keyword cValueMediumseagreenKeyword_0_91 = (Keyword)cValueAlternatives_0.eContents().get(91);
		private final Keyword cValueMediumslateblueKeyword_0_92 = (Keyword)cValueAlternatives_0.eContents().get(92);
		private final Keyword cValueMediumspringgreenKeyword_0_93 = (Keyword)cValueAlternatives_0.eContents().get(93);
		private final Keyword cValueMediumturquoiseKeyword_0_94 = (Keyword)cValueAlternatives_0.eContents().get(94);
		private final Keyword cValueMediumvioletredKeyword_0_95 = (Keyword)cValueAlternatives_0.eContents().get(95);
		private final Keyword cValueMidnightblueKeyword_0_96 = (Keyword)cValueAlternatives_0.eContents().get(96);
		private final Keyword cValueMintcreamKeyword_0_97 = (Keyword)cValueAlternatives_0.eContents().get(97);
		private final Keyword cValueMistyroseKeyword_0_98 = (Keyword)cValueAlternatives_0.eContents().get(98);
		private final Keyword cValueMoccasinKeyword_0_99 = (Keyword)cValueAlternatives_0.eContents().get(99);
		private final Keyword cValueNavajowhiteKeyword_0_100 = (Keyword)cValueAlternatives_0.eContents().get(100);
		private final Keyword cValueNavyKeyword_0_101 = (Keyword)cValueAlternatives_0.eContents().get(101);
		private final Keyword cValueOldlaceKeyword_0_102 = (Keyword)cValueAlternatives_0.eContents().get(102);
		private final Keyword cValueOliveKeyword_0_103 = (Keyword)cValueAlternatives_0.eContents().get(103);
		private final Keyword cValueOlivedrabKeyword_0_104 = (Keyword)cValueAlternatives_0.eContents().get(104);
		private final Keyword cValueOrangeKeyword_0_105 = (Keyword)cValueAlternatives_0.eContents().get(105);
		private final Keyword cValueOrangeredKeyword_0_106 = (Keyword)cValueAlternatives_0.eContents().get(106);
		private final Keyword cValueOrchidKeyword_0_107 = (Keyword)cValueAlternatives_0.eContents().get(107);
		private final Keyword cValuePalegoldenrodKeyword_0_108 = (Keyword)cValueAlternatives_0.eContents().get(108);
		private final Keyword cValuePalegreenKeyword_0_109 = (Keyword)cValueAlternatives_0.eContents().get(109);
		private final Keyword cValuePaleturquoiseKeyword_0_110 = (Keyword)cValueAlternatives_0.eContents().get(110);
		private final Keyword cValuePalevioletredKeyword_0_111 = (Keyword)cValueAlternatives_0.eContents().get(111);
		private final Keyword cValuePapayawhipKeyword_0_112 = (Keyword)cValueAlternatives_0.eContents().get(112);
		private final Keyword cValuePeachpuffKeyword_0_113 = (Keyword)cValueAlternatives_0.eContents().get(113);
		private final Keyword cValuePeruKeyword_0_114 = (Keyword)cValueAlternatives_0.eContents().get(114);
		private final Keyword cValuePinkKeyword_0_115 = (Keyword)cValueAlternatives_0.eContents().get(115);
		private final Keyword cValuePlumKeyword_0_116 = (Keyword)cValueAlternatives_0.eContents().get(116);
		private final Keyword cValuePowderblueKeyword_0_117 = (Keyword)cValueAlternatives_0.eContents().get(117);
		private final Keyword cValuePurpleKeyword_0_118 = (Keyword)cValueAlternatives_0.eContents().get(118);
		private final Keyword cValueRedKeyword_0_119 = (Keyword)cValueAlternatives_0.eContents().get(119);
		private final Keyword cValueRosybrownKeyword_0_120 = (Keyword)cValueAlternatives_0.eContents().get(120);
		private final Keyword cValueRoyalblueKeyword_0_121 = (Keyword)cValueAlternatives_0.eContents().get(121);
		private final Keyword cValueSaddlebrownKeyword_0_122 = (Keyword)cValueAlternatives_0.eContents().get(122);
		private final Keyword cValueSalmonKeyword_0_123 = (Keyword)cValueAlternatives_0.eContents().get(123);
		private final Keyword cValueSandybrownKeyword_0_124 = (Keyword)cValueAlternatives_0.eContents().get(124);
		private final Keyword cValueSeagreenKeyword_0_125 = (Keyword)cValueAlternatives_0.eContents().get(125);
		private final Keyword cValueSeashellKeyword_0_126 = (Keyword)cValueAlternatives_0.eContents().get(126);
		private final Keyword cValueSiennaKeyword_0_127 = (Keyword)cValueAlternatives_0.eContents().get(127);
		private final Keyword cValueSilverKeyword_0_128 = (Keyword)cValueAlternatives_0.eContents().get(128);
		private final Keyword cValueSkyblueKeyword_0_129 = (Keyword)cValueAlternatives_0.eContents().get(129);
		private final Keyword cValueSlateblueKeyword_0_130 = (Keyword)cValueAlternatives_0.eContents().get(130);
		private final Keyword cValueSlategrayKeyword_0_131 = (Keyword)cValueAlternatives_0.eContents().get(131);
		private final Keyword cValueSlategreyKeyword_0_132 = (Keyword)cValueAlternatives_0.eContents().get(132);
		private final Keyword cValueSnowKeyword_0_133 = (Keyword)cValueAlternatives_0.eContents().get(133);
		private final Keyword cValueSpringgreenKeyword_0_134 = (Keyword)cValueAlternatives_0.eContents().get(134);
		private final Keyword cValueSteelblueKeyword_0_135 = (Keyword)cValueAlternatives_0.eContents().get(135);
		private final Keyword cValueTanKeyword_0_136 = (Keyword)cValueAlternatives_0.eContents().get(136);
		private final Keyword cValueTealKeyword_0_137 = (Keyword)cValueAlternatives_0.eContents().get(137);
		private final Keyword cValueThistleKeyword_0_138 = (Keyword)cValueAlternatives_0.eContents().get(138);
		private final Keyword cValueTomatoKeyword_0_139 = (Keyword)cValueAlternatives_0.eContents().get(139);
		private final Keyword cValueTurquoiseKeyword_0_140 = (Keyword)cValueAlternatives_0.eContents().get(140);
		private final Keyword cValueVioletKeyword_0_141 = (Keyword)cValueAlternatives_0.eContents().get(141);
		private final Keyword cValueWheatKeyword_0_142 = (Keyword)cValueAlternatives_0.eContents().get(142);
		private final Keyword cValueWhiteKeyword_0_143 = (Keyword)cValueAlternatives_0.eContents().get(143);
		private final Keyword cValueWhitesmokeKeyword_0_144 = (Keyword)cValueAlternatives_0.eContents().get(144);
		private final Keyword cValueYellowKeyword_0_145 = (Keyword)cValueAlternatives_0.eContents().get(145);
		private final Keyword cValueYellowgreenKeyword_0_146 = (Keyword)cValueAlternatives_0.eContents().get(146);
		private final Keyword cValueTransparentKeyword_0_147 = (Keyword)cValueAlternatives_0.eContents().get(147);
		
		//NamedColor:
		//	value=("aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" |
		//	"blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral"
		//	| "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" |
		//	"darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" |
		//	"darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" |
		//	"deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" |
		//	"fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew"
		//	| "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon"
		//	| "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" |
		//	"lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" |
		//	"lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" |
		//	"mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" |
		//	"mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" |
		//	"navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" |
		//	"paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" |
		//	"red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" |
		//	"silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal"
		//	| "thistle" | "tomato" | "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" |
		//	"transparent");
		public ParserRule getRule() { return rule; }

		//value=("aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" | "blanchedalmond"
		//| "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue"
		//| "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" |
		//"darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" |
		//"darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" |
		//"deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" |
		//"gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink"
		//| "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" |
		//"lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" |
		//"lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue"
		//| "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" |
		//"mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" |
		//"mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" |
		//"olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" |
		//"palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "red" | "rosybrown"
		//| "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" |
		//"slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato"
		//| "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" | "transparent")
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" | "blanchedalmond" |
		//"blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue" |
		//"cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" |
		//"darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" |
		//"darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" |
		//"deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" |
		//"gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink"
		//| "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" |
		//"lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" |
		//"lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue"
		//| "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" |
		//"mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" |
		//"mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" |
		//"olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" |
		//"palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "red" | "rosybrown"
		//| "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" |
		//"slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato"
		//| "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" | "transparent"
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }

		//"aliceblue"
		public Keyword getValueAliceblueKeyword_0_0() { return cValueAliceblueKeyword_0_0; }

		//"antiquewhite"
		public Keyword getValueAntiquewhiteKeyword_0_1() { return cValueAntiquewhiteKeyword_0_1; }

		//"aqua"
		public Keyword getValueAquaKeyword_0_2() { return cValueAquaKeyword_0_2; }

		//"aquamarine"
		public Keyword getValueAquamarineKeyword_0_3() { return cValueAquamarineKeyword_0_3; }

		//"azure"
		public Keyword getValueAzureKeyword_0_4() { return cValueAzureKeyword_0_4; }

		//"beige"
		public Keyword getValueBeigeKeyword_0_5() { return cValueBeigeKeyword_0_5; }

		//"bisque"
		public Keyword getValueBisqueKeyword_0_6() { return cValueBisqueKeyword_0_6; }

		//"black"
		public Keyword getValueBlackKeyword_0_7() { return cValueBlackKeyword_0_7; }

		//"blanchedalmond"
		public Keyword getValueBlanchedalmondKeyword_0_8() { return cValueBlanchedalmondKeyword_0_8; }

		//"blue"
		public Keyword getValueBlueKeyword_0_9() { return cValueBlueKeyword_0_9; }

		//"blueviolet"
		public Keyword getValueBluevioletKeyword_0_10() { return cValueBluevioletKeyword_0_10; }

		//"brown"
		public Keyword getValueBrownKeyword_0_11() { return cValueBrownKeyword_0_11; }

		//"burlywood"
		public Keyword getValueBurlywoodKeyword_0_12() { return cValueBurlywoodKeyword_0_12; }

		//"cadetblue"
		public Keyword getValueCadetblueKeyword_0_13() { return cValueCadetblueKeyword_0_13; }

		//"chartreuse"
		public Keyword getValueChartreuseKeyword_0_14() { return cValueChartreuseKeyword_0_14; }

		//"chocolate"
		public Keyword getValueChocolateKeyword_0_15() { return cValueChocolateKeyword_0_15; }

		//"coral"
		public Keyword getValueCoralKeyword_0_16() { return cValueCoralKeyword_0_16; }

		//"cornflowerblue"
		public Keyword getValueCornflowerblueKeyword_0_17() { return cValueCornflowerblueKeyword_0_17; }

		//"cornsilk"
		public Keyword getValueCornsilkKeyword_0_18() { return cValueCornsilkKeyword_0_18; }

		//"crimson"
		public Keyword getValueCrimsonKeyword_0_19() { return cValueCrimsonKeyword_0_19; }

		//"cyan"
		public Keyword getValueCyanKeyword_0_20() { return cValueCyanKeyword_0_20; }

		//"darkblue"
		public Keyword getValueDarkblueKeyword_0_21() { return cValueDarkblueKeyword_0_21; }

		//"darkcyan"
		public Keyword getValueDarkcyanKeyword_0_22() { return cValueDarkcyanKeyword_0_22; }

		//"darkgoldenrod"
		public Keyword getValueDarkgoldenrodKeyword_0_23() { return cValueDarkgoldenrodKeyword_0_23; }

		//"darkgray"
		public Keyword getValueDarkgrayKeyword_0_24() { return cValueDarkgrayKeyword_0_24; }

		//"darkgreen"
		public Keyword getValueDarkgreenKeyword_0_25() { return cValueDarkgreenKeyword_0_25; }

		//"darkgrey"
		public Keyword getValueDarkgreyKeyword_0_26() { return cValueDarkgreyKeyword_0_26; }

		//"darkkhaki"
		public Keyword getValueDarkkhakiKeyword_0_27() { return cValueDarkkhakiKeyword_0_27; }

		//"darkmagenta"
		public Keyword getValueDarkmagentaKeyword_0_28() { return cValueDarkmagentaKeyword_0_28; }

		//"darkolivegreen"
		public Keyword getValueDarkolivegreenKeyword_0_29() { return cValueDarkolivegreenKeyword_0_29; }

		//"darkorange"
		public Keyword getValueDarkorangeKeyword_0_30() { return cValueDarkorangeKeyword_0_30; }

		//"darkorchid"
		public Keyword getValueDarkorchidKeyword_0_31() { return cValueDarkorchidKeyword_0_31; }

		//"darkred"
		public Keyword getValueDarkredKeyword_0_32() { return cValueDarkredKeyword_0_32; }

		//"darksalmon"
		public Keyword getValueDarksalmonKeyword_0_33() { return cValueDarksalmonKeyword_0_33; }

		//"darkseagreen"
		public Keyword getValueDarkseagreenKeyword_0_34() { return cValueDarkseagreenKeyword_0_34; }

		//"darkslateblue"
		public Keyword getValueDarkslateblueKeyword_0_35() { return cValueDarkslateblueKeyword_0_35; }

		//"darkslategray"
		public Keyword getValueDarkslategrayKeyword_0_36() { return cValueDarkslategrayKeyword_0_36; }

		//"darkslategrey"
		public Keyword getValueDarkslategreyKeyword_0_37() { return cValueDarkslategreyKeyword_0_37; }

		//"darkturquoise"
		public Keyword getValueDarkturquoiseKeyword_0_38() { return cValueDarkturquoiseKeyword_0_38; }

		//"darkviolet"
		public Keyword getValueDarkvioletKeyword_0_39() { return cValueDarkvioletKeyword_0_39; }

		//"deeppink"
		public Keyword getValueDeeppinkKeyword_0_40() { return cValueDeeppinkKeyword_0_40; }

		//"deepskyblue"
		public Keyword getValueDeepskyblueKeyword_0_41() { return cValueDeepskyblueKeyword_0_41; }

		//"dimgray"
		public Keyword getValueDimgrayKeyword_0_42() { return cValueDimgrayKeyword_0_42; }

		//"dimgrey"
		public Keyword getValueDimgreyKeyword_0_43() { return cValueDimgreyKeyword_0_43; }

		//"dodgerblue"
		public Keyword getValueDodgerblueKeyword_0_44() { return cValueDodgerblueKeyword_0_44; }

		//"firebrick"
		public Keyword getValueFirebrickKeyword_0_45() { return cValueFirebrickKeyword_0_45; }

		//"floralwhite"
		public Keyword getValueFloralwhiteKeyword_0_46() { return cValueFloralwhiteKeyword_0_46; }

		//"forestgreen"
		public Keyword getValueForestgreenKeyword_0_47() { return cValueForestgreenKeyword_0_47; }

		//"fuchsia"
		public Keyword getValueFuchsiaKeyword_0_48() { return cValueFuchsiaKeyword_0_48; }

		//"gainsboro"
		public Keyword getValueGainsboroKeyword_0_49() { return cValueGainsboroKeyword_0_49; }

		//"ghostwhite"
		public Keyword getValueGhostwhiteKeyword_0_50() { return cValueGhostwhiteKeyword_0_50; }

		//"gold"
		public Keyword getValueGoldKeyword_0_51() { return cValueGoldKeyword_0_51; }

		//"goldenrod"
		public Keyword getValueGoldenrodKeyword_0_52() { return cValueGoldenrodKeyword_0_52; }

		//"gray"
		public Keyword getValueGrayKeyword_0_53() { return cValueGrayKeyword_0_53; }

		//"green"
		public Keyword getValueGreenKeyword_0_54() { return cValueGreenKeyword_0_54; }

		//"greenyellow"
		public Keyword getValueGreenyellowKeyword_0_55() { return cValueGreenyellowKeyword_0_55; }

		//"grey"
		public Keyword getValueGreyKeyword_0_56() { return cValueGreyKeyword_0_56; }

		//"honeydew"
		public Keyword getValueHoneydewKeyword_0_57() { return cValueHoneydewKeyword_0_57; }

		//"hotpink"
		public Keyword getValueHotpinkKeyword_0_58() { return cValueHotpinkKeyword_0_58; }

		//"indianred"
		public Keyword getValueIndianredKeyword_0_59() { return cValueIndianredKeyword_0_59; }

		//"indigo"
		public Keyword getValueIndigoKeyword_0_60() { return cValueIndigoKeyword_0_60; }

		//"ivory"
		public Keyword getValueIvoryKeyword_0_61() { return cValueIvoryKeyword_0_61; }

		//"khaki"
		public Keyword getValueKhakiKeyword_0_62() { return cValueKhakiKeyword_0_62; }

		//"lavender"
		public Keyword getValueLavenderKeyword_0_63() { return cValueLavenderKeyword_0_63; }

		//"lavenderblush"
		public Keyword getValueLavenderblushKeyword_0_64() { return cValueLavenderblushKeyword_0_64; }

		//"lawngreen"
		public Keyword getValueLawngreenKeyword_0_65() { return cValueLawngreenKeyword_0_65; }

		//"lemonchiffon"
		public Keyword getValueLemonchiffonKeyword_0_66() { return cValueLemonchiffonKeyword_0_66; }

		//"lightblue"
		public Keyword getValueLightblueKeyword_0_67() { return cValueLightblueKeyword_0_67; }

		//"lightcoral"
		public Keyword getValueLightcoralKeyword_0_68() { return cValueLightcoralKeyword_0_68; }

		//"lightcyan"
		public Keyword getValueLightcyanKeyword_0_69() { return cValueLightcyanKeyword_0_69; }

		//"lightgoldenrodyellow"
		public Keyword getValueLightgoldenrodyellowKeyword_0_70() { return cValueLightgoldenrodyellowKeyword_0_70; }

		//"lightgray"
		public Keyword getValueLightgrayKeyword_0_71() { return cValueLightgrayKeyword_0_71; }

		//"lightgreen"
		public Keyword getValueLightgreenKeyword_0_72() { return cValueLightgreenKeyword_0_72; }

		//"lightgrey"
		public Keyword getValueLightgreyKeyword_0_73() { return cValueLightgreyKeyword_0_73; }

		//"lightpink"
		public Keyword getValueLightpinkKeyword_0_74() { return cValueLightpinkKeyword_0_74; }

		//"lightsalmon"
		public Keyword getValueLightsalmonKeyword_0_75() { return cValueLightsalmonKeyword_0_75; }

		//"lightseagreen"
		public Keyword getValueLightseagreenKeyword_0_76() { return cValueLightseagreenKeyword_0_76; }

		//"lightskyblue"
		public Keyword getValueLightskyblueKeyword_0_77() { return cValueLightskyblueKeyword_0_77; }

		//"lightslategray"
		public Keyword getValueLightslategrayKeyword_0_78() { return cValueLightslategrayKeyword_0_78; }

		//"lightslategrey"
		public Keyword getValueLightslategreyKeyword_0_79() { return cValueLightslategreyKeyword_0_79; }

		//"lightsteelblue"
		public Keyword getValueLightsteelblueKeyword_0_80() { return cValueLightsteelblueKeyword_0_80; }

		//"lightyellow"
		public Keyword getValueLightyellowKeyword_0_81() { return cValueLightyellowKeyword_0_81; }

		//"lime"
		public Keyword getValueLimeKeyword_0_82() { return cValueLimeKeyword_0_82; }

		//"limegreen"
		public Keyword getValueLimegreenKeyword_0_83() { return cValueLimegreenKeyword_0_83; }

		//"linen"
		public Keyword getValueLinenKeyword_0_84() { return cValueLinenKeyword_0_84; }

		//"magenta"
		public Keyword getValueMagentaKeyword_0_85() { return cValueMagentaKeyword_0_85; }

		//"maroon"
		public Keyword getValueMaroonKeyword_0_86() { return cValueMaroonKeyword_0_86; }

		//"mediumaquamarine"
		public Keyword getValueMediumaquamarineKeyword_0_87() { return cValueMediumaquamarineKeyword_0_87; }

		//"mediumblue"
		public Keyword getValueMediumblueKeyword_0_88() { return cValueMediumblueKeyword_0_88; }

		//"mediumorchid"
		public Keyword getValueMediumorchidKeyword_0_89() { return cValueMediumorchidKeyword_0_89; }

		//"mediumpurple"
		public Keyword getValueMediumpurpleKeyword_0_90() { return cValueMediumpurpleKeyword_0_90; }

		//"mediumseagreen"
		public Keyword getValueMediumseagreenKeyword_0_91() { return cValueMediumseagreenKeyword_0_91; }

		//"mediumslateblue"
		public Keyword getValueMediumslateblueKeyword_0_92() { return cValueMediumslateblueKeyword_0_92; }

		//"mediumspringgreen"
		public Keyword getValueMediumspringgreenKeyword_0_93() { return cValueMediumspringgreenKeyword_0_93; }

		//"mediumturquoise"
		public Keyword getValueMediumturquoiseKeyword_0_94() { return cValueMediumturquoiseKeyword_0_94; }

		//"mediumvioletred"
		public Keyword getValueMediumvioletredKeyword_0_95() { return cValueMediumvioletredKeyword_0_95; }

		//"midnightblue"
		public Keyword getValueMidnightblueKeyword_0_96() { return cValueMidnightblueKeyword_0_96; }

		//"mintcream"
		public Keyword getValueMintcreamKeyword_0_97() { return cValueMintcreamKeyword_0_97; }

		//"mistyrose"
		public Keyword getValueMistyroseKeyword_0_98() { return cValueMistyroseKeyword_0_98; }

		//"moccasin"
		public Keyword getValueMoccasinKeyword_0_99() { return cValueMoccasinKeyword_0_99; }

		//"navajowhite"
		public Keyword getValueNavajowhiteKeyword_0_100() { return cValueNavajowhiteKeyword_0_100; }

		//"navy"
		public Keyword getValueNavyKeyword_0_101() { return cValueNavyKeyword_0_101; }

		//"oldlace"
		public Keyword getValueOldlaceKeyword_0_102() { return cValueOldlaceKeyword_0_102; }

		//"olive"
		public Keyword getValueOliveKeyword_0_103() { return cValueOliveKeyword_0_103; }

		//"olivedrab"
		public Keyword getValueOlivedrabKeyword_0_104() { return cValueOlivedrabKeyword_0_104; }

		//"orange"
		public Keyword getValueOrangeKeyword_0_105() { return cValueOrangeKeyword_0_105; }

		//"orangered"
		public Keyword getValueOrangeredKeyword_0_106() { return cValueOrangeredKeyword_0_106; }

		//"orchid"
		public Keyword getValueOrchidKeyword_0_107() { return cValueOrchidKeyword_0_107; }

		//"palegoldenrod"
		public Keyword getValuePalegoldenrodKeyword_0_108() { return cValuePalegoldenrodKeyword_0_108; }

		//"palegreen"
		public Keyword getValuePalegreenKeyword_0_109() { return cValuePalegreenKeyword_0_109; }

		//"paleturquoise"
		public Keyword getValuePaleturquoiseKeyword_0_110() { return cValuePaleturquoiseKeyword_0_110; }

		//"palevioletred"
		public Keyword getValuePalevioletredKeyword_0_111() { return cValuePalevioletredKeyword_0_111; }

		//"papayawhip"
		public Keyword getValuePapayawhipKeyword_0_112() { return cValuePapayawhipKeyword_0_112; }

		//"peachpuff"
		public Keyword getValuePeachpuffKeyword_0_113() { return cValuePeachpuffKeyword_0_113; }

		//"peru"
		public Keyword getValuePeruKeyword_0_114() { return cValuePeruKeyword_0_114; }

		//"pink"
		public Keyword getValuePinkKeyword_0_115() { return cValuePinkKeyword_0_115; }

		//"plum"
		public Keyword getValuePlumKeyword_0_116() { return cValuePlumKeyword_0_116; }

		//"powderblue"
		public Keyword getValuePowderblueKeyword_0_117() { return cValuePowderblueKeyword_0_117; }

		//"purple"
		public Keyword getValuePurpleKeyword_0_118() { return cValuePurpleKeyword_0_118; }

		//"red"
		public Keyword getValueRedKeyword_0_119() { return cValueRedKeyword_0_119; }

		//"rosybrown"
		public Keyword getValueRosybrownKeyword_0_120() { return cValueRosybrownKeyword_0_120; }

		//"royalblue"
		public Keyword getValueRoyalblueKeyword_0_121() { return cValueRoyalblueKeyword_0_121; }

		//"saddlebrown"
		public Keyword getValueSaddlebrownKeyword_0_122() { return cValueSaddlebrownKeyword_0_122; }

		//"salmon"
		public Keyword getValueSalmonKeyword_0_123() { return cValueSalmonKeyword_0_123; }

		//"sandybrown"
		public Keyword getValueSandybrownKeyword_0_124() { return cValueSandybrownKeyword_0_124; }

		//"seagreen"
		public Keyword getValueSeagreenKeyword_0_125() { return cValueSeagreenKeyword_0_125; }

		//"seashell"
		public Keyword getValueSeashellKeyword_0_126() { return cValueSeashellKeyword_0_126; }

		//"sienna"
		public Keyword getValueSiennaKeyword_0_127() { return cValueSiennaKeyword_0_127; }

		//"silver"
		public Keyword getValueSilverKeyword_0_128() { return cValueSilverKeyword_0_128; }

		//"skyblue"
		public Keyword getValueSkyblueKeyword_0_129() { return cValueSkyblueKeyword_0_129; }

		//"slateblue"
		public Keyword getValueSlateblueKeyword_0_130() { return cValueSlateblueKeyword_0_130; }

		//"slategray"
		public Keyword getValueSlategrayKeyword_0_131() { return cValueSlategrayKeyword_0_131; }

		//"slategrey"
		public Keyword getValueSlategreyKeyword_0_132() { return cValueSlategreyKeyword_0_132; }

		//"snow"
		public Keyword getValueSnowKeyword_0_133() { return cValueSnowKeyword_0_133; }

		//"springgreen"
		public Keyword getValueSpringgreenKeyword_0_134() { return cValueSpringgreenKeyword_0_134; }

		//"steelblue"
		public Keyword getValueSteelblueKeyword_0_135() { return cValueSteelblueKeyword_0_135; }

		//"tan"
		public Keyword getValueTanKeyword_0_136() { return cValueTanKeyword_0_136; }

		//"teal"
		public Keyword getValueTealKeyword_0_137() { return cValueTealKeyword_0_137; }

		//"thistle"
		public Keyword getValueThistleKeyword_0_138() { return cValueThistleKeyword_0_138; }

		//"tomato"
		public Keyword getValueTomatoKeyword_0_139() { return cValueTomatoKeyword_0_139; }

		//"turquoise"
		public Keyword getValueTurquoiseKeyword_0_140() { return cValueTurquoiseKeyword_0_140; }

		//"violet"
		public Keyword getValueVioletKeyword_0_141() { return cValueVioletKeyword_0_141; }

		//"wheat"
		public Keyword getValueWheatKeyword_0_142() { return cValueWheatKeyword_0_142; }

		//"white"
		public Keyword getValueWhiteKeyword_0_143() { return cValueWhiteKeyword_0_143; }

		//"whitesmoke"
		public Keyword getValueWhitesmokeKeyword_0_144() { return cValueWhitesmokeKeyword_0_144; }

		//"yellow"
		public Keyword getValueYellowKeyword_0_145() { return cValueYellowKeyword_0_145; }

		//"yellowgreen"
		public Keyword getValueYellowgreenKeyword_0_146() { return cValueYellowgreenKeyword_0_146; }

		//"transparent"
		public Keyword getValueTransparentKeyword_0_147() { return cValueTransparentKeyword_0_147; }
	}

	public class RGBColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RGBColor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cHexcolorAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cHexcolorHexColorParserRuleCall_0_0 = (RuleCall)cHexcolorAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cRgbKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cRAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cRIntegerTerminalRuleCall_1_4_0 = (RuleCall)cRAssignment_1_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		private final Assignment cGAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cGIntegerTerminalRuleCall_1_6_0 = (RuleCall)cGAssignment_1_6.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_1_7 = (RuleCall)cGroup_1.eContents().get(7);
		private final Assignment cBAssignment_1_8 = (Assignment)cGroup_1.eContents().get(8);
		private final RuleCall cBIntegerTerminalRuleCall_1_8_0 = (RuleCall)cBAssignment_1_8.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_9 = (RuleCall)cGroup_1.eContents().get(9);
		private final Keyword cRightParenthesisKeyword_1_10 = (Keyword)cGroup_1.eContents().get(10);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cRgbKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Assignment cRpAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cRpIntegerTerminalRuleCall_2_4_0 = (RuleCall)cRpAssignment_2_4.eContents().get(0);
		private final Keyword cPercentSignKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_2_6 = (RuleCall)cGroup_2.eContents().get(6);
		private final Assignment cGpAssignment_2_7 = (Assignment)cGroup_2.eContents().get(7);
		private final RuleCall cGpIntegerTerminalRuleCall_2_7_0 = (RuleCall)cGpAssignment_2_7.eContents().get(0);
		private final Keyword cPercentSignKeyword_2_8 = (Keyword)cGroup_2.eContents().get(8);
		private final RuleCall cCOMMATerminalRuleCall_2_9 = (RuleCall)cGroup_2.eContents().get(9);
		private final Assignment cBpAssignment_2_10 = (Assignment)cGroup_2.eContents().get(10);
		private final RuleCall cBpIntegerTerminalRuleCall_2_10_0 = (RuleCall)cBpAssignment_2_10.eContents().get(0);
		private final Keyword cPercentSignKeyword_2_11 = (Keyword)cGroup_2.eContents().get(11);
		private final RuleCall cWSTerminalRuleCall_2_12 = (RuleCall)cGroup_2.eContents().get(12);
		private final Keyword cRightParenthesisKeyword_2_13 = (Keyword)cGroup_2.eContents().get(13);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cRgbaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Assignment cRAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cRIntegerTerminalRuleCall_3_4_0 = (RuleCall)cRAssignment_3_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_3_5 = (RuleCall)cGroup_3.eContents().get(5);
		private final Assignment cGAssignment_3_6 = (Assignment)cGroup_3.eContents().get(6);
		private final RuleCall cGIntegerTerminalRuleCall_3_6_0 = (RuleCall)cGAssignment_3_6.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_3_7 = (RuleCall)cGroup_3.eContents().get(7);
		private final Assignment cBAssignment_3_8 = (Assignment)cGroup_3.eContents().get(8);
		private final RuleCall cBIntegerTerminalRuleCall_3_8_0 = (RuleCall)cBAssignment_3_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_3_9 = (RuleCall)cGroup_3.eContents().get(9);
		private final Assignment cAlphaAssignment_3_10 = (Assignment)cGroup_3.eContents().get(10);
		private final RuleCall cAlphaNUMBERParserRuleCall_3_10_0 = (RuleCall)cAlphaAssignment_3_10.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3_11 = (RuleCall)cGroup_3.eContents().get(11);
		private final Keyword cRightParenthesisKeyword_3_12 = (Keyword)cGroup_3.eContents().get(12);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cRgbaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final Assignment cRpAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final RuleCall cRpIntegerTerminalRuleCall_4_4_0 = (RuleCall)cRpAssignment_4_4.eContents().get(0);
		private final Keyword cPercentSignKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_4_6 = (RuleCall)cGroup_4.eContents().get(6);
		private final Assignment cGpAssignment_4_7 = (Assignment)cGroup_4.eContents().get(7);
		private final RuleCall cGpIntegerTerminalRuleCall_4_7_0 = (RuleCall)cGpAssignment_4_7.eContents().get(0);
		private final Keyword cPercentSignKeyword_4_8 = (Keyword)cGroup_4.eContents().get(8);
		private final RuleCall cCOMMATerminalRuleCall_4_9 = (RuleCall)cGroup_4.eContents().get(9);
		private final Assignment cBpAssignment_4_10 = (Assignment)cGroup_4.eContents().get(10);
		private final RuleCall cBpIntegerTerminalRuleCall_4_10_0 = (RuleCall)cBpAssignment_4_10.eContents().get(0);
		private final Keyword cPercentSignKeyword_4_11 = (Keyword)cGroup_4.eContents().get(11);
		private final RuleCall cCOMMATerminalRuleCall_4_12 = (RuleCall)cGroup_4.eContents().get(12);
		private final Assignment cAlphaAssignment_4_13 = (Assignment)cGroup_4.eContents().get(13);
		private final RuleCall cAlphaNUMBERParserRuleCall_4_13_0 = (RuleCall)cAlphaAssignment_4_13.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_14 = (RuleCall)cGroup_4.eContents().get(14);
		private final Keyword cRightParenthesisKeyword_4_15 = (Keyword)cGroup_4.eContents().get(15);
		
		//RGBColor:
		//	hexcolor=HexColor | "rgb" WS* "(" WS* r=integer COMMA g=integer COMMA b=integer WS* ")" | "rgb" WS* "(" WS* rp=integer
		//	"%" COMMA gp=integer "%" COMMA bp=integer "%" WS* ")" | "rgba" WS* "(" WS* r=integer COMMA g=integer COMMA b=integer
		//	COMMA alpha=NUMBER WS* ")" | "rgba" WS* "(" WS* rp=integer "%" COMMA gp=integer "%" COMMA bp=integer "%" COMMA
		//	alpha=NUMBER WS* ")";
		public ParserRule getRule() { return rule; }

		//hexcolor=HexColor | "rgb" WS* "(" WS* r=integer COMMA g=integer COMMA b=integer WS* ")" | "rgb" WS* "(" WS* rp=integer
		//"%" COMMA gp=integer "%" COMMA bp=integer "%" WS* ")" | "rgba" WS* "(" WS* r=integer COMMA g=integer COMMA b=integer
		//COMMA alpha=NUMBER WS* ")" | "rgba" WS* "(" WS* rp=integer "%" COMMA gp=integer "%" COMMA bp=integer "%" COMMA
		//alpha=NUMBER WS* ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//hexcolor=HexColor
		public Assignment getHexcolorAssignment_0() { return cHexcolorAssignment_0; }

		//HexColor
		public RuleCall getHexcolorHexColorParserRuleCall_0_0() { return cHexcolorHexColorParserRuleCall_0_0; }

		//"rgb" WS* "(" WS* r=integer COMMA g=integer COMMA b=integer WS* ")"
		public Group getGroup_1() { return cGroup_1; }

		//"rgb"
		public Keyword getRgbKeyword_1_0() { return cRgbKeyword_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }

		//r=integer
		public Assignment getRAssignment_1_4() { return cRAssignment_1_4; }

		//integer
		public RuleCall getRIntegerTerminalRuleCall_1_4_0() { return cRIntegerTerminalRuleCall_1_4_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_5() { return cCOMMATerminalRuleCall_1_5; }

		//g=integer
		public Assignment getGAssignment_1_6() { return cGAssignment_1_6; }

		//integer
		public RuleCall getGIntegerTerminalRuleCall_1_6_0() { return cGIntegerTerminalRuleCall_1_6_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_7() { return cCOMMATerminalRuleCall_1_7; }

		//b=integer
		public Assignment getBAssignment_1_8() { return cBAssignment_1_8; }

		//integer
		public RuleCall getBIntegerTerminalRuleCall_1_8_0() { return cBIntegerTerminalRuleCall_1_8_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_9() { return cWSTerminalRuleCall_1_9; }

		//")"
		public Keyword getRightParenthesisKeyword_1_10() { return cRightParenthesisKeyword_1_10; }

		//"rgb" WS* "(" WS* rp=integer "%" COMMA gp=integer "%" COMMA bp=integer "%" WS* ")"
		public Group getGroup_2() { return cGroup_2; }

		//"rgb"
		public Keyword getRgbKeyword_2_0() { return cRgbKeyword_2_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_1() { return cWSTerminalRuleCall_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2() { return cLeftParenthesisKeyword_2_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_3() { return cWSTerminalRuleCall_2_3; }

		//rp=integer
		public Assignment getRpAssignment_2_4() { return cRpAssignment_2_4; }

		//integer
		public RuleCall getRpIntegerTerminalRuleCall_2_4_0() { return cRpIntegerTerminalRuleCall_2_4_0; }

		//"%"
		public Keyword getPercentSignKeyword_2_5() { return cPercentSignKeyword_2_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_2_6() { return cCOMMATerminalRuleCall_2_6; }

		//gp=integer
		public Assignment getGpAssignment_2_7() { return cGpAssignment_2_7; }

		//integer
		public RuleCall getGpIntegerTerminalRuleCall_2_7_0() { return cGpIntegerTerminalRuleCall_2_7_0; }

		//"%"
		public Keyword getPercentSignKeyword_2_8() { return cPercentSignKeyword_2_8; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_2_9() { return cCOMMATerminalRuleCall_2_9; }

		//bp=integer
		public Assignment getBpAssignment_2_10() { return cBpAssignment_2_10; }

		//integer
		public RuleCall getBpIntegerTerminalRuleCall_2_10_0() { return cBpIntegerTerminalRuleCall_2_10_0; }

		//"%"
		public Keyword getPercentSignKeyword_2_11() { return cPercentSignKeyword_2_11; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2_12() { return cWSTerminalRuleCall_2_12; }

		//")"
		public Keyword getRightParenthesisKeyword_2_13() { return cRightParenthesisKeyword_2_13; }

		//"rgba" WS* "(" WS* r=integer COMMA g=integer COMMA b=integer COMMA alpha=NUMBER WS* ")"
		public Group getGroup_3() { return cGroup_3; }

		//"rgba"
		public Keyword getRgbaKeyword_3_0() { return cRgbaKeyword_3_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3_1() { return cWSTerminalRuleCall_3_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_2() { return cLeftParenthesisKeyword_3_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3_3() { return cWSTerminalRuleCall_3_3; }

		//r=integer
		public Assignment getRAssignment_3_4() { return cRAssignment_3_4; }

		//integer
		public RuleCall getRIntegerTerminalRuleCall_3_4_0() { return cRIntegerTerminalRuleCall_3_4_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_3_5() { return cCOMMATerminalRuleCall_3_5; }

		//g=integer
		public Assignment getGAssignment_3_6() { return cGAssignment_3_6; }

		//integer
		public RuleCall getGIntegerTerminalRuleCall_3_6_0() { return cGIntegerTerminalRuleCall_3_6_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_3_7() { return cCOMMATerminalRuleCall_3_7; }

		//b=integer
		public Assignment getBAssignment_3_8() { return cBAssignment_3_8; }

		//integer
		public RuleCall getBIntegerTerminalRuleCall_3_8_0() { return cBIntegerTerminalRuleCall_3_8_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_3_9() { return cCOMMATerminalRuleCall_3_9; }

		//alpha=NUMBER
		public Assignment getAlphaAssignment_3_10() { return cAlphaAssignment_3_10; }

		//NUMBER
		public RuleCall getAlphaNUMBERParserRuleCall_3_10_0() { return cAlphaNUMBERParserRuleCall_3_10_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3_11() { return cWSTerminalRuleCall_3_11; }

		//")"
		public Keyword getRightParenthesisKeyword_3_12() { return cRightParenthesisKeyword_3_12; }

		//"rgba" WS* "(" WS* rp=integer "%" COMMA gp=integer "%" COMMA bp=integer "%" COMMA alpha=NUMBER WS* ")"
		public Group getGroup_4() { return cGroup_4; }

		//"rgba"
		public Keyword getRgbaKeyword_4_0() { return cRgbaKeyword_4_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_2() { return cLeftParenthesisKeyword_4_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_3() { return cWSTerminalRuleCall_4_3; }

		//rp=integer
		public Assignment getRpAssignment_4_4() { return cRpAssignment_4_4; }

		//integer
		public RuleCall getRpIntegerTerminalRuleCall_4_4_0() { return cRpIntegerTerminalRuleCall_4_4_0; }

		//"%"
		public Keyword getPercentSignKeyword_4_5() { return cPercentSignKeyword_4_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4_6() { return cCOMMATerminalRuleCall_4_6; }

		//gp=integer
		public Assignment getGpAssignment_4_7() { return cGpAssignment_4_7; }

		//integer
		public RuleCall getGpIntegerTerminalRuleCall_4_7_0() { return cGpIntegerTerminalRuleCall_4_7_0; }

		//"%"
		public Keyword getPercentSignKeyword_4_8() { return cPercentSignKeyword_4_8; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4_9() { return cCOMMATerminalRuleCall_4_9; }

		//bp=integer
		public Assignment getBpAssignment_4_10() { return cBpAssignment_4_10; }

		//integer
		public RuleCall getBpIntegerTerminalRuleCall_4_10_0() { return cBpIntegerTerminalRuleCall_4_10_0; }

		//"%"
		public Keyword getPercentSignKeyword_4_11() { return cPercentSignKeyword_4_11; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4_12() { return cCOMMATerminalRuleCall_4_12; }

		//alpha=NUMBER
		public Assignment getAlphaAssignment_4_13() { return cAlphaAssignment_4_13; }

		//NUMBER
		public RuleCall getAlphaNUMBERParserRuleCall_4_13_0() { return cAlphaNUMBERParserRuleCall_4_13_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_4_14() { return cWSTerminalRuleCall_4_14; }

		//")"
		public Keyword getRightParenthesisKeyword_4_15() { return cRightParenthesisKeyword_4_15; }
	}

	public class HSBColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HSBColor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cHsbKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Assignment cHueAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cHueNUMBERParserRuleCall_0_4_0 = (RuleCall)cHueAssignment_0_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_0_5 = (RuleCall)cGroup_0.eContents().get(5);
		private final Assignment cSaturationAssignment_0_6 = (Assignment)cGroup_0.eContents().get(6);
		private final RuleCall cSaturationPERCENTAGEParserRuleCall_0_6_0 = (RuleCall)cSaturationAssignment_0_6.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_0_7 = (RuleCall)cGroup_0.eContents().get(7);
		private final Assignment cBrightnessAssignment_0_8 = (Assignment)cGroup_0.eContents().get(8);
		private final RuleCall cBrightnessPERCENTAGEParserRuleCall_0_8_0 = (RuleCall)cBrightnessAssignment_0_8.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_9 = (RuleCall)cGroup_0.eContents().get(9);
		private final Keyword cRightParenthesisKeyword_0_10 = (Keyword)cGroup_0.eContents().get(10);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cHsbaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cHueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cHueNUMBERParserRuleCall_1_4_0 = (RuleCall)cHueAssignment_1_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		private final Assignment cSaturationAssignment_1_6 = (Assignment)cGroup_1.eContents().get(6);
		private final RuleCall cSaturationPERCENTAGEParserRuleCall_1_6_0 = (RuleCall)cSaturationAssignment_1_6.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_1_7 = (RuleCall)cGroup_1.eContents().get(7);
		private final Assignment cBrightnessAssignment_1_8 = (Assignment)cGroup_1.eContents().get(8);
		private final RuleCall cBrightnessPERCENTAGEParserRuleCall_1_8_0 = (RuleCall)cBrightnessAssignment_1_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_1_9 = (RuleCall)cGroup_1.eContents().get(9);
		private final Assignment cAlphaAssignment_1_10 = (Assignment)cGroup_1.eContents().get(10);
		private final RuleCall cAlphaNUMBERParserRuleCall_1_10_0 = (RuleCall)cAlphaAssignment_1_10.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_11 = (RuleCall)cGroup_1.eContents().get(11);
		private final Keyword cRightParenthesisKeyword_1_12 = (Keyword)cGroup_1.eContents().get(12);
		
		//HSBColor:
		//	"hsb" WS* "(" WS* hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE WS* ")" | "hsba" WS* "(" WS*
		//	hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE COMMA alpha=NUMBER WS* ")";
		public ParserRule getRule() { return rule; }

		//"hsb" WS* "(" WS* hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE WS* ")" | "hsba" WS* "(" WS*
		//hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE COMMA alpha=NUMBER WS* ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"hsb" WS* "(" WS* hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE WS* ")"
		public Group getGroup_0() { return cGroup_0; }

		//"hsb"
		public Keyword getHsbKeyword_0_0() { return cHsbKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1() { return cWSTerminalRuleCall_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_3() { return cWSTerminalRuleCall_0_3; }

		//hue=NUMBER
		public Assignment getHueAssignment_0_4() { return cHueAssignment_0_4; }

		//NUMBER
		public RuleCall getHueNUMBERParserRuleCall_0_4_0() { return cHueNUMBERParserRuleCall_0_4_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_0_5() { return cCOMMATerminalRuleCall_0_5; }

		//saturation=PERCENTAGE
		public Assignment getSaturationAssignment_0_6() { return cSaturationAssignment_0_6; }

		//PERCENTAGE
		public RuleCall getSaturationPERCENTAGEParserRuleCall_0_6_0() { return cSaturationPERCENTAGEParserRuleCall_0_6_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_0_7() { return cCOMMATerminalRuleCall_0_7; }

		//brightness=PERCENTAGE
		public Assignment getBrightnessAssignment_0_8() { return cBrightnessAssignment_0_8; }

		//PERCENTAGE
		public RuleCall getBrightnessPERCENTAGEParserRuleCall_0_8_0() { return cBrightnessPERCENTAGEParserRuleCall_0_8_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_9() { return cWSTerminalRuleCall_0_9; }

		//")"
		public Keyword getRightParenthesisKeyword_0_10() { return cRightParenthesisKeyword_0_10; }

		//"hsba" WS* "(" WS* hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE COMMA alpha=NUMBER WS* ")"
		public Group getGroup_1() { return cGroup_1; }

		//"hsba"
		public Keyword getHsbaKeyword_1_0() { return cHsbaKeyword_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }

		//hue=NUMBER
		public Assignment getHueAssignment_1_4() { return cHueAssignment_1_4; }

		//NUMBER
		public RuleCall getHueNUMBERParserRuleCall_1_4_0() { return cHueNUMBERParserRuleCall_1_4_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_5() { return cCOMMATerminalRuleCall_1_5; }

		//saturation=PERCENTAGE
		public Assignment getSaturationAssignment_1_6() { return cSaturationAssignment_1_6; }

		//PERCENTAGE
		public RuleCall getSaturationPERCENTAGEParserRuleCall_1_6_0() { return cSaturationPERCENTAGEParserRuleCall_1_6_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_7() { return cCOMMATerminalRuleCall_1_7; }

		//brightness=PERCENTAGE
		public Assignment getBrightnessAssignment_1_8() { return cBrightnessAssignment_1_8; }

		//PERCENTAGE
		public RuleCall getBrightnessPERCENTAGEParserRuleCall_1_8_0() { return cBrightnessPERCENTAGEParserRuleCall_1_8_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_9() { return cCOMMATerminalRuleCall_1_9; }

		//alpha=NUMBER
		public Assignment getAlphaAssignment_1_10() { return cAlphaAssignment_1_10; }

		//NUMBER
		public RuleCall getAlphaNUMBERParserRuleCall_1_10_0() { return cAlphaNUMBERParserRuleCall_1_10_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_11() { return cWSTerminalRuleCall_1_11; }

		//")"
		public Keyword getRightParenthesisKeyword_1_12() { return cRightParenthesisKeyword_1_12; }
	}

	public class ColorFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColorFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cDeriveKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Assignment cOrigAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cOrigColorParserRuleCall_0_4_0 = (RuleCall)cOrigAssignment_0_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_0_5 = (RuleCall)cGroup_0.eContents().get(5);
		private final Assignment cModAssignment_0_6 = (Assignment)cGroup_0.eContents().get(6);
		private final RuleCall cModUnary_operatorParserRuleCall_0_6_0 = (RuleCall)cModAssignment_0_6.eContents().get(0);
		private final RuleCall cPERCENTAGEParserRuleCall_0_7 = (RuleCall)cGroup_0.eContents().get(7);
		private final RuleCall cWSTerminalRuleCall_0_8 = (RuleCall)cGroup_0.eContents().get(8);
		private final Keyword cRightParenthesisKeyword_0_9 = (Keyword)cGroup_0.eContents().get(9);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLadderKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cOrigAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cOrigColorParserRuleCall_1_4_0 = (RuleCall)cOrigAssignment_1_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_5 = (RuleCall)cGroup_1.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Keyword cStopsKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Group cGroup_1_8 = (Group)cGroup_1.eContents().get(8);
		private final RuleCall cWSTerminalRuleCall_1_8_0 = (RuleCall)cGroup_1_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_8_1 = (Keyword)cGroup_1_8.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_8_2 = (RuleCall)cGroup_1_8.eContents().get(2);
		private final Assignment cStopNumbersAssignment_1_8_3 = (Assignment)cGroup_1_8.eContents().get(3);
		private final RuleCall cStopNumbersNUMBERParserRuleCall_1_8_3_0 = (RuleCall)cStopNumbersAssignment_1_8_3.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_1_8_4 = (RuleCall)cGroup_1_8.eContents().get(4);
		private final Assignment cStopColorsAssignment_1_8_5 = (Assignment)cGroup_1_8.eContents().get(5);
		private final RuleCall cStopColorsColorParserRuleCall_1_8_5_0 = (RuleCall)cStopColorsAssignment_1_8_5.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_8_6 = (RuleCall)cGroup_1_8.eContents().get(6);
		private final Keyword cRightParenthesisKeyword_1_8_7 = (Keyword)cGroup_1_8.eContents().get(7);
		
		//ColorFunction:
		//	"derive" WS* "(" WS* orig=Color COMMA mod=unary_operator? PERCENTAGE WS* ")" | "ladder" WS* "(" WS* orig=Color WS* ")"
		//	"stops" (WS* "(" WS* stopNumbers+=NUMBER COMMA stopColors+=Color WS* ")")+;
		public ParserRule getRule() { return rule; }

		//"derive" WS* "(" WS* orig=Color COMMA mod=unary_operator? PERCENTAGE WS* ")" | "ladder" WS* "(" WS* orig=Color WS* ")"
		//"stops" (WS* "(" WS* stopNumbers+=NUMBER COMMA stopColors+=Color WS* ")")+
		public Alternatives getAlternatives() { return cAlternatives; }

		//"derive" WS* "(" WS* orig=Color COMMA mod=unary_operator? PERCENTAGE WS* ")"
		public Group getGroup_0() { return cGroup_0; }

		//"derive"
		public Keyword getDeriveKeyword_0_0() { return cDeriveKeyword_0_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_1() { return cWSTerminalRuleCall_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_3() { return cWSTerminalRuleCall_0_3; }

		//orig=Color
		public Assignment getOrigAssignment_0_4() { return cOrigAssignment_0_4; }

		//Color
		public RuleCall getOrigColorParserRuleCall_0_4_0() { return cOrigColorParserRuleCall_0_4_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_0_5() { return cCOMMATerminalRuleCall_0_5; }

		//mod=unary_operator?
		public Assignment getModAssignment_0_6() { return cModAssignment_0_6; }

		//unary_operator
		public RuleCall getModUnary_operatorParserRuleCall_0_6_0() { return cModUnary_operatorParserRuleCall_0_6_0; }

		//PERCENTAGE
		public RuleCall getPERCENTAGEParserRuleCall_0_7() { return cPERCENTAGEParserRuleCall_0_7; }

		//WS*
		public RuleCall getWSTerminalRuleCall_0_8() { return cWSTerminalRuleCall_0_8; }

		//")"
		public Keyword getRightParenthesisKeyword_0_9() { return cRightParenthesisKeyword_0_9; }

		//"ladder" WS* "(" WS* orig=Color WS* ")" "stops" (WS* "(" WS* stopNumbers+=NUMBER COMMA stopColors+=Color WS* ")")+
		public Group getGroup_1() { return cGroup_1; }

		//"ladder"
		public Keyword getLadderKeyword_1_0() { return cLadderKeyword_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }

		//orig=Color
		public Assignment getOrigAssignment_1_4() { return cOrigAssignment_1_4; }

		//Color
		public RuleCall getOrigColorParserRuleCall_1_4_0() { return cOrigColorParserRuleCall_1_4_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_5() { return cWSTerminalRuleCall_1_5; }

		//")"
		public Keyword getRightParenthesisKeyword_1_6() { return cRightParenthesisKeyword_1_6; }

		//"stops"
		public Keyword getStopsKeyword_1_7() { return cStopsKeyword_1_7; }

		//(WS* "(" WS* stopNumbers+=NUMBER COMMA stopColors+=Color WS* ")")+
		public Group getGroup_1_8() { return cGroup_1_8; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_8_0() { return cWSTerminalRuleCall_1_8_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_8_1() { return cLeftParenthesisKeyword_1_8_1; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_8_2() { return cWSTerminalRuleCall_1_8_2; }

		//stopNumbers+=NUMBER
		public Assignment getStopNumbersAssignment_1_8_3() { return cStopNumbersAssignment_1_8_3; }

		//NUMBER
		public RuleCall getStopNumbersNUMBERParserRuleCall_1_8_3_0() { return cStopNumbersNUMBERParserRuleCall_1_8_3_0; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_1_8_4() { return cCOMMATerminalRuleCall_1_8_4; }

		//stopColors+=Color
		public Assignment getStopColorsAssignment_1_8_5() { return cStopColorsAssignment_1_8_5; }

		//Color
		public RuleCall getStopColorsColorParserRuleCall_1_8_5_0() { return cStopColorsColorParserRuleCall_1_8_5_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1_8_6() { return cWSTerminalRuleCall_1_8_6; }

		//")"
		public Keyword getRightParenthesisKeyword_1_8_7() { return cRightParenthesisKeyword_1_8_7; }
	}

	public class HexColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HexColor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cHexdigitsTerminalRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cIntegerTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//HexColor:
		//	"#" (hexdigits | integer);
		public ParserRule getRule() { return rule; }

		//"#" (hexdigits | integer)
		public Group getGroup() { return cGroup; }

		//"#"
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }

		//hexdigits | integer
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//hexdigits
		public RuleCall getHexdigitsTerminalRuleCall_1_0() { return cHexdigitsTerminalRuleCall_1_0; }

		//integer
		public RuleCall getIntegerTerminalRuleCall_1_1() { return cIntegerTerminalRuleCall_1_1; }
	}

	public class URIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URI");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUrlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSTRINGTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//URI:
		//	"url" WS* "(" WS* STRING WS* ")";
		public ParserRule getRule() { return rule; }

		//"url" WS* "(" WS* STRING WS* ")"
		public Group getGroup() { return cGroup; }

		//"url"
		public Keyword getUrlKeyword_0() { return cUrlKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_4() { return cSTRINGTerminalRuleCall_4; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class URLTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URLType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUrlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cUrlAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUrlSTRINGTerminalRuleCall_4_0 = (RuleCall)cUrlAssignment_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//URLType:
		//	"url" WS* "(" WS* url=STRING WS* ")";
		public ParserRule getRule() { return rule; }

		//"url" WS* "(" WS* url=STRING WS* ")"
		public Group getGroup() { return cGroup; }

		//"url"
		public Keyword getUrlKeyword_0() { return cUrlKeyword_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//WS*
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//url=STRING
		public Assignment getUrlAssignment_4() { return cUrlAssignment_4; }

		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_4_0() { return cUrlSTRINGTerminalRuleCall_4_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class NUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NUMBER");
		private final RuleCall cNumParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NUMBER:
		//	num;
		public ParserRule getRule() { return rule; }

		//num
		public RuleCall getNumParserRuleCall() { return cNumParserRuleCall; }
	}

	public class PERCENTAGEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PERCENTAGE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cPercentSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PERCENTAGE:
		//	num "%";
		public ParserRule getRule() { return rule; }

		//num "%"
		public Group getGroup() { return cGroup; }

		//num
		public RuleCall getNumParserRuleCall_0() { return cNumParserRuleCall_0; }

		//"%"
		public Keyword getPercentSignKeyword_1() { return cPercentSignKeyword_1; }
	}

	public class EMSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EMS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEmKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//EMS:
		//	num "em";
		public ParserRule getRule() { return rule; }

		//num "em"
		public Group getGroup() { return cGroup; }

		//num
		public RuleCall getNumParserRuleCall_0() { return cNumParserRuleCall_0; }

		//"em"
		public Keyword getEmKeyword_1() { return cEmKeyword_1; }
	}

	public class EXSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EXS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cExKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//EXS:
		//	num "ex";
		public ParserRule getRule() { return rule; }

		//num "ex"
		public Group getGroup() { return cGroup; }

		//num
		public RuleCall getNumParserRuleCall_0() { return cNumParserRuleCall_0; }

		//"ex"
		public Keyword getExKeyword_1() { return cExKeyword_1; }
	}

	public class LENGTHElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LENGTH");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cPxKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cCmKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cMmKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		private final Keyword cInKeyword_1_3 = (Keyword)cAlternatives_1.eContents().get(3);
		private final Keyword cPtKeyword_1_4 = (Keyword)cAlternatives_1.eContents().get(4);
		private final Keyword cPcKeyword_1_5 = (Keyword)cAlternatives_1.eContents().get(5);
		
		//LENGTH:
		//	num ("px" | "cm" | "mm" | "in" | "pt" | "pc");
		public ParserRule getRule() { return rule; }

		//num ("px" | "cm" | "mm" | "in" | "pt" | "pc")
		public Group getGroup() { return cGroup; }

		//num
		public RuleCall getNumParserRuleCall_0() { return cNumParserRuleCall_0; }

		//"px" | "cm" | "mm" | "in" | "pt" | "pc"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"px"
		public Keyword getPxKeyword_1_0() { return cPxKeyword_1_0; }

		//"cm"
		public Keyword getCmKeyword_1_1() { return cCmKeyword_1_1; }

		//"mm"
		public Keyword getMmKeyword_1_2() { return cMmKeyword_1_2; }

		//"in"
		public Keyword getInKeyword_1_3() { return cInKeyword_1_3; }

		//"pt"
		public Keyword getPtKeyword_1_4() { return cPtKeyword_1_4; }

		//"pc"
		public Keyword getPcKeyword_1_5() { return cPcKeyword_1_5; }
	}

	public class ANGLEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ANGLE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cDegKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cRadKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cGradKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		
		//ANGLE:
		//	num ("deg" | "rad" | "grad");
		public ParserRule getRule() { return rule; }

		//num ("deg" | "rad" | "grad")
		public Group getGroup() { return cGroup; }

		//num
		public RuleCall getNumParserRuleCall_0() { return cNumParserRuleCall_0; }

		//"deg" | "rad" | "grad"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"deg"
		public Keyword getDegKeyword_1_0() { return cDegKeyword_1_0; }

		//"rad"
		public Keyword getRadKeyword_1_1() { return cRadKeyword_1_1; }

		//"grad"
		public Keyword getGradKeyword_1_2() { return cGradKeyword_1_2; }
	}

	public class TIMEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TIME");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cMsKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cSKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		
		//TIME:
		//	num ("ms" | "s");
		public ParserRule getRule() { return rule; }

		//num ("ms" | "s")
		public Group getGroup() { return cGroup; }

		//num
		public RuleCall getNumParserRuleCall_0() { return cNumParserRuleCall_0; }

		//"ms" | "s"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"ms"
		public Keyword getMsKeyword_1_0() { return cMsKeyword_1_0; }

		//"s"
		public Keyword getSKeyword_1_1() { return cSKeyword_1_1; }
	}

	public class FREQElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FREQ");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNumParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cHzKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cKhzKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		
		//FREQ:
		//	num ("hz" | "khz");
		public ParserRule getRule() { return rule; }

		//num ("hz" | "khz")
		public Group getGroup() { return cGroup; }

		//num
		public RuleCall getNumParserRuleCall_0() { return cNumParserRuleCall_0; }

		//"hz" | "khz"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"hz"
		public Keyword getHzKeyword_1_0() { return cHzKeyword_1_0; }

		//"khz"
		public Keyword getKhzKeyword_1_1() { return cKhzKeyword_1_1; }
	}

	public class FONTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FONT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Assignment cStyleOrWeightStringAssignment_0_0_0 = (Assignment)cAlternatives_0_0.eContents().get(0);
		private final Alternatives cStyleOrWeightStringAlternatives_0_0_0_0 = (Alternatives)cStyleOrWeightStringAssignment_0_0_0.eContents().get(0);
		private final Keyword cStyleOrWeightStringItalicKeyword_0_0_0_0_0 = (Keyword)cStyleOrWeightStringAlternatives_0_0_0_0.eContents().get(0);
		private final Keyword cStyleOrWeightStringObliqueKeyword_0_0_0_0_1 = (Keyword)cStyleOrWeightStringAlternatives_0_0_0_0.eContents().get(1);
		private final Keyword cStyleOrWeightStringNormalKeyword_0_0_0_0_2 = (Keyword)cStyleOrWeightStringAlternatives_0_0_0_0.eContents().get(2);
		private final Keyword cStyleOrWeightStringBoldKeyword_0_0_0_0_3 = (Keyword)cStyleOrWeightStringAlternatives_0_0_0_0.eContents().get(3);
		private final Keyword cStyleOrWeightStringBolderKeyword_0_0_0_0_4 = (Keyword)cStyleOrWeightStringAlternatives_0_0_0_0.eContents().get(4);
		private final Keyword cStyleOrWeightStringLighterKeyword_0_0_0_0_5 = (Keyword)cStyleOrWeightStringAlternatives_0_0_0_0.eContents().get(5);
		private final Assignment cWeightAssignment_0_0_1 = (Assignment)cAlternatives_0_0.eContents().get(1);
		private final RuleCall cWeightNumParserRuleCall_0_0_1_0 = (RuleCall)cWeightAssignment_0_0_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cSizeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSizeSIZEParserRuleCall_1_0 = (RuleCall)cSizeAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cFamilyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFamilyFONTFAMILYParserRuleCall_3_0 = (RuleCall)cFamilyAssignment_3.eContents().get(0);
		
		//FONT:
		//	((styleOrWeightString=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter") | weight=num) WS+)? size=SIZE
		//	WS* family=FONTFAMILY;
		public ParserRule getRule() { return rule; }

		//((styleOrWeightString=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter") | weight=num) WS+)? size=SIZE
		//WS* family=FONTFAMILY
		public Group getGroup() { return cGroup; }

		//((styleOrWeightString=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter") | weight=num) WS+)?
		public Group getGroup_0() { return cGroup_0; }

		//styleOrWeightString=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter") | weight=num
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//styleOrWeightString=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter")
		public Assignment getStyleOrWeightStringAssignment_0_0_0() { return cStyleOrWeightStringAssignment_0_0_0; }

		//"italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter"
		public Alternatives getStyleOrWeightStringAlternatives_0_0_0_0() { return cStyleOrWeightStringAlternatives_0_0_0_0; }

		//"italic"
		public Keyword getStyleOrWeightStringItalicKeyword_0_0_0_0_0() { return cStyleOrWeightStringItalicKeyword_0_0_0_0_0; }

		//"oblique"
		public Keyword getStyleOrWeightStringObliqueKeyword_0_0_0_0_1() { return cStyleOrWeightStringObliqueKeyword_0_0_0_0_1; }

		//"normal"
		public Keyword getStyleOrWeightStringNormalKeyword_0_0_0_0_2() { return cStyleOrWeightStringNormalKeyword_0_0_0_0_2; }

		//"bold"
		public Keyword getStyleOrWeightStringBoldKeyword_0_0_0_0_3() { return cStyleOrWeightStringBoldKeyword_0_0_0_0_3; }

		//"bolder"
		public Keyword getStyleOrWeightStringBolderKeyword_0_0_0_0_4() { return cStyleOrWeightStringBolderKeyword_0_0_0_0_4; }

		//"lighter"
		public Keyword getStyleOrWeightStringLighterKeyword_0_0_0_0_5() { return cStyleOrWeightStringLighterKeyword_0_0_0_0_5; }

		//weight=num
		public Assignment getWeightAssignment_0_0_1() { return cWeightAssignment_0_0_1; }

		//num
		public RuleCall getWeightNumParserRuleCall_0_0_1_0() { return cWeightNumParserRuleCall_0_0_1_0; }

		//WS+
		public RuleCall getWSTerminalRuleCall_0_1() { return cWSTerminalRuleCall_0_1; }

		//size=SIZE
		public Assignment getSizeAssignment_1() { return cSizeAssignment_1; }

		//SIZE
		public RuleCall getSizeSIZEParserRuleCall_1_0() { return cSizeSIZEParserRuleCall_1_0; }

		//WS*
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//family=FONTFAMILY
		public Assignment getFamilyAssignment_3() { return cFamilyAssignment_3; }

		//FONTFAMILY
		public RuleCall getFamilyFONTFAMILYParserRuleCall_3_0() { return cFamilyFONTFAMILYParserRuleCall_3_0; }
	}

	public class FONTFAMILYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FONTFAMILY");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//FONTFAMILY:
		//	STRING;
		public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class FONTWEIGHTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FONTWEIGHT");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueStringAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Alternatives cValueStringAlternatives_0_0 = (Alternatives)cValueStringAssignment_0.eContents().get(0);
		private final Keyword cValueStringNormalKeyword_0_0_0 = (Keyword)cValueStringAlternatives_0_0.eContents().get(0);
		private final Keyword cValueStringBoldKeyword_0_0_1 = (Keyword)cValueStringAlternatives_0_0.eContents().get(1);
		private final Keyword cValueStringBolderKeyword_0_0_2 = (Keyword)cValueStringAlternatives_0_0.eContents().get(2);
		private final Keyword cValueStringLighterKeyword_0_0_3 = (Keyword)cValueStringAlternatives_0_0.eContents().get(3);
		private final Assignment cValueIntAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cValueIntIntegerTerminalRuleCall_1_0 = (RuleCall)cValueIntAssignment_1.eContents().get(0);
		
		//FONTWEIGHT:
		//	valueString=("normal" | "bold" | "bolder" | "lighter") | valueInt=integer;
		public ParserRule getRule() { return rule; }

		//valueString=("normal" | "bold" | "bolder" | "lighter") | valueInt=integer
		public Alternatives getAlternatives() { return cAlternatives; }

		//valueString=("normal" | "bold" | "bolder" | "lighter")
		public Assignment getValueStringAssignment_0() { return cValueStringAssignment_0; }

		//"normal" | "bold" | "bolder" | "lighter"
		public Alternatives getValueStringAlternatives_0_0() { return cValueStringAlternatives_0_0; }

		//"normal"
		public Keyword getValueStringNormalKeyword_0_0_0() { return cValueStringNormalKeyword_0_0_0; }

		//"bold"
		public Keyword getValueStringBoldKeyword_0_0_1() { return cValueStringBoldKeyword_0_0_1; }

		//"bolder"
		public Keyword getValueStringBolderKeyword_0_0_2() { return cValueStringBolderKeyword_0_0_2; }

		//"lighter"
		public Keyword getValueStringLighterKeyword_0_0_3() { return cValueStringLighterKeyword_0_0_3; }

		//valueInt=integer
		public Assignment getValueIntAssignment_1() { return cValueIntAssignment_1; }

		//integer
		public RuleCall getValueIntIntegerTerminalRuleCall_1_0() { return cValueIntIntegerTerminalRuleCall_1_0; }
	}

	public class FONTSTYLEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FONTSTYLE");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValueAlternatives_0 = (Alternatives)cValueAssignment.eContents().get(0);
		private final Keyword cValueNormalKeyword_0_0 = (Keyword)cValueAlternatives_0.eContents().get(0);
		private final Keyword cValueItalicKeyword_0_1 = (Keyword)cValueAlternatives_0.eContents().get(1);
		private final Keyword cValueObliqueKeyword_0_2 = (Keyword)cValueAlternatives_0.eContents().get(2);
		
		//FONTSTYLE:
		//	value=("normal" | "italic" | "oblique");
		public ParserRule getRule() { return rule; }

		//value=("normal" | "italic" | "oblique")
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"normal" | "italic" | "oblique"
		public Alternatives getValueAlternatives_0() { return cValueAlternatives_0; }

		//"normal"
		public Keyword getValueNormalKeyword_0_0() { return cValueNormalKeyword_0_0; }

		//"italic"
		public Keyword getValueItalicKeyword_0_1() { return cValueItalicKeyword_0_1; }

		//"oblique"
		public Keyword getValueObliqueKeyword_0_2() { return cValueObliqueKeyword_0_2; }
	}

	public class SIZEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SIZE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnary_operatorParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cNUMBERParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cPERCENTAGEParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final RuleCall cEMSParserRuleCall_1_2 = (RuleCall)cAlternatives_1.eContents().get(2);
		private final RuleCall cEXSParserRuleCall_1_3 = (RuleCall)cAlternatives_1.eContents().get(3);
		private final RuleCall cLENGTHParserRuleCall_1_4 = (RuleCall)cAlternatives_1.eContents().get(4);
		
		//SIZE:
		//	unary_operator? (NUMBER | PERCENTAGE | EMS | EXS | LENGTH);
		public ParserRule getRule() { return rule; }

		//unary_operator? (NUMBER | PERCENTAGE | EMS | EXS | LENGTH)
		public Group getGroup() { return cGroup; }

		//unary_operator?
		public RuleCall getUnary_operatorParserRuleCall_0() { return cUnary_operatorParserRuleCall_0; }

		//NUMBER | PERCENTAGE | EMS | EXS | LENGTH
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_1_0() { return cNUMBERParserRuleCall_1_0; }

		//PERCENTAGE
		public RuleCall getPERCENTAGEParserRuleCall_1_1() { return cPERCENTAGEParserRuleCall_1_1; }

		//EMS
		public RuleCall getEMSParserRuleCall_1_2() { return cEMSParserRuleCall_1_2; }

		//EXS
		public RuleCall getEXSParserRuleCall_1_3() { return cEXSParserRuleCall_1_3; }

		//LENGTH
		public RuleCall getLENGTHParserRuleCall_1_4() { return cLENGTHParserRuleCall_1_4; }
	}

	public class SizeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SizeType");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSIZEParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//SizeType:
		//	value=SIZE;
		public ParserRule getRule() { return rule; }

		//value=SIZE
		public Assignment getValueAssignment() { return cValueAssignment; }

		//SIZE
		public RuleCall getValueSIZEParserRuleCall_0() { return cValueSIZEParserRuleCall_0; }
	}

	public class BLURElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BLUR");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cGaussianKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cOnePassBoxKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cThreePassBoxKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cTwoPassBoxKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//BLUR:
		//	"gaussian" | "one-pass-box" | "three-pass-box" | "two-pass-box";
		public ParserRule getRule() { return rule; }

		//"gaussian" | "one-pass-box" | "three-pass-box" | "two-pass-box"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"gaussian"
		public Keyword getGaussianKeyword_0() { return cGaussianKeyword_0; }

		//"one-pass-box"
		public Keyword getOnePassBoxKeyword_1() { return cOnePassBoxKeyword_1; }

		//"three-pass-box"
		public Keyword getThreePassBoxKeyword_2() { return cThreePassBoxKeyword_2; }

		//"two-pass-box"
		public Keyword getTwoPassBoxKeyword_3() { return cTwoPassBoxKeyword_3; }
	}
	
	
	public class HPositionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "HPosition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLeftEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLeftLeftKeyword_0_0 = (Keyword)cLeftEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCenterEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCenterCenterKeyword_1_0 = (Keyword)cCenterEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRightEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRightRightKeyword_2_0 = (Keyword)cRightEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLeadingEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLeadingLeadingKeyword_3_0 = (Keyword)cLeadingEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTrailingEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTrailingTrailingKeyword_4_0 = (Keyword)cTrailingEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum HPosition:
		//	left | center | right | leading | trailing;
		public EnumRule getRule() { return rule; }

		//left | center | right | leading | trailing
		public Alternatives getAlternatives() { return cAlternatives; }

		//left
		public EnumLiteralDeclaration getLeftEnumLiteralDeclaration_0() { return cLeftEnumLiteralDeclaration_0; }

		//"left"
		public Keyword getLeftLeftKeyword_0_0() { return cLeftLeftKeyword_0_0; }

		//center
		public EnumLiteralDeclaration getCenterEnumLiteralDeclaration_1() { return cCenterEnumLiteralDeclaration_1; }

		//"center"
		public Keyword getCenterCenterKeyword_1_0() { return cCenterCenterKeyword_1_0; }

		//right
		public EnumLiteralDeclaration getRightEnumLiteralDeclaration_2() { return cRightEnumLiteralDeclaration_2; }

		//"right"
		public Keyword getRightRightKeyword_2_0() { return cRightRightKeyword_2_0; }

		//leading
		public EnumLiteralDeclaration getLeadingEnumLiteralDeclaration_3() { return cLeadingEnumLiteralDeclaration_3; }

		//"leading"
		public Keyword getLeadingLeadingKeyword_3_0() { return cLeadingLeadingKeyword_3_0; }

		//trailing
		public EnumLiteralDeclaration getTrailingEnumLiteralDeclaration_4() { return cTrailingEnumLiteralDeclaration_4; }

		//"trailing"
		public Keyword getTrailingTrailingKeyword_4_0() { return cTrailingTrailingKeyword_4_0; }
	}
	
	private StylesheetElements pStylesheet;
	private MediaElements pMedia;
	private Media_listElements pMedia_list;
	private MediumElements pMedium;
	private RulesetElements pRuleset;
	private SelectorElements pSelector;
	private Simple_selectorElements pSimple_selector;
	private Element_nameElements pElement_name;
	private Css_classElements pCss_class;
	private Css_idElements pCss_id;
	private Css_declarationElements pCss_declaration;
	private Css_generic_declarationElements pCss_generic_declaration;
	private Css_propertyElements pCss_property;
	private Css_pseudoElements pCss_pseudo;
	private CombinatorElements pCombinator;
	private OperatorElements pOperator;
	private Unary_operatorElements pUnary_operator;
	private ExprElements pExpr;
	private TermElements pTerm;
	private NumElements pNum;
	private Css_fx_declarationElements pCss_fx_declaration;
	private Fx_font_propertyElements pFx_font_property;
	private Fx_font_family_propertyElements pFx_font_family_property;
	private Fx_font_size_propertyElements pFx_font_size_property;
	private Fx_font_style_propertyElements pFx_font_style_property;
	private Fx_font_weight_propertyElements pFx_font_weight_property;
	private Fx_cursor_propertyElements pFx_cursor_property;
	private Fx_effect_propertyElements pFx_effect_property;
	private Fx_boolean_propertyElements pFx_boolean_property;
	private Fx_size_propertyElements pFx_size_property;
	private Fx_number_propertyElements pFx_number_property;
	private Fx_integer_propertyElements pFx_integer_property;
	private Fx_paint_propertyElements pFx_paint_property;
	private Fx_blend_propertyElements pFx_blend_property;
	private Fx_url_propertyElements pFx_url_property;
	private Fx_paint_propertiesElements pFx_paint_properties;
	private Fx_multisize_propertiesElements pFx_multisize_properties;
	private Fx_hposition_propertyElements pFx_hposition_property;
	private Fx_vposition_propertyElements pFx_vposition_property;
	private Fx_side_propertyElements pFx_side_property;
	private Fx_bar_policy_propertyElements pFx_bar_policy_property;
	private Fx_url_propertiesElements pFx_url_properties;
	private Fx_repeat_propertiesElements pFx_repeat_properties;
	private Fx_multisize_propertyElements pFx_multisize_property;
	private Fx_size_propertiesElements pFx_size_properties;
	private Fx_stroke_line_cap_propertyElements pFx_stroke_line_cap_property;
	private Fx_stroke_line_join_propertyElements pFx_stroke_line_join_property;
	private Fx_alignment_propertyElements pFx_alignment_property;
	private Fx_text_origin_propertyElements pFx_text_origin_property;
	private Fx_position_propertyElements pFx_position_property;
	private Fx_background_image_size_propertyElements pFx_background_image_size_property;
	private Fx_border_style_propertyElements pFx_border_style_property;
	private Fx_border_image_slice_propertyElements pFx_border_image_slice_property;
	private Fx_text_overrun_propertyElements pFx_text_overrun_property;
	private Fx_insets_propertyElements pFx_insets_property;
	private Fx_number_propertiesElements pFx_number_properties;
	private Fx_multi_paint_propertiesElements pFx_multi_paint_properties;
	private Fx_string_propertyElements pFx_string_property;
	private EffectElements pEffect;
	private EffectDropShadowElements pEffectDropShadow;
	private EffectInnerShadowElements pEffectInnerShadow;
	private MultiPaintElements pMultiPaint;
	private PaintElements pPaint;
	private LinearGradientElements pLinearGradient;
	private RadialGradientElements pRadialGradient;
	private StopValueElements pStopValue;
	private PointValueElements pPointValue;
	private HPositionElements unknownRuleHPosition;
	private VPositionElements pVPosition;
	private RepeatStyleElements pRepeatStyle;
	private Dim4SizeElements pDim4Size;
	private BgPositionElements pBgPosition;
	private Fx_color_propertyElements pFx_color_property;
	private BgSizeElements pBgSize;
	private BorderStyleElements pBorderStyle;
	private SizeFillElements pSizeFill;
	private ColorElements pColor;
	private COLOR_PROPERTIESElements pCOLOR_PROPERTIES;
	private LookedUpColorElements pLookedUpColor;
	private NamedColorElements pNamedColor;
	private RGBColorElements pRGBColor;
	private HSBColorElements pHSBColor;
	private ColorFunctionElements pColorFunction;
	private HexColorElements pHexColor;
	private URIElements pURI;
	private URLTypeElements pURLType;
	private NUMBERElements pNUMBER;
	private PERCENTAGEElements pPERCENTAGE;
	private EMSElements pEMS;
	private EXSElements pEXS;
	private LENGTHElements pLENGTH;
	private ANGLEElements pANGLE;
	private TIMEElements pTIME;
	private FREQElements pFREQ;
	private FONTElements pFONT;
	private FONTFAMILYElements pFONTFAMILY;
	private FONTWEIGHTElements pFONTWEIGHT;
	private FONTSTYLEElements pFONTSTYLE;
	private SIZEElements pSIZE;
	private SizeTypeElements pSizeType;
	private BLURElements pBLUR;
	private TerminalRule tInteger;
	private TerminalRule tReal;
	private TerminalRule tHexdigits;
	private TerminalRule tIDENT;
	private TerminalRule tCOMMA;
	private TerminalRule tML_COMMENT;
	private TerminalRule tWS;
	private TerminalRule tSTRING;
	
	private final GrammarProvider grammarProvider;

	@Inject
	public CssDslGrammarAccess(GrammarProvider grammarProvider) {
		this.grammarProvider = grammarProvider;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	
	//stylesheet:
	//	(ruleset+=ruleset | media+=media)*;
	public StylesheetElements getStylesheetAccess() {
		return (pStylesheet != null) ? pStylesheet : (pStylesheet = new StylesheetElements());
	}
	
	public ParserRule getStylesheetRule() {
		return getStylesheetAccess().getRule();
	}

	//media:
	//	"media" WS* medialist=media_list "{" WS* rulesets+=ruleset* "}" WS*;
	public MediaElements getMediaAccess() {
		return (pMedia != null) ? pMedia : (pMedia = new MediaElements());
	}
	
	public ParserRule getMediaRule() {
		return getMediaAccess().getRule();
	}

	//media_list:
	//	medium (COMMA WS* medium)*;
	public Media_listElements getMedia_listAccess() {
		return (pMedia_list != null) ? pMedia_list : (pMedia_list = new Media_listElements());
	}
	
	public ParserRule getMedia_listRule() {
		return getMedia_listAccess().getRule();
	}

	//medium:
	//	IDENT WS*;
	public MediumElements getMediumAccess() {
		return (pMedium != null) ? pMedium : (pMedium = new MediumElements());
	}
	
	public ParserRule getMediumRule() {
		return getMediumAccess().getRule();
	}

	//ruleset:
	//	selectors+=selector (COMMA selectors+=selector)* "{" WS* (declarations+=css_declaration ";" WS*)* "}" WS*;
	public RulesetElements getRulesetAccess() {
		return (pRuleset != null) ? pRuleset : (pRuleset = new RulesetElements());
	}
	
	public ParserRule getRulesetRule() {
		return getRulesetAccess().getRule();
	}

	//selector:
	//	simpleselectors+=simple_selector (combinator=combinator selector=selector | WS+ (combinator=combinator?
	//	selector=selector)?)?;
	public SelectorElements getSelectorAccess() {
		return (pSelector != null) ? pSelector : (pSelector = new SelectorElements());
	}
	
	public ParserRule getSelectorRule() {
		return getSelectorAccess().getRule();
	}

	//simple_selector:
	//	element=element_name id=css_id? class=css_class? pseudoclasses+=css_pseudo* | id=css_id class=css_class?
	//	pseudoclasses+=css_pseudo* | class=css_class pseudoclasses+=css_pseudo* | pseudoclasses+=css_pseudo+;
	public Simple_selectorElements getSimple_selectorAccess() {
		return (pSimple_selector != null) ? pSimple_selector : (pSimple_selector = new Simple_selectorElements());
	}
	
	public ParserRule getSimple_selectorRule() {
		return getSimple_selectorAccess().getRule();
	}

	//element_name:
	//	IDENT;
	public Element_nameElements getElement_nameAccess() {
		return (pElement_name != null) ? pElement_name : (pElement_name = new Element_nameElements());
	}
	
	public ParserRule getElement_nameRule() {
		return getElement_nameAccess().getRule();
	}

	//css_class:
	//	"." IDENT;
	public Css_classElements getCss_classAccess() {
		return (pCss_class != null) ? pCss_class : (pCss_class = new Css_classElements());
	}
	
	public ParserRule getCss_classRule() {
		return getCss_classAccess().getRule();
	}

	//css_id:
	//	"#" (hexdigits | IDENT);
	public Css_idElements getCss_idAccess() {
		return (pCss_id != null) ? pCss_id : (pCss_id = new Css_idElements());
	}
	
	public ParserRule getCss_idRule() {
		return getCss_idAccess().getRule();
	}

	//css_declaration:
	//	css_generic_declaration | css_fx_declaration;
	public Css_declarationElements getCss_declarationAccess() {
		return (pCss_declaration != null) ? pCss_declaration : (pCss_declaration = new Css_declarationElements());
	}
	
	public ParserRule getCss_declarationRule() {
		return getCss_declarationAccess().getRule();
	}

	//css_generic_declaration:
	//	property=css_property ":" WS* expression=expr;
	public Css_generic_declarationElements getCss_generic_declarationAccess() {
		return (pCss_generic_declaration != null) ? pCss_generic_declaration : (pCss_generic_declaration = new Css_generic_declarationElements());
	}
	
	public ParserRule getCss_generic_declarationRule() {
		return getCss_generic_declarationAccess().getRule();
	}

	//css_property:
	//	IDENT WS*;
	public Css_propertyElements getCss_propertyAccess() {
		return (pCss_property != null) ? pCss_property : (pCss_property = new Css_propertyElements());
	}
	
	public ParserRule getCss_propertyRule() {
		return getCss_propertyAccess().getRule();
	}

	//css_pseudo:
	//	":" IDENT;
	public Css_pseudoElements getCss_pseudoAccess() {
		return (pCss_pseudo != null) ? pCss_pseudo : (pCss_pseudo = new Css_pseudoElements());
	}
	
	public ParserRule getCss_pseudoRule() {
		return getCss_pseudoAccess().getRule();
	}

	//combinator:
	//	"+" | ">";
	public CombinatorElements getCombinatorAccess() {
		return (pCombinator != null) ? pCombinator : (pCombinator = new CombinatorElements());
	}
	
	public ParserRule getCombinatorRule() {
		return getCombinatorAccess().getRule();
	}

	//operator:
	//	"/" WS* | COMMA WS*;
	public OperatorElements getOperatorAccess() {
		return (pOperator != null) ? pOperator : (pOperator = new OperatorElements());
	}
	
	public ParserRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}

	//unary_operator:
	//	"-" | "+";
	public Unary_operatorElements getUnary_operatorAccess() {
		return (pUnary_operator != null) ? pUnary_operator : (pUnary_operator = new Unary_operatorElements());
	}
	
	public ParserRule getUnary_operatorRule() {
		return getUnary_operatorAccess().getRule();
	}

	//expr:
	//	term (operator? term)*;
	public ExprElements getExprAccess() {
		return (pExpr != null) ? pExpr : (pExpr = new ExprElements());
	}
	
	public ParserRule getExprRule() {
		return getExprAccess().getRule();
	}

	//term:
	//	unary_operator? (NUMBER WS* | PERCENTAGE WS* | LENGTH WS* | EMS WS* | EXS WS* | ANGLE WS* | TIME WS* | FREQ WS*) //| function
	//	| STRING WS* | IDENT WS* | URI WS* | "#" hexdigits;
	public TermElements getTermAccess() {
		return (pTerm != null) ? pTerm : (pTerm = new TermElements());
	}
	
	public ParserRule getTermRule() {
		return getTermAccess().getRule();
	}

	//num:
	//	integer | real;
	public NumElements getNumAccess() {
		return (pNum != null) ? pNum : (pNum = new NumElements());
	}
	
	public ParserRule getNumRule() {
		return getNumAccess().getRule();
	}

	//css_fx_declaration:
	//	fx_font_property | fx_font_family_property | fx_font_size_property | fx_font_style_property | fx_font_weight_property
	//	| fx_cursor_property | fx_effect_property | fx_boolean_property | fx_size_property | fx_number_property |
	//	fx_integer_property | fx_paint_property | fx_blend_property | fx_url_property | fx_paint_properties |
	//	fx_multisize_properties | fx_hposition_property | fx_vposition_property | fx_side_property | fx_bar_policy_property |
	//	fx_url_properties | fx_repeat_properties | fx_multisize_property | fx_size_properties | fx_stroke_line_cap_property |
	//	fx_stroke_line_join_property | fx_alignment_property | fx_text_origin_property | fx_position_property |
	//	fx_background_image_size_property | fx_border_style_property | fx_border_image_slice_property |
	//	fx_text_overrun_property | fx_insets_property | fx_number_properties | fx_multi_paint_properties | fx_color_property |
	//	fx_string_property;
	public Css_fx_declarationElements getCss_fx_declarationAccess() {
		return (pCss_fx_declaration != null) ? pCss_fx_declaration : (pCss_fx_declaration = new Css_fx_declarationElements());
	}
	
	public ParserRule getCss_fx_declarationRule() {
		return getCss_fx_declarationAccess().getRule();
	}

	//fx_font_property:
	//	property=("-fx-font" | "-fx-title-font" | "-fx-pie-label-font" | "-fx-pie-value-label-font" | "-fx-label-font" |
	//	"-fx-tick-label-font") WS* ":" WS* value=FONT;
	public Fx_font_propertyElements getFx_font_propertyAccess() {
		return (pFx_font_property != null) ? pFx_font_property : (pFx_font_property = new Fx_font_propertyElements());
	}
	
	public ParserRule getFx_font_propertyRule() {
		return getFx_font_propertyAccess().getRule();
	}

	//fx_font_family_property:
	//	property=("-fx-font-family" | "-fx-title-font-family" | "-fx-pie-label-font-family" |
	//	"-fx-pie-value-label-font-family" | "-fx-label-font-family" | "-fx-tick-label-font-family") WS* ":" WS*
	//	value=FONTFAMILY;
	public Fx_font_family_propertyElements getFx_font_family_propertyAccess() {
		return (pFx_font_family_property != null) ? pFx_font_family_property : (pFx_font_family_property = new Fx_font_family_propertyElements());
	}
	
	public ParserRule getFx_font_family_propertyRule() {
		return getFx_font_family_propertyAccess().getRule();
	}

	//fx_font_size_property:
	//	property=("-fx-font-size" | "-fx-title-font-size" | "-fx-pie-label-font-size" | "-fx-pie-value-label-font-size" |
	//	"-fx-label-font-size" | "-fx-tick-label-font-size") WS* ":" WS* value=SIZE;
	public Fx_font_size_propertyElements getFx_font_size_propertyAccess() {
		return (pFx_font_size_property != null) ? pFx_font_size_property : (pFx_font_size_property = new Fx_font_size_propertyElements());
	}
	
	public ParserRule getFx_font_size_propertyRule() {
		return getFx_font_size_propertyAccess().getRule();
	}

	//fx_font_style_property:
	//	property=("-fx-font-style" | "-fx-title-font-style" | "-fx-pie-label-font-style" | "-fx-pie-value-label-font-style" |
	//	"-fx-label-font-style" | "-fx-tick-label-font-style") WS* ":" WS* value=FONTSTYLE;
	public Fx_font_style_propertyElements getFx_font_style_propertyAccess() {
		return (pFx_font_style_property != null) ? pFx_font_style_property : (pFx_font_style_property = new Fx_font_style_propertyElements());
	}
	
	public ParserRule getFx_font_style_propertyRule() {
		return getFx_font_style_propertyAccess().getRule();
	}

	//fx_font_weight_property:
	//	property=("-fx-font-weight" | "-fx-title-font-weight" | "-fx-pie-label-font-weight" |
	//	"-fx-pie-value-label-font-weight" | "-fx-label-font-weight" | "-fx-tick-label-font-weight") WS* ":" WS*
	//	value=FONTWEIGHT;
	public Fx_font_weight_propertyElements getFx_font_weight_propertyAccess() {
		return (pFx_font_weight_property != null) ? pFx_font_weight_property : (pFx_font_weight_property = new Fx_font_weight_propertyElements());
	}
	
	public ParserRule getFx_font_weight_propertyRule() {
		return getFx_font_weight_propertyAccess().getRule();
	}

	//fx_cursor_property:
	//	property="-fx-cursor" WS* ":" WS* value=("crosshair" | "default" | "hand" | "move" | "e-resize" | "h-resize" |
	//	"ne-resize" | "nw-resize" | "n-resize" | "se-resize" | "sw-resize" | "s-resize" | "w-resize" | "v-resize" | "text" |
	//	"wait");
	public Fx_cursor_propertyElements getFx_cursor_propertyAccess() {
		return (pFx_cursor_property != null) ? pFx_cursor_property : (pFx_cursor_property = new Fx_cursor_propertyElements());
	}
	
	public ParserRule getFx_cursor_propertyRule() {
		return getFx_cursor_propertyAccess().getRule();
	}

	//fx_effect_property:
	//	"-fx-effect" WS* ":" WS* value=Effect;
	public Fx_effect_propertyElements getFx_effect_propertyAccess() {
		return (pFx_effect_property != null) ? pFx_effect_property : (pFx_effect_property = new Fx_effect_propertyElements());
	}
	
	public ParserRule getFx_effect_propertyRule() {
		return getFx_effect_propertyAccess().getRule();
	}

	//fx_boolean_property:
	//	property=("-fx-focus-traversable" | "-fx-pannable" | "-fx-hgap" | "-fx-vpos" | "-fx-snap-to-pixel" | "-fx-vertical" |
	//	"-fx-smooth" | "-fx-strikethrough" | "-fx-underline" | "-fx-scale-shape" | "-fx-vertical-zero-line-visible" |
	//	"-fx-vertical-grid-line-visible" | "-fx-horizontal-zero-line-visible" | "-fx-horizontal-grid-line-visible" |
	//	"-fx-pie-value-visible" | "-fx-pie-to-label-line-curved" | "-fx-pie-label-visible" | "-fx-clockwise" |
	//	"-fx-show-symbols" | "-fx-legend-visible" | "-fx-scale-bubble-radius-using-axis" | "-fx-select-on-focus" |
	//	"-fx-editable" | "-fx-snap-to-ticks" | "-fx-show-tick-marks" | "-fx-show-tick-labels" | "-fx-fit-to-width" |
	//	"-fx-minor-tick-visible" | "-fx-gap-start-and-end" | "-fx-tick-mark-visible" | "-fx-tick-labels-visible" |
	//	"-fx-fit-to-height" | "-fx-click-to-position" | "-fx-text-wrap" | "-fx-position-shape") WS* ":" WS* value=("true" |
	//	"false");
	public Fx_boolean_propertyElements getFx_boolean_propertyAccess() {
		return (pFx_boolean_property != null) ? pFx_boolean_property : (pFx_boolean_property = new Fx_boolean_propertyElements());
	}
	
	public ParserRule getFx_boolean_propertyRule() {
		return getFx_boolean_propertyAccess().getRule();
	}

	//fx_size_property:
	//	property=("-fx-spacing" | "-fx-arc-height" | "-fx-arc-width" | "-fx-minor-tick-length" | "-fx-stroke-width" |
	//	"-fx-start-margin" | "-fx-end-margin" | "-fx-tick-mark-stroke-width" | "-fx-tick-mark-length" |
	//	"-fx-tick-label-tick-gap" | "-fx-axis-stroke-width" | "-fx-label-tick-gap" | "-fx-vertical-grid-line-stroke-width" |
	//	"-fx-plot-background-stroke-width" | "-fx-horizontal-grid-line-stroke-width" | "-fx-pie-thickness" |
	//	"-fx-pie-stroke-width" | "-fx-title-gap" | "-fx-legend-gap" | "-fx-hover-stroke-width" |
	//	"-fx-chart-background-stroke-width" | "-fx-offset-y" | "-fx-offset-x" | "-fx-category-gap" | "-fx-bar-gap" |
	//	"-fx-graphic-text-gap" | "-fx-tab-spacing") WS* ":" WS* value=SIZE;
	public Fx_size_propertyElements getFx_size_propertyAccess() {
		return (pFx_size_property != null) ? pFx_size_property : (pFx_size_property = new Fx_size_propertyElements());
	}
	
	public ParserRule getFx_size_propertyRule() {
		return getFx_size_propertyAccess().getRule();
	}

	//fx_number_property:
	//	property=("-fx-rotate" | "-fx-scale-x" | "-fx-scale-y" | "-fx-scale-z" | "-fx-translate-x" | "-fx-translate-y" |
	//	"-fx-translate-z" | "-fx-vgap" | "-fx-tile-height" | "-fx-tile-width" | "-fx-stroke-dash-offset" |
	//	"-fx-stroke-miter-limit" | "-fx-block-increment" | "-fx-unit-increment" | "-fx-major-tick-unit" | "-fx-data-opacity" |
	//	"-fx-radius-scale" | "-fx-pie-to-label-line-one-length" | "-fx-pie-to-label-line-stroke-width" |
	//	"-fx-pie-to-label-line-two-length" | "-fx-start-angle" | "-fx-tick-unit" | "-fx-indent") WS* ":" WS* value=NUMBER;
	public Fx_number_propertyElements getFx_number_propertyAccess() {
		return (pFx_number_property != null) ? pFx_number_property : (pFx_number_property = new Fx_number_propertyElements());
	}
	
	public ParserRule getFx_number_propertyRule() {
		return getFx_number_propertyAccess().getRule();
	}

	//fx_integer_property:
	//	property=("-fx-columns" | "-fx-rows" | "-fx-lines" | "-fx-minor-tick-count") WS* ":" WS* value=integer;
	public Fx_integer_propertyElements getFx_integer_propertyAccess() {
		return (pFx_integer_property != null) ? pFx_integer_property : (pFx_integer_property = new Fx_integer_propertyElements());
	}
	
	public ParserRule getFx_integer_propertyRule() {
		return getFx_integer_propertyAccess().getRule();
	}

	//fx_paint_property:
	//	property=("-fx-fill" | "-fx-stroke" | "-fx-text-fill" | "-fx-bar-fill" | "-fx-bar-stroke" | "-fx-bottom-shelf-fill" |
	//	"-fx-bottom-shelf-stroke" | "-fx-side-shelf-fill" | "-fx-side-shelf-stroke" | "-fx-zero-shelf-fill" |
	//	"-fx-zero-shelf-stroke" | "-fx-chart-background-fill" | "-fx-chart-background-stroke" | "-fx-hover-stroke" |
	//	"-fx-title-fill" | "-fx-pie-label-fill" | "-fx-pie-stroke" | "-fx-pie-to-label-line-stroke" |
	//	"-fx-pie-value-label-fill" | "-fx-horizontal-alternate-row-fill" | "-fx-plot-background-fill" |
	//	"-fx-horizontal-grid-line-stroke" | "-fx-plot-background-stroke" | "-fx-vertical-alternate-row-fill" |
	//	"-fx-vertical-grid-line-stroke" | "-fx-axis-stroke" | "-fx-tick-label-fill" | "-fx-label-fill" |
	//	"-fx-tick-mark-stroke" | "-fx-hover-fill") WS* ":" WS* value=Paint;
	public Fx_paint_propertyElements getFx_paint_propertyAccess() {
		return (pFx_paint_property != null) ? pFx_paint_property : (pFx_paint_property = new Fx_paint_propertyElements());
	}
	
	public ParserRule getFx_paint_propertyRule() {
		return getFx_paint_propertyAccess().getRule();
	}

	//fx_blend_property:
	//	property="-fx-blend-mode" WS* ":" WS* value=("add" | "blue" | "color-burn" | "color-dodge" | "darken" | "difference" |
	//	"exclusion" | "green" | "hard-light" | "lighten" | "multiply" | "overlay" | "red" | "screen" | "soft-light" |
	//	"src-atop" | "src-in" | "src-out" | "src-over");
	public Fx_blend_propertyElements getFx_blend_propertyAccess() {
		return (pFx_blend_property != null) ? pFx_blend_property : (pFx_blend_property = new Fx_blend_propertyElements());
	}
	
	public ParserRule getFx_blend_propertyRule() {
		return getFx_blend_propertyAccess().getRule();
	}

	//fx_url_property:
	//	property=("-fx-image" | "-fx-graphic" | "-fx-border-image-source") WS* ":" WS* value=URLType;
	public Fx_url_propertyElements getFx_url_propertyAccess() {
		return (pFx_url_property != null) ? pFx_url_property : (pFx_url_property = new Fx_url_propertyElements());
	}
	
	public ParserRule getFx_url_propertyRule() {
		return getFx_url_propertyAccess().getRule();
	}

	//fx_paint_properties:
	//	property="-fx-background-color" WS* ":" WS* (values+=Paint (COMMA values+=Paint WS*)* | "null");
	public Fx_paint_propertiesElements getFx_paint_propertiesAccess() {
		return (pFx_paint_properties != null) ? pFx_paint_properties : (pFx_paint_properties = new Fx_paint_propertiesElements());
	}
	
	public ParserRule getFx_paint_propertiesRule() {
		return getFx_paint_propertiesAccess().getRule();
	}

	//fx_multisize_properties:
	//	property=("-fx-background-insets" | "-fx-background-radius" | "-fx-border-insets" | "-fx-border-radius" |
	//	"-fx-border-width" | "-fx-border-image-insets" | "-fx-border-image-width") WS* ":" WS* values+=Dim4Size (COMMA
	//	values+=Dim4Size)*;
	public Fx_multisize_propertiesElements getFx_multisize_propertiesAccess() {
		return (pFx_multisize_properties != null) ? pFx_multisize_properties : (pFx_multisize_properties = new Fx_multisize_propertiesElements());
	}
	
	public ParserRule getFx_multisize_propertiesRule() {
		return getFx_multisize_propertiesAccess().getRule();
	}

	//fx_hposition_property:
	//	property=("-fx-hpos" | "-fx-node-hpos" | "-fx-graphic-hpos") WS* ":" WS* value=HPosition;
	public Fx_hposition_propertyElements getFx_hposition_propertyAccess() {
		return (pFx_hposition_property != null) ? pFx_hposition_property : (pFx_hposition_property = new Fx_hposition_propertyElements());
	}
	
	public ParserRule getFx_hposition_propertyRule() {
		return getFx_hposition_propertyAccess().getRule();
	}

	//fx_vposition_property:
	//	property=("-fx-vpos" | "-fx-node-vpos" | "-fx-graphic-vpos") WS* ":" WS* value=VPosition;
	public Fx_vposition_propertyElements getFx_vposition_propertyAccess() {
		return (pFx_vposition_property != null) ? pFx_vposition_property : (pFx_vposition_property = new Fx_vposition_propertyElements());
	}
	
	public ParserRule getFx_vposition_propertyRule() {
		return getFx_vposition_propertyAccess().getRule();
	}

	//fx_side_property:
	//	property=("-fx-legend-side" | "-fx-title-side" | "-fx-side") WS* ":" WS* value=("top" | "bottom" | "left" | "right");
	public Fx_side_propertyElements getFx_side_propertyAccess() {
		return (pFx_side_property != null) ? pFx_side_property : (pFx_side_property = new Fx_side_propertyElements());
	}
	
	public ParserRule getFx_side_propertyRule() {
		return getFx_side_propertyAccess().getRule();
	}

	//fx_bar_policy_property:
	//	property=("-fx-hbar-policy" | "-fx-vbar-policy") WS* ":" WS* value=("never" | "always" | "as_needed");
	public Fx_bar_policy_propertyElements getFx_bar_policy_propertyAccess() {
		return (pFx_bar_policy_property != null) ? pFx_bar_policy_property : (pFx_bar_policy_property = new Fx_bar_policy_propertyElements());
	}
	
	public ParserRule getFx_bar_policy_propertyRule() {
		return getFx_bar_policy_propertyAccess().getRule();
	}

	//fx_url_properties:
	//	property=("-fx-background-image" | "-fx-border-image") WS* ":" WS* values+=URLType (COMMA values+=URLType)*;
	public Fx_url_propertiesElements getFx_url_propertiesAccess() {
		return (pFx_url_properties != null) ? pFx_url_properties : (pFx_url_properties = new Fx_url_propertiesElements());
	}
	
	public ParserRule getFx_url_propertiesRule() {
		return getFx_url_propertiesAccess().getRule();
	}

	//fx_repeat_properties:
	//	property=("-fx-background-image-repeat" | "-fx-border-image-repeat" | "-fx-background-repeat") WS* ":" WS*
	//	values+=RepeatStyle (COMMA values+=RepeatStyle)*;
	public Fx_repeat_propertiesElements getFx_repeat_propertiesAccess() {
		return (pFx_repeat_properties != null) ? pFx_repeat_properties : (pFx_repeat_properties = new Fx_repeat_propertiesElements());
	}
	
	public ParserRule getFx_repeat_propertiesRule() {
		return getFx_repeat_propertiesAccess().getRule();
	}

	//fx_multisize_property:
	//	property="-fx-padding" WS* ":" WS* value=Dim4Size;
	public Fx_multisize_propertyElements getFx_multisize_propertyAccess() {
		return (pFx_multisize_property != null) ? pFx_multisize_property : (pFx_multisize_property = new Fx_multisize_propertyElements());
	}
	
	public ParserRule getFx_multisize_propertyRule() {
		return getFx_multisize_propertyAccess().getRule();
	}

	//fx_size_properties:
	//	property="-fx-stroke-dash-array" WS* ":" WS* values+=SIZE;
	public Fx_size_propertiesElements getFx_size_propertiesAccess() {
		return (pFx_size_properties != null) ? pFx_size_properties : (pFx_size_properties = new Fx_size_propertiesElements());
	}
	
	public ParserRule getFx_size_propertiesRule() {
		return getFx_size_propertiesAccess().getRule();
	}

	//fx_stroke_line_cap_property:
	//	property="-fx-stroke-line-cap" WS* ":" WS* value=("square" | "butt" | "round");
	public Fx_stroke_line_cap_propertyElements getFx_stroke_line_cap_propertyAccess() {
		return (pFx_stroke_line_cap_property != null) ? pFx_stroke_line_cap_property : (pFx_stroke_line_cap_property = new Fx_stroke_line_cap_propertyElements());
	}
	
	public ParserRule getFx_stroke_line_cap_propertyRule() {
		return getFx_stroke_line_cap_propertyAccess().getRule();
	}

	//fx_stroke_line_join_property:
	//	property="-fx-stroke-line-join" WS* ":" WS* value=("miter" | "bevel" | "round");
	public Fx_stroke_line_join_propertyElements getFx_stroke_line_join_propertyAccess() {
		return (pFx_stroke_line_join_property != null) ? pFx_stroke_line_join_property : (pFx_stroke_line_join_property = new Fx_stroke_line_join_propertyElements());
	}
	
	public ParserRule getFx_stroke_line_join_propertyRule() {
		return getFx_stroke_line_join_propertyAccess().getRule();
	}

	//fx_alignment_property:
	//	property=("-fx-text-alignment" | "-fx-alignment") WS* ":" WS* value=("left" | "center" | "right" | "justify");
	public Fx_alignment_propertyElements getFx_alignment_propertyAccess() {
		return (pFx_alignment_property != null) ? pFx_alignment_property : (pFx_alignment_property = new Fx_alignment_propertyElements());
	}
	
	public ParserRule getFx_alignment_propertyRule() {
		return getFx_alignment_propertyAccess().getRule();
	}

	//fx_text_origin_property:
	//	property="-fx-text-origin" WS* ":" WS* value=("baseline" | "top" | "bottom");
	public Fx_text_origin_propertyElements getFx_text_origin_propertyAccess() {
		return (pFx_text_origin_property != null) ? pFx_text_origin_property : (pFx_text_origin_property = new Fx_text_origin_propertyElements());
	}
	
	public ParserRule getFx_text_origin_propertyRule() {
		return getFx_text_origin_propertyAccess().getRule();
	}

	//fx_position_property:
	//	property=("-fx-background-image-position" | "-fx-background-position") WS* ":" WS* values+=BgPosition (COMMA
	//	values+=BgPosition)*;
	public Fx_position_propertyElements getFx_position_propertyAccess() {
		return (pFx_position_property != null) ? pFx_position_property : (pFx_position_property = new Fx_position_propertyElements());
	}
	
	public ParserRule getFx_position_propertyRule() {
		return getFx_position_propertyAccess().getRule();
	}

	//fx_background_image_size_property:
	//	property="-fx-background-image-size" WS* ":" WS* values+=BgSize (COMMA values+=BgSize)*;
	public Fx_background_image_size_propertyElements getFx_background_image_size_propertyAccess() {
		return (pFx_background_image_size_property != null) ? pFx_background_image_size_property : (pFx_background_image_size_property = new Fx_background_image_size_propertyElements());
	}
	
	public ParserRule getFx_background_image_size_propertyRule() {
		return getFx_background_image_size_propertyAccess().getRule();
	}

	//fx_border_style_property:
	//	property="-fx-border-style" WS* ":" WS* values+=BorderStyle (COMMA values+=BorderStyle)*;
	public Fx_border_style_propertyElements getFx_border_style_propertyAccess() {
		return (pFx_border_style_property != null) ? pFx_border_style_property : (pFx_border_style_property = new Fx_border_style_propertyElements());
	}
	
	public ParserRule getFx_border_style_propertyRule() {
		return getFx_border_style_propertyAccess().getRule();
	}

	//fx_border_image_slice_property:
	//	property="-fx-border-image-slice" WS* ":" WS* values+=SizeFill (COMMA values+=SizeFill)*;
	public Fx_border_image_slice_propertyElements getFx_border_image_slice_propertyAccess() {
		return (pFx_border_image_slice_property != null) ? pFx_border_image_slice_property : (pFx_border_image_slice_property = new Fx_border_image_slice_propertyElements());
	}
	
	public ParserRule getFx_border_image_slice_propertyRule() {
		return getFx_border_image_slice_propertyAccess().getRule();
	}

	//fx_text_overrun_property:
	//	property="-fx-text-overrun" WS* ":" WS* value=("center-ellipses" | "center-word-ellipses" | "clip" | "ellipses" |
	//	"leading-ellipses" | "leading-word-ellipses" | "word-ellipses");
	public Fx_text_overrun_propertyElements getFx_text_overrun_propertyAccess() {
		return (pFx_text_overrun_property != null) ? pFx_text_overrun_property : (pFx_text_overrun_property = new Fx_text_overrun_propertyElements());
	}
	
	public ParserRule getFx_text_overrun_propertyRule() {
		return getFx_text_overrun_propertyAccess().getRule();
	}

	//fx_insets_property:
	//	property="-fx-insets" WS* ":" WS* value+=NUMBER | value+=NUMBER WS+ value+=NUMBER WS+ value+=NUMBER WS+ value+=NUMBER;
	public Fx_insets_propertyElements getFx_insets_propertyAccess() {
		return (pFx_insets_property != null) ? pFx_insets_property : (pFx_insets_property = new Fx_insets_propertyElements());
	}
	
	public ParserRule getFx_insets_propertyRule() {
		return getFx_insets_propertyAccess().getRule();
	}

	//fx_number_properties:
	//	property=("-fx-horizontal-grid-line-stroke-dash-array" | "-fx-vertical-grid-line-stroke-dash-array") WS* ":" WS*
	//	value+=NUMBER+;
	public Fx_number_propertiesElements getFx_number_propertiesAccess() {
		return (pFx_number_properties != null) ? pFx_number_properties : (pFx_number_properties = new Fx_number_propertiesElements());
	}
	
	public ParserRule getFx_number_propertiesRule() {
		return getFx_number_propertiesAccess().getRule();
	}

	//fx_multi_paint_properties:
	//	property="-fx-border-color" WS* ":" WS* (values+=MultiPaint WS* (COMMA values+=MultiPaint)* | "null");
	public Fx_multi_paint_propertiesElements getFx_multi_paint_propertiesAccess() {
		return (pFx_multi_paint_properties != null) ? pFx_multi_paint_properties : (pFx_multi_paint_properties = new Fx_multi_paint_propertiesElements());
	}
	
	public ParserRule getFx_multi_paint_propertiesRule() {
		return getFx_multi_paint_propertiesAccess().getRule();
	}

	//fx_string_property:
	//	property=("-fx-skin" | "-fx-shape" | "-fx-text" | "-fx-echo-char") WS* ":" WS* (value=STRING | "null");
	public Fx_string_propertyElements getFx_string_propertyAccess() {
		return (pFx_string_property != null) ? pFx_string_property : (pFx_string_property = new Fx_string_propertyElements());
	}
	
	public ParserRule getFx_string_propertyRule() {
		return getFx_string_propertyAccess().getRule();
	}

	//Effect:
	//	EffectDropShadow | EffectInnerShadow;
	public EffectElements getEffectAccess() {
		return (pEffect != null) ? pEffect : (pEffect = new EffectElements());
	}
	
	public ParserRule getEffectRule() {
		return getEffectAccess().getRule();
	}

	//EffectDropShadow:
	//	"dropshadow" WS* "(" WS* blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA spread=NUMBER COMMA offsetX=NUMBER
	//	COMMA offsetY=NUMBER WS* ")";
	public EffectDropShadowElements getEffectDropShadowAccess() {
		return (pEffectDropShadow != null) ? pEffectDropShadow : (pEffectDropShadow = new EffectDropShadowElements());
	}
	
	public ParserRule getEffectDropShadowRule() {
		return getEffectDropShadowAccess().getRule();
	}

	//EffectInnerShadow:
	//	"innershadow" WS* "(" WS* blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA choke=NUMBER COMMA offsetX=NUMBER
	//	COMMA offsetY=NUMBER WS* ")";
	public EffectInnerShadowElements getEffectInnerShadowAccess() {
		return (pEffectInnerShadow != null) ? pEffectInnerShadow : (pEffectInnerShadow = new EffectInnerShadowElements());
	}
	
	public ParserRule getEffectInnerShadowRule() {
		return getEffectInnerShadowAccess().getRule();
	}

	//// values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue
	//// values+=PaintValue // | (values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
	//// (values+=PaintValue | values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
	//MultiPaint:
	//	values+=Paint (WS* values+=Paint)*;
	public MultiPaintElements getMultiPaintAccess() {
		return (pMultiPaint != null) ? pMultiPaint : (pMultiPaint = new MultiPaintElements());
	}
	
	public ParserRule getMultiPaintRule() {
		return getMultiPaintAccess().getRule();
	}

	//Paint:
	//	LinearGradient | RadialGradient | Color;
	public PaintElements getPaintAccess() {
		return (pPaint != null) ? pPaint : (pPaint = new PaintElements());
	}
	
	public ParserRule getPaintRule() {
		return getPaintAccess().getRule();
	}

	//LinearGradient:
	//	"linear" WS* "(" start=PointValue ")" WS* "to" WS* "(" end=PointValue ")" WS* "stops" (WS* "(" stops+=StopValue ")")+
	//	(WS+ ("repeat" | "reflect"))?;
	public LinearGradientElements getLinearGradientAccess() {
		return (pLinearGradient != null) ? pLinearGradient : (pLinearGradient = new LinearGradientElements());
	}
	
	public ParserRule getLinearGradientRule() {
		return getLinearGradientAccess().getRule();
	}

	//RadialGradient:
	//	"radial" WS* ("(" center=PointValue ")" COMMA)? radius=SizeType (WS* "focus" WS* "(" WS* focus=PointValue WS* ")") WS*
	//	"stops" (WS* "(" stops+=StopValue ")")+ (WS+ ("repeat" | "reflect"))?;
	public RadialGradientElements getRadialGradientAccess() {
		return (pRadialGradient != null) ? pRadialGradient : (pRadialGradient = new RadialGradientElements());
	}
	
	public ParserRule getRadialGradientRule() {
		return getRadialGradientAccess().getRule();
	}

	//StopValue:
	//	pos=SizeType COMMA color=Color;
	public StopValueElements getStopValueAccess() {
		return (pStopValue != null) ? pStopValue : (pStopValue = new StopValueElements());
	}
	
	public ParserRule getStopValueRule() {
		return getStopValueAccess().getRule();
	}

	//PointValue:
	//	x=SizeType COMMA y=SizeType;
	public PointValueElements getPointValueAccess() {
		return (pPointValue != null) ? pPointValue : (pPointValue = new PointValueElements());
	}
	
	public ParserRule getPointValueRule() {
		return getPointValueAccess().getRule();
	}

	//enum HPosition:
	//	left | center | right | leading | trailing;
	public HPositionElements getHPositionAccess() {
		return (unknownRuleHPosition != null) ? unknownRuleHPosition : (unknownRuleHPosition = new HPositionElements());
	}
	
	public EnumRule getHPositionRule() {
		return getHPositionAccess().getRule();
	}

	//VPosition:
	//	"top" | "center" | "baseline" | "bottom" | "page-end" | "page-start";
	public VPositionElements getVPositionAccess() {
		return (pVPosition != null) ? pVPosition : (pVPosition = new VPositionElements());
	}
	
	public ParserRule getVPositionRule() {
		return getVPositionAccess().getRule();
	}

	//RepeatStyle:
	//	v=("repeat-x" | "repeat-y") | v=("repeat" | "space" | "round" | "no-repeat" | "stretch") (WS+ v2=("repeat" | "space" |
	//	"round" | "no-repeat" | "stretch"))?;
	public RepeatStyleElements getRepeatStyleAccess() {
		return (pRepeatStyle != null) ? pRepeatStyle : (pRepeatStyle = new RepeatStyleElements());
	}
	
	public ParserRule getRepeatStyleRule() {
		return getRepeatStyleAccess().getRule();
	}

	//Dim4Size:
	//	values+=SIZE | values+=SIZE WS* values+=SIZE WS* values+=SIZE WS* values+=SIZE;
	public Dim4SizeElements getDim4SizeAccess() {
		return (pDim4Size != null) ? pDim4Size : (pDim4Size = new Dim4SizeElements());
	}
	
	public ParserRule getDim4SizeRule() {
		return getDim4SizeAccess().getRule();
	}

	////	|
	////	(
	////		( center | ( left | right ) SizeValue? ) | ( center | ( top | bottom ) SizeValue? )
	////	)
	//BgPosition:
	//	(absx=SIZE | relx=("left" | "center" | "right")) WS* (absy=SIZE | rely=("top" | "center" | "bottom"));
	public BgPositionElements getBgPositionAccess() {
		return (pBgPosition != null) ? pBgPosition : (pBgPosition = new BgPositionElements());
	}
	
	public ParserRule getBgPositionRule() {
		return getBgPositionAccess().getRule();
	}

	//fx_color_property:
	//	property=COLOR_PROPERTIES WS* ":" WS* value=Color;
	public Fx_color_propertyElements getFx_color_propertyAccess() {
		return (pFx_color_property != null) ? pFx_color_property : (pFx_color_property = new Fx_color_propertyElements());
	}
	
	public ParserRule getFx_color_propertyRule() {
		return getFx_color_propertyAccess().getRule();
	}

	//BgSize:
	//	xsize=(SIZE | "auto") ysize=(SIZE | "auto")? | predefined=("cover" | "contain");
	public BgSizeElements getBgSizeAccess() {
		return (pBgSize != null) ? pBgSize : (pBgSize = new BgSizeElements());
	}
	
	public ParserRule getBgSizeRule() {
		return getBgSizeAccess().getRule();
	}

	//BorderStyle:
	//	dashStyle=("none" | "solid" | "dotted" | "dashed") location=("centered" | "inside" | "outside")? ("line-join" ("miter"
	//	miterAbs=NUMBER | miterPredefined=("bevel" | "round")))? ("line-cap" lineCap=("square" | "butt" | "round"))?;
	public BorderStyleElements getBorderStyleAccess() {
		return (pBorderStyle != null) ? pBorderStyle : (pBorderStyle = new BorderStyleElements());
	}
	
	public ParserRule getBorderStyleRule() {
		return getBorderStyleAccess().getRule();
	}

	//SizeFill:
	//	value=Dim4Size WS* fill="fill"?;
	public SizeFillElements getSizeFillAccess() {
		return (pSizeFill != null) ? pSizeFill : (pSizeFill = new SizeFillElements());
	}
	
	public ParserRule getSizeFillRule() {
		return getSizeFillAccess().getRule();
	}

	//Color:
	//	NamedColor | LookedUpColor | RGBColor | HSBColor | ColorFunction;
	public ColorElements getColorAccess() {
		return (pColor != null) ? pColor : (pColor = new ColorElements());
	}
	
	public ParserRule getColorRule() {
		return getColorAccess().getRule();
	}

	//COLOR_PROPERTIES:
	//	"-fx-color" | "-fx-light-text-color" | "-fx-accent" | "-fx-selection-bar" | "-fx-selection-bar-text" |
	//	"-fx-background";
	public COLOR_PROPERTIESElements getCOLOR_PROPERTIESAccess() {
		return (pCOLOR_PROPERTIES != null) ? pCOLOR_PROPERTIES : (pCOLOR_PROPERTIES = new COLOR_PROPERTIESElements());
	}
	
	public ParserRule getCOLOR_PROPERTIESRule() {
		return getCOLOR_PROPERTIESAccess().getRule();
	}

	//LookedUpColor:
	//	value=(COLOR_PROPERTIES | IDENT);
	public LookedUpColorElements getLookedUpColorAccess() {
		return (pLookedUpColor != null) ? pLookedUpColor : (pLookedUpColor = new LookedUpColorElements());
	}
	
	public ParserRule getLookedUpColorRule() {
		return getLookedUpColorAccess().getRule();
	}

	//NamedColor:
	//	value=("aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" |
	//	"blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral"
	//	| "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" |
	//	"darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" |
	//	"darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" |
	//	"deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" |
	//	"fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew"
	//	| "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon"
	//	| "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" |
	//	"lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" |
	//	"lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" |
	//	"mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" |
	//	"mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" |
	//	"navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" |
	//	"paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" |
	//	"red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" |
	//	"silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal"
	//	| "thistle" | "tomato" | "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" |
	//	"transparent");
	public NamedColorElements getNamedColorAccess() {
		return (pNamedColor != null) ? pNamedColor : (pNamedColor = new NamedColorElements());
	}
	
	public ParserRule getNamedColorRule() {
		return getNamedColorAccess().getRule();
	}

	//RGBColor:
	//	hexcolor=HexColor | "rgb" WS* "(" WS* r=integer COMMA g=integer COMMA b=integer WS* ")" | "rgb" WS* "(" WS* rp=integer
	//	"%" COMMA gp=integer "%" COMMA bp=integer "%" WS* ")" | "rgba" WS* "(" WS* r=integer COMMA g=integer COMMA b=integer
	//	COMMA alpha=NUMBER WS* ")" | "rgba" WS* "(" WS* rp=integer "%" COMMA gp=integer "%" COMMA bp=integer "%" COMMA
	//	alpha=NUMBER WS* ")";
	public RGBColorElements getRGBColorAccess() {
		return (pRGBColor != null) ? pRGBColor : (pRGBColor = new RGBColorElements());
	}
	
	public ParserRule getRGBColorRule() {
		return getRGBColorAccess().getRule();
	}

	//HSBColor:
	//	"hsb" WS* "(" WS* hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE WS* ")" | "hsba" WS* "(" WS*
	//	hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE COMMA alpha=NUMBER WS* ")";
	public HSBColorElements getHSBColorAccess() {
		return (pHSBColor != null) ? pHSBColor : (pHSBColor = new HSBColorElements());
	}
	
	public ParserRule getHSBColorRule() {
		return getHSBColorAccess().getRule();
	}

	//ColorFunction:
	//	"derive" WS* "(" WS* orig=Color COMMA mod=unary_operator? PERCENTAGE WS* ")" | "ladder" WS* "(" WS* orig=Color WS* ")"
	//	"stops" (WS* "(" WS* stopNumbers+=NUMBER COMMA stopColors+=Color WS* ")")+;
	public ColorFunctionElements getColorFunctionAccess() {
		return (pColorFunction != null) ? pColorFunction : (pColorFunction = new ColorFunctionElements());
	}
	
	public ParserRule getColorFunctionRule() {
		return getColorFunctionAccess().getRule();
	}

	//HexColor:
	//	"#" (hexdigits | integer);
	public HexColorElements getHexColorAccess() {
		return (pHexColor != null) ? pHexColor : (pHexColor = new HexColorElements());
	}
	
	public ParserRule getHexColorRule() {
		return getHexColorAccess().getRule();
	}

	//URI:
	//	"url" WS* "(" WS* STRING WS* ")";
	public URIElements getURIAccess() {
		return (pURI != null) ? pURI : (pURI = new URIElements());
	}
	
	public ParserRule getURIRule() {
		return getURIAccess().getRule();
	}

	//URLType:
	//	"url" WS* "(" WS* url=STRING WS* ")";
	public URLTypeElements getURLTypeAccess() {
		return (pURLType != null) ? pURLType : (pURLType = new URLTypeElements());
	}
	
	public ParserRule getURLTypeRule() {
		return getURLTypeAccess().getRule();
	}

	//NUMBER:
	//	num;
	public NUMBERElements getNUMBERAccess() {
		return (pNUMBER != null) ? pNUMBER : (pNUMBER = new NUMBERElements());
	}
	
	public ParserRule getNUMBERRule() {
		return getNUMBERAccess().getRule();
	}

	//PERCENTAGE:
	//	num "%";
	public PERCENTAGEElements getPERCENTAGEAccess() {
		return (pPERCENTAGE != null) ? pPERCENTAGE : (pPERCENTAGE = new PERCENTAGEElements());
	}
	
	public ParserRule getPERCENTAGERule() {
		return getPERCENTAGEAccess().getRule();
	}

	//EMS:
	//	num "em";
	public EMSElements getEMSAccess() {
		return (pEMS != null) ? pEMS : (pEMS = new EMSElements());
	}
	
	public ParserRule getEMSRule() {
		return getEMSAccess().getRule();
	}

	//EXS:
	//	num "ex";
	public EXSElements getEXSAccess() {
		return (pEXS != null) ? pEXS : (pEXS = new EXSElements());
	}
	
	public ParserRule getEXSRule() {
		return getEXSAccess().getRule();
	}

	//LENGTH:
	//	num ("px" | "cm" | "mm" | "in" | "pt" | "pc");
	public LENGTHElements getLENGTHAccess() {
		return (pLENGTH != null) ? pLENGTH : (pLENGTH = new LENGTHElements());
	}
	
	public ParserRule getLENGTHRule() {
		return getLENGTHAccess().getRule();
	}

	//ANGLE:
	//	num ("deg" | "rad" | "grad");
	public ANGLEElements getANGLEAccess() {
		return (pANGLE != null) ? pANGLE : (pANGLE = new ANGLEElements());
	}
	
	public ParserRule getANGLERule() {
		return getANGLEAccess().getRule();
	}

	//TIME:
	//	num ("ms" | "s");
	public TIMEElements getTIMEAccess() {
		return (pTIME != null) ? pTIME : (pTIME = new TIMEElements());
	}
	
	public ParserRule getTIMERule() {
		return getTIMEAccess().getRule();
	}

	//FREQ:
	//	num ("hz" | "khz");
	public FREQElements getFREQAccess() {
		return (pFREQ != null) ? pFREQ : (pFREQ = new FREQElements());
	}
	
	public ParserRule getFREQRule() {
		return getFREQAccess().getRule();
	}

	//FONT:
	//	((styleOrWeightString=("italic" | "oblique" | "normal" | "bold" | "bolder" | "lighter") | weight=num) WS+)? size=SIZE
	//	WS* family=FONTFAMILY;
	public FONTElements getFONTAccess() {
		return (pFONT != null) ? pFONT : (pFONT = new FONTElements());
	}
	
	public ParserRule getFONTRule() {
		return getFONTAccess().getRule();
	}

	//FONTFAMILY:
	//	STRING;
	public FONTFAMILYElements getFONTFAMILYAccess() {
		return (pFONTFAMILY != null) ? pFONTFAMILY : (pFONTFAMILY = new FONTFAMILYElements());
	}
	
	public ParserRule getFONTFAMILYRule() {
		return getFONTFAMILYAccess().getRule();
	}

	//FONTWEIGHT:
	//	valueString=("normal" | "bold" | "bolder" | "lighter") | valueInt=integer;
	public FONTWEIGHTElements getFONTWEIGHTAccess() {
		return (pFONTWEIGHT != null) ? pFONTWEIGHT : (pFONTWEIGHT = new FONTWEIGHTElements());
	}
	
	public ParserRule getFONTWEIGHTRule() {
		return getFONTWEIGHTAccess().getRule();
	}

	//FONTSTYLE:
	//	value=("normal" | "italic" | "oblique");
	public FONTSTYLEElements getFONTSTYLEAccess() {
		return (pFONTSTYLE != null) ? pFONTSTYLE : (pFONTSTYLE = new FONTSTYLEElements());
	}
	
	public ParserRule getFONTSTYLERule() {
		return getFONTSTYLEAccess().getRule();
	}

	//SIZE:
	//	unary_operator? (NUMBER | PERCENTAGE | EMS | EXS | LENGTH);
	public SIZEElements getSIZEAccess() {
		return (pSIZE != null) ? pSIZE : (pSIZE = new SIZEElements());
	}
	
	public ParserRule getSIZERule() {
		return getSIZEAccess().getRule();
	}

	//SizeType:
	//	value=SIZE;
	public SizeTypeElements getSizeTypeAccess() {
		return (pSizeType != null) ? pSizeType : (pSizeType = new SizeTypeElements());
	}
	
	public ParserRule getSizeTypeRule() {
		return getSizeTypeAccess().getRule();
	}

	//BLUR:
	//	"gaussian" | "one-pass-box" | "three-pass-box" | "two-pass-box";
	public BLURElements getBLURAccess() {
		return (pBLUR != null) ? pBLUR : (pBLUR = new BLURElements());
	}
	
	public ParserRule getBLURRule() {
		return getBLURAccess().getRule();
	}

	//terminal integer:
	//	"0".."9"+;
	public TerminalRule getIntegerRule() {
		return (tInteger != null) ? tInteger : (tInteger = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "integer"));
	} 

	//terminal real:
	//	"0".."9"* "." "0".."9"+;
	public TerminalRule getRealRule() {
		return (tReal != null) ? tReal : (tReal = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "real"));
	} 

	//terminal hexdigits:
	//	("0".."9" | "a".."f" | "A".."F")+;
	public TerminalRule getHexdigitsRule() {
		return (tHexdigits != null) ? tHexdigits : (tHexdigits = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "hexdigits"));
	} 

	//terminal IDENT:
	//	("_" | "a".."z" | "A".."Z") ("_" | "-" | "a".."z" | "A".."Z" | "0..9")*;
	public TerminalRule getIDENTRule() {
		return (tIDENT != null) ? tIDENT : (tIDENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "IDENT"));
	} 

	//terminal COMMA:
	//	WS* "," WS*;
	public TerminalRule getCOMMARule() {
		return (tCOMMA != null) ? tCOMMA : (tCOMMA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "COMMA"));
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 
}
