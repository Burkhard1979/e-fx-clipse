grammar at.bestsolution.efxclipse.tooling.css.CssDsl hidden(ML_COMMENT)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate cssDsl "http://www.bestsolution.at/efxclipse/tooling/css/CssDsl"

stylesheet:
	( 
		ruleset+=ruleset |
		media+=media
	)*
;

media
  : 'media' WS* medialist=media_list '{' WS* rulesets+=ruleset* '}' WS*
  ;

media_list
  : medium ( COMMA WS* medium)*
  ;
medium
  : IDENT WS*
  ;

ruleset:
	selectors+=selector ( COMMA selectors+=selector )* '{' WS*
		(declarations+=css_declaration ';' WS*)*
	'}' WS*
;

selector:
	simpleselectors+=simple_selector ( combinator selector=selector | WS+ ( combinator? selector=selector )? )?
;

simple_selector:
	(element_name id=css_id? class=css_class? pseudoclasses+=css_pseudo*)
	|
	(id=css_id class=css_class? pseudoclasses+=css_pseudo*)
	|
	(class=css_class pseudoclasses+=css_pseudo*)
	|
	pseudoclasses+=css_pseudo+
;

element_name:
	name=IDENT
;

css_class
  : '.' cssClass=IDENT
  ;

css_id:
	'#' id=IDENT
;

css_declaration:
	css_generic_declaration | css_fx_declaration
;

css_generic_declaration:
	property=css_property ':' WS* expression=expr
;

css_property:
	IDENT WS*
;

css_pseudo
  : ':' IDENT
  ;

combinator
  : '+'
  | '>'
  ;
  
operator
  : '/' WS* | COMMA WS*
  ;
  
unary_operator
  : '-' | '+'
  ;

expr
  : term ( operator? term )*
  ;
  
term
  : (unary_operator? 
    ( (NUMBER WS*) | (PERCENTAGE WS*) | (LENGTH WS*) | (EMS WS*) | (EXS WS*) | (ANGLE WS*) |
      (TIME WS*) | (FREQ WS*) ))
  | STRING WS* | IDENT WS* | URI WS* | HEXCOLOR //| function
  ;
  
num:
	integer | real
;
  
css_fx_declaration:
	  fx_font_property 
	| fx_font_family_property 
	| fx_font_size_property
	| fx_font_style_property
	| fx_font_weight_property
	| fx_cursor_property
	| fx_effect_property
	| fx_boolean_property
	| fx_size_property
	| fx_number_property
	| fx_integer_property
	| fx_paint_property
	| fx_blend_property
	| fx_url_property
	| fx_paint_properties
	| fx_multisize_properties
	| fx_hposition_property
	| fx_vposition_property
	| fx_side_property
	| fx_bar_policy_property
	| fx_url_properties
	| fx_repeat_properties
	| fx_multisize_property
	| fx_size_properties
	| fx_stroke_line_cap_property
	| fx_stroke_line_join_property
	| fx_alignment_property
	| fx_text_origin_property
	| fx_position_property
	| fx_background_image_size_property
	| fx_border_style_property
	| fx_border_image_slice_property
	| fx_text_overrun_property
	| fx_insets_property
	| fx_number_properties
	| fx_multi_paint_properties
	| fx_color_property
	| fx_string_property	
;

fx_font_property:
	property=(
		'-fx-font' | '-fx-title-font' | '-fx-pie-label-font' | '-fx-pie-value-label-font' 
		| '-fx-label-font' | '-fx-tick-label-font'
	) ':' value=FONT
;

fx_font_family_property:
	property=(
		'-fx-font-family' | '-fx-title-font-family' | '-fx-pie-label-font-family' | '-fx-pie-value-label-font-family' 
		| '-fx-label-font-family' | '-fx-tick-label-font-family'
	) WS* ':' WS* value=FONTFAMILY
;

fx_font_size_property:
	property=(
		'-fx-font-size' | '-fx-title-font-size' | '-fx-pie-label-font-size' | '-fx-pie-value-label-font-size' 
		| '-fx-label-font-size' | '-fx-tick-label-font-size'
		) WS* ':' WS* value=SIZE
;

fx_font_style_property:
	property=(
		'-fx-font-style' | '-fx-title-font-style' | '-fx-pie-label-font-style' | '-fx-pie-value-label-font-style' 
		| '-fx-label-font-style' | '-fx-tick-label-font-style'
	) WS* ':' WS* value=FONTSTYLE
;

fx_font_weight_property:
	property=(
		'-fx-font-weight' | '-fx-title-font-weight' | '-fx-pie-label-font-weight' | '-fx-pie-value-label-font-weight' 
		| '-fx-label-font-weight' | '-fx-tick-label-font-weight'
	) WS* ':' WS* value=FONTWEIGHT
;

fx_cursor_property:
	property=(
		'-fx-cursor'
	) WS* ':' WS*value=( 'crosshair' | 'default' | 'hand' | 'move' | 'e-resize' | 'h-resize' | 'ne-resize' | 'nw-resize' | 'n-resize' | 'se-resize' | 'sw-resize' | 's-resize' | 'w-resize' | 'v-resize' | 'text' | 'wait' )
;

fx_effect_property:
	'-fx-effect' WS*':' WS*value=Effect
;

fx_boolean_property:
	property=( 
		'-fx-focus-traversable' | '-fx-pannable' | '-fx-hgap' | '-fx-vpos' | '-fx-snap-to-pixel' | '-fx-vertical' | '-fx-smooth' | '-fx-strikethrough' | '-fx-underline' | '-fx-scale-shape' | '-fx-vertical-zero-line-visible' | '-fx-vertical-grid-line-visible' | '-fx-horizontal-zero-line-visible'
		| '-fx-horizontal-grid-line-visible' | '-fx-pie-value-visible' | '-fx-pie-to-label-line-curved' | '-fx-pie-label-visible' | '-fx-clockwise'
		| '-fx-show-symbols' | '-fx-legend-visible' | '-fx-scale-bubble-radius-using-axis' | '-fx-select-on-focus' | '-fx-editable'
		| '-fx-snap-to-ticks' | '-fx-show-tick-marks' | '-fx-show-tick-labels' | '-fx-fit-to-width' | '-fx-minor-tick-visible'
		| '-fx-gap-start-and-end' | '-fx-tick-mark-visible' | '-fx-tick-labels-visible' | '-fx-fit-to-height'
		| '-fx-click-to-position' | '-fx-text-wrap' | '-fx-position-shape'
	) WS*':'WS* value=('true'|'false')
;

fx_size_property:
	property=(
		'-fx-spacing' | '-fx-arc-height' | '-fx-arc-width' | '-fx-minor-tick-length'
		| '-fx-stroke-width' | '-fx-start-margin' | '-fx-end-margin' | '-fx-tick-mark-stroke-width'
		| '-fx-tick-mark-length' | '-fx-tick-label-tick-gap' | '-fx-axis-stroke-width' | '-fx-label-tick-gap'
		| '-fx-vertical-grid-line-stroke-width' | '-fx-plot-background-stroke-width' | '-fx-horizontal-grid-line-stroke-width'
		| '-fx-pie-thickness' | '-fx-pie-stroke-width' | '-fx-title-gap' | '-fx-legend-gap' | '-fx-hover-stroke-width'
		| '-fx-chart-background-stroke-width' | '-fx-offset-y' | '-fx-offset-x' | '-fx-category-gap'
		| '-fx-bar-gap' | '-fx-graphic-text-gap' | '-fx-tab-spacing'
		) WS*':'WS* value=SIZE
;

fx_number_property:
	property=(
		'-fx-rotate' | '-fx-scale-x' | '-fx-scale-y' | '-fx-scale-z' | '-fx-translate-x'
		| '-fx-translate-y' | '-fx-translate-z' | '-fx-vgap' | '-fx-tile-height' | '-fx-tile-width'
		| '-fx-stroke-dash-offset' | '-fx-stroke-miter-limit' | '-fx-block-increment'
		| '-fx-unit-increment' | '-fx-major-tick-unit' | '-fx-data-opacity'
		| '-fx-radius-scale' | '-fx-pie-to-label-line-one-length' | '-fx-pie-to-label-line-stroke-width'
		| '-fx-pie-to-label-line-two-length' | '-fx-start-angle' | '-fx-tick-unit' | '-fx-indent'
	) WS*':'WS* value=NUMBER
;

fx_integer_property:
	property=(
		'-fx-columns' | '-fx-rows' | '-fx-lines' | '-fx-minor-tick-count'
	) WS*':'WS* value=integer
;

fx_paint_property:
	property=(
		'-fx-fill' | '-fx-stroke' | '-fx-text-fill' | '-fx-bar-fill' | '-fx-bar-stroke' | '-fx-bottom-shelf-fill'
		| '-fx-bottom-shelf-stroke' | '-fx-side-shelf-fill' | '-fx-side-shelf-stroke' | '-fx-zero-shelf-fill'
		| '-fx-zero-shelf-stroke' | '-fx-chart-background-fill' | '-fx-chart-background-stroke'
		| '-fx-hover-stroke' | '-fx-title-fill' | '-fx-pie-label-fill' | '-fx-pie-stroke'
		| '-fx-pie-to-label-line-stroke' | '-fx-pie-value-label-fill' | '-fx-horizontal-alternate-row-fill'
		| '-fx-plot-background-fill' | '-fx-horizontal-grid-line-stroke' | '-fx-plot-background-stroke'
		| '-fx-vertical-alternate-row-fill' | '-fx-vertical-grid-line-stroke' | '-fx-axis-stroke'
		| '-fx-tick-label-fill' | '-fx-label-fill' | '-fx-tick-mark-stroke' | '-fx-hover-fill'
		
	) WS*':'WS* value=Paint
;

fx_blend_property:
	property=(
		'-fx-blend-mode'
	) WS*':'WS* value=( 'add' | 'blue' | 'color-burn' | 'color-dodge' | 'darken' | 'difference' | 'exclusion' | 'green' | 'hard-light' | 'lighten' | 'multiply' | 'overlay' | 'red' | 'screen' | 'soft-light' | 'src-atop' | 'src-in' | 'src-out' | 'src-over' )
;

fx_url_property:
	property=(
		'-fx-image' | '-fx-graphic' | '-fx-border-image-source'
	) WS*':'WS* value=URI
;

fx_paint_properties:
	property=(
		'-fx-background-color'
	) WS*':'WS* (((values+=Paint) (COMMA values+=Paint WS*)*) | 'null')
;

fx_multisize_properties:
	property=(
		'-fx-background-insets' | '-fx-background-radius' | '-fx-border-insets' | '-fx-border-radius'
		| '-fx-border-width' | '-fx-border-image-insets' | '-fx-border-image-width'
	) WS*':'WS* values+=Dim4Size ( COMMA values+=Dim4Size )*
;

fx_hposition_property:
	property=(
		'-fx-hpos' | '-fx-node-hpos' | '-fx-graphic-hpos'
	) WS*':'WS* value=HPosition
;

fx_vposition_property:
	property=(
		'-fx-vpos' | '-fx-node-vpos' | '-fx-graphic-vpos'
	) WS*':'WS* value=VPosition
;

fx_side_property:
	property=(
		'-fx-legend-side' | '-fx-title-side' | '-fx-side'
	) WS*':'WS* value=( 'top' | 'bottom' | 'left' | 'right' )
;

fx_bar_policy_property:
	property=(
		'-fx-hbar-policy' | '-fx-vbar-policy'
	) WS*':'WS* value=( 'never' | 'always' | 'as_needed' )
;

fx_url_properties:
	property=(
		'-fx-background-image' | '-fx-border-image'
	) WS*':'WS* values+=URI ( COMMA values+=URI )*
;

fx_repeat_properties:
	property=(
		'-fx-background-image-repeat' | '-fx-border-image-repeat' | '-fx-background-repeat'
	) WS*':'WS* values+=RepeatStyle (COMMA values+=RepeatStyle)*
;

fx_multisize_property:
	property=(
		'-fx-padding'
	) WS*':'WS* value=Dim4Size
;

fx_size_properties:
	property=(
		'-fx-stroke-dash-array'
	) WS*':'WS* values+=SIZE
;

fx_stroke_line_cap_property:
	property=(
		'-fx-stroke-line-cap' 
	) WS*':'WS* value=('square' | 'butt' | 'round')
;

fx_stroke_line_join_property:
	property=(
		'-fx-stroke-line-join' 
	) WS*':'WS* value=( 'miter' | 'bevel' | 'round' )
;

fx_alignment_property:
	property = (
		'-fx-text-alignment' | '-fx-alignment'
	) WS*':'WS* value=('left' | 'center' | 'right' | 'justify')
;

fx_text_origin_property:
	property=(
		'-fx-text-origin' 
	) WS*':'WS* value=('baseline' | 'top' | 'bottom')
;

fx_position_property:
	property=(
		'-fx-background-image-position' | '-fx-background-position'
	) WS*':'WS* values+=BgPosition (COMMA values+=BgPosition)*
;

fx_background_image_size_property:
	property=(
		'-fx-background-image-size' 
	) WS*':'WS* values+=BgSize (COMMA values+=BgSize)*
;

fx_border_style_property:
	property=(
		'-fx-border-style' 
	) WS*':'WS* values+=BorderStyle (COMMA values+=BorderStyle)*
;

fx_border_image_slice_property:
	property=(
		'-fx-border-image-slice' 
	) WS*':'WS* values+=SizeFill (COMMA values+=SizeFill)*
;

fx_text_overrun_property:
	property=(
		'-fx-text-overrun'
	) WS*':'WS* value=( 'center-ellipses' | 'center-word-ellipses' | 'clip' | 'ellipses' | 'leading-ellipses' | 'leading-word-ellipses' | 'word-ellipses' )
;

fx_insets_property:
	property=(
		'-fx-insets'
	) WS*':'WS* value+=NUMBER | ( value+=NUMBER value+=NUMBER value+=NUMBER value+=NUMBER )
;

fx_number_properties:
	property=(
		'-fx-horizontal-grid-line-stroke-dash-array' | '-fx-vertical-grid-line-stroke-dash-array'
	) WS*':'WS* value+=NUMBER+
;

fx_multi_paint_properties:
	property=(
		'-fx-border-color'
	) WS*':'WS* ((values+=MultiPaint WS* (COMMA values+=MultiPaint)*) | 'null')	
;

fx_string_property:
	property=(
		'-fx-skin' | '-fx-shape' | '-fx-text' | '-fx-echo-char'
	) WS*':'WS* ( value=STRING | 'null' )
;

Effect:
	EffectDropShadow | EffectInnerShadow
;

EffectDropShadow:
	'dropshadow' '(' blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA spread=NUMBER COMMA offsetX=NUMBER COMMA offsetY=NUMBER ')'
;


EffectInnerShadow:
	'innershadow(' blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA choke=NUMBER COMMA offsetX=NUMBER COMMA offsetY=NUMBER ')'
;

MultiPaint:
	(values+=Paint)+ 
	// values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue
	// values+=PaintValue // | (values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
	// (values+=PaintValue | values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
;

Paint:
	LinearGradient | RadialGradient | Color
;


LinearGradient:
	'linear' WS* '(' x1=SIZE COMMA y1=SIZE ')' WS* 'to' WS* '(' x2=SIZE COMMA y2=SIZE ')' WS* 'stops' ( WS* '(' stops+=StopValue ')' )+ ( 'repeat' | 'reflect' )?
;

RadialGradient:
	'radial' ('(' cx=SIZE COMMA cy=SIZE ')' COMMA )? radius=SIZE ( 'focus' '(' fx=SIZE COMMA fy=SIZE ')' ) 'stops' ( '(' stops+=StopValue ')' )+ ( 'repeat' | 'reflect' )?
;

StopValue:
	pos=SIZE COMMA color=Color
;

enum HPosition:
	left | center | right | leading | trailing
;

VPosition:
	'top' | 'center' | 'baseline' | 'bottom' | 'page-end' | 'page-start'
;

RepeatStyle:
	v = ('repeat-x' | 'repeat-y') | (  v=('repeat' | 'space' | 'round' | 'no-repeat' | 'stretch') v2=('repeat' | 'space' | 'round' | 'no-repeat'| 'stretch')?)
;

Dim4Size:
	( values+=SIZE | (values+=SIZE WS* values+=SIZE WS* values+=SIZE WS* values+=SIZE) )
;

BgPosition:
	(
		( absx=SIZE | relx=('left' | 'center' | 'right') ) WS* ( absy=SIZE | rely=('top' | 'center' | 'bottom') )
	)
//	|
//	(
//		( center | ( left | right ) SizeValue? ) | ( center | ( top | bottom ) SizeValue? )
//	)
;

fx_color_property:
	property=COLOR_PROPERTIES':' value=Color
;

BgSize:
	( ( xsize=(SIZE | 'auto') ) ( ysize=(SIZE | 'auto') )? ) | predefined=('cover' | 'contain')
;

BorderStyle:
	dashStyle=('none' | 'solid' | 'dotted' | 'dashed') location=('centered' | 'inside' | 'outside')? ('line-join' ('miter' miterAbs=NUMBER | miterPredefined=('bevel' | 'round') ))? ('line-cap' lineCap=('square' | 'butt' | 'round'))?
;

SizeFill:
	value=Dim4Size WS* fill='fill'?
;

Color:
	NamedColor |
	LookedUpColor |
	RGBColor |
	HSBColor |
	ColorFunction
;

COLOR_PROPERTIES:
	'-fx-color' | '-fx-light-text-color' | '-fx-accent' | '-fx-selection-bar' | '-fx-selection-bar-text' | '-fx-background'
;

LookedUpColor:
	value=( COLOR_PROPERTIES | IDENT ) 
;

NamedColor:
	value = (
		'aliceblue'      | 'antiquewhite'     | 'aqua'                | 'aquamarine'      | 
		'azure'          | 'beige'            | 'bisque'              | 'black'           | 
		'blanchedalmond' | 'blue'             | 'blueviolet'          | 'brown'           | 
		'burlywood'      | 'cadetblue'        | 'chartreuse'          | 'chocolate'       | 
		'coral'          | 'cornflowerblue'   | 'cornsilk'            | 'crimson'         | 
		'cyan'           | 'darkblue'         | 'darkcyan'            | 'darkgoldenrod'   | 
		'darkgray'       | 'darkgreen'        | 'darkgrey'            | 'darkkhaki'       | 
		'darkmagenta'    | 'darkolivegreen'   | 'darkorange'          | 'darkorchid'      | 
		'darkred'        | 'darksalmon'       | 'darkseagreen'        | 'darkslateblue'   | 
		'darkslategray'  | 'darkslategrey'    | 'darkturquoise'       | 'darkviolet'      | 
		'deeppink'       | 'deepskyblue'      | 'dimgray'             | 'dimgrey'         | 
		'dodgerblue'     | 'firebrick'        | 'floralwhite'         | 'forestgreen'     | 
		'fuchsia'        | 'gainsboro'        | 'ghostwhite'          | 'gold'            | 
		'goldenrod'      | 'gray'             | 'green'               | 'greenyellow'     | 
		'grey'           | 'honeydew'         | 'hotpink'             | 'indianred'       | 
		'indigo'         | 'ivory'            | 'khaki'               | 'lavender'        | 
		'lavenderblush'  | 'lawngreen'        | 'lemonchiffon'        | 'lightblue'       | 
		'lightcoral'     | 'lightcyan'        | 'lightgoldenrodyellow'| 'lightgray'       | 
		'lightgreen'     | 'lightgrey'        | 'lightpink'           | 'lightsalmon'     | 
		'lightseagreen'  | 'lightskyblue'     | 'lightslategray'      | 'lightslategrey'  | 
		'lightsteelblue' | 'lightyellow'      | 'lime'                | 'limegreen'       | 
		'linen'          | 'magenta'          | 'maroon'              | 'mediumaquamarine'| 
		'mediumblue'     | 'mediumorchid'     | 'mediumpurple'        | 'mediumseagreen'  | 
		'mediumslateblue'| 'mediumspringgreen'| 'mediumturquoise'     | 'mediumvioletred' | 
		'midnightblue'   | 'mintcream'        | 'mistyrose'           | 'moccasin'        | 
		'navajowhite'    | 'navy'             | 'oldlace'             | 'olive'           | 
		'olivedrab'      | 'orange'           | 'orangered'           | 'orchid'          | 
		'palegoldenrod'  | 'palegreen'        | 'paleturquoise'       | 'palevioletred'   | 
		'papayawhip'     | 'peachpuff'        | 'peru'                | 'pink'            | 
		'plum'           | 'powderblue'       | 'purple'              | 'red'             | 
		'rosybrown'      | 'royalblue'        | 'saddlebrown'         | 'salmon'          | 
		'sandybrown'     | 'seagreen'         | 'seashell'            | 'sienna'          | 
		'silver'         | 'skyblue'          | 'slateblue'           | 'slategray'       | 
		'slategrey'      | 'snow'             | 'springgreen'         | 'steelblue'       | 
		'tan'            | 'teal'             | 'thistle'             | 'tomato'          | 
		'turquoise'      | 'violet'           | 'wheat'               | 'white'           | 
		'whitesmoke'     | 'yellow'           | 'yellowgreen'         | 'transparent'     
	)
;

RGBColor:
	hex=HEXCOLOR
	|
	('rgb' '(' WS* r=integer COMMA g=integer COMMA b=integer WS* ')' )
	|
	('rgb' '(' rp=integer '%' COMMA gp=integer '%' COMMA bp=integer '%' ')' )
	|
	('rgba' '(' r=integer COMMA g=integer COMMA b=integer COMMA alpha=NUMBER ')' )
	|
	('rgba' '(' rp=integer '%' COMMA gp=integer '%' COMMA bp=integer '%' COMMA alpha=NUMBER ')' )
;

HSBColor:
	('hsb' '(' hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE ')')
	|
	('hsba' '(' hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE COMMA alpha=NUMBER ')')
;

ColorFunction:
	( 'derive' '(' orig=Color COMMA mod=PERCENTAGE ')' )
	|
	( 'ladder' '(' orig=Color ')' 'stops' ( '(' stopNumbers+=NUMBER COMMA stopColors+=Color ')' )+ )
;


URI:
	'url(' STRING ')'
;

NUMBER: num;
PERCENTAGE: num'%';
EMS: num 'em';
EXS: num 'ex';
LENGTH: num  ('px' | 'cm' | 'mm' | 'in' | 'pt' | 'pc' ) ;
ANGLE: num ('deg' | 'rad' | 'grad' );
TIME: num ('ms'| 's' );
FREQ: num ('hz' | 'khz');

FONT:
	( styleOrWeightString=('italic' | 'oblique' | 'normal' | 'bold' | 'bolder' | 'lighter') | weight=num )? size=SIZE family=FONTFAMILY
;

FONTFAMILY:
	STRING
;

FONTWEIGHT:
	valueString=('normal' | 'bold' | 'bolder' | 'lighter') | valueInt=integer 
;

FONTSTYLE:
	value=('normal' | 'italic' | 'oblique')
;

SIZE:
	unary_operator? (NUMBER|PERCENTAGE|EMS|EXS|LENGTH)
;

BLUR:
	'gaussian' | 'one-pass-box' | 'three-pass-box' | 'two-pass-box'
;

HEXCOLOR: '#' IDENT; //((hexdigit hexdigit hexdigit) | (hexdigit hexdigit hexdigit hexdigit hexdigit hexdigit));

//terminal digit:('0'..'9');
terminal integer:('0'..'9')+;
terminal real: (('0'..'9')*"."('0'..'9')+);
//terminal HEXCOLOR: '#' IDENT;

terminal IDENT: ('_' | 'a'..'z' | 'A'..'Z' ) ('_' | '-' | 'a'..'z' | 'A'..'Z' | '0..9' )*;
terminal COMMA: WS* ',' WS*;
terminal ML_COMMENT	: '/*' -> '*/';
terminal WS			: (' '|'\t'|'\r'|'\n')+;
terminal STRING	: 
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'";
