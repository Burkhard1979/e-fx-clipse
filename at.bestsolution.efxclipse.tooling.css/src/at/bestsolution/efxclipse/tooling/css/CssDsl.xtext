grammar at.bestsolution.efxclipse.tooling.css.CssDsl hidden(WS, ML_COMMENT)

/*
 * TODOS:
 * - add more CSS grammer like import 
 */

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate cssDsl "http://www.bestsolution.at/efxclipse/tooling/css/CssDsl"

stylesheet:
	( 
		ruleset+=ruleset |
		media+=media
	)*
;

media
  : 'media'medialist=media_list '{' rulesets+=ruleset* '}'
  ;

media_list
  : medium ( COMMA medium)*
  ;
medium
  : IDENT
  ;

ruleset:
	selectors+=selector ( COMMA selectors+=selector )* '{'
		(declarations+=css_declaration ';' )*
	'}'
;

selector hidden():
	simpleselectors+=simple_selector ( combinator=combinator selector=selector | WS+ ( combinator=combinator? selector=selector )? )?
;

simple_selector:
	(element=element_name id=css_id? class=css_class? attrib=css_attrib? pseudoclasses+=css_pseudo*)
	|
	(id=css_id class=css_class? attrib=css_attrib? pseudoclasses+=css_pseudo*)
	|
	(class=css_class attrib=css_attrib? pseudoclasses+=css_pseudo*)
	|
	pseudoclasses+=css_pseudo+
;

element_name:
	(hexdigits | IDENT)
;

css_class
  : '.' (hexdigits | IDENT)
  ;

css_id:
	'#' (hexdigits | IDENT)  
;

css_attrib:
	'[' (hexdigits | IDENT) ( ( '=' | INCLUDES | DASHMATCH ) ((hexdigits | IDENT) | STRING ) )? ']'
;

css_declaration:
	css_generic_declaration //| css_fx_declaration //| css_21_declaration
;

css_generic_declaration:
	property=css_property ':' expression=expr
;

css_property:
	('-')?IDENT
;

css_pseudo
  : ':' IDENT
  ;

combinator
  : '+'
  | '>'
  ;
  
operator
  : '/' | COMMA
  ;
  
unary_operator
  : '-' | '+'
  ;

expr hidden(WS,ML_COMMENT): termGroups+=termGroup ( operator termGroups+=termGroup )*
  ;

termGroup:
	terms+=term+
;

term
  :   number=numberTerm
  	| stringValue=STRING 
  	| identifier=css_property 
  	| url=URLType 
  	| function=function
  	| hexColor=HexColor
//  	| gradient=Gradient
//  	| pair=pair
;
  
//Gradient:
//	LinearGradient | RadialGradient 
//;
//
//LinearGradient:
//	IDENT '(' start=PointValue ')' IDENT '(' end=PointValue ')' IDENT ( '(' stops+=StopValue ')' )+ // ( ('repeat' | 'reflect') )?
//;
//
//RadialGradient:
//	IDENT ( '(' center=PointValue ')' COMMA )? radius=SizeType ( IDENT '(' focus=PointValue ')' ) IDENT ( '(' stops+=StopValue ')' )+ //( ( 'repeat' | 'reflect' ))?
//;
//
//StopValue:
//	pos=SizeType COMMA color=HexColor
//;
//
//PointValue:
//	x=SizeType COMMA y=SizeType
//;
//pair:
//	'(' expr1=expr COMMA expr2=expr ')'
//;

numberTerm:
	(unary_operator? 
    ( NUMBER | PERCENTAGE | LENGTH | EMS | EXS | ANGLE |
      TIME | FREQ ))
;
  
num:
	integer | real
;

function hidden():
	('-')?IDENT '(' WS* expr WS* ')'
;

HexColor:
	'#'(hexdigits|integer)
;

URLType hidden():
	'url' '(' url=STRING ')'
;

NUMBER: num;
PERCENTAGE: num'%';
EMS: num 'em';
EXS: num 'ex';
LENGTH: num  ('px' | 'cm' | 'mm' | 'in' | 'pt' | 'pc' ) ;

ANGLE: num ('deg' | 'rad' | 'grad' );
TIME: num ('ms'| 's' );
FREQ: num ('hz' | 'khz');

terminal integer:('0'..'9')+;
terminal real: (('0'..'9')*"."('0'..'9')+);
terminal hexdigits:('0'..'9'|'a'..'f' | 'A'..'F')+;

terminal IDENT: ('_' | 'a'..'z' | 'A'..'Z' ) ('_' | '-' | 'a'..'z' | 'A'..'Z' | '0..9' )*;
terminal COMMA: ',';
terminal ML_COMMENT	: '/*' -> '*/';
terminal WS			: (' '|'\t'|'\r'|'\n')+;
terminal STRING	: 
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'";
			
terminal INCLUDES: "~=";
terminal DASHMATCH: "|=";