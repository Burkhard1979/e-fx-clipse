grammar at.bestsolution.efxclipse.tooling.css.CssDsl hidden(WS, ML_COMMENT)

/*
 * TODOS:
 * - add more CSS grammer like import 
 */

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate cssDsl "http://www.bestsolution.at/efxclipse/tooling/css/CssDsl"

stylesheet:
	charset=charset?
	imports+=importExpression*
	( 
		ruleset+=ruleset |
		media+=media |
		page+=page
	)*
;

charset:
	('@charset'|'@CHARSET') charset=STRING ';'
;

importExpression:
	('@import'|'@IMPORT') value=STRING | URLType mediaList=media_list? ';'
;

page:
	{page} ('@page'|'@PAGE') pseudoPage=pseudo_page?
    '{' declarations+=css_declaration? ( ';' declarations+=css_declaration? )* '}'	
;

pseudo_page: 
	':' IDENT
;

media: 
	('@media'|'@MEDIA') medialist=media_list '{' rulesets+=ruleset* '}'
;

media_list: 
	medium ( COMMA medium)*
;

medium: 
	IDENT
;

ruleset:
	selectors+=selector ( COMMA selectors+=selector )* '{'
		(declarations+=css_declaration ';' )*
	'}'
;

selector hidden():
	simpleselectors+=simple_selector ( combinator=combinator selector=selector | WS+ combinator=combinator? selector=selector )?
;


simple_selector:
	((element = element_name | universal=css_universal) subSelectors+=sub_selector*)
	|
	subSelectors+=sub_selector+
;

element_name:
	(IDENT | ReservedWords)
;

sub_selector:
	id=css_id | class=css_class | attrib=css_attrib | pseudoclass=css_pseudo | negotation=css_negation
;

css_type_selector:
	( css_namespace_prefix )? element_name
;

css_namespace_prefix
  : ( IDENT | '*' )? '|'
  ;

css_universal: 
	( css_namespace_prefix )? '*'
;
  
css_class
  : '.' ( IDENT | ReservedWords )
  ;

css_id:
	HASH
;

css_attrib:
	'[' (IDENT | ReservedWords) ( ( '^=' | '$=' | '*=' | '=' | INCLUDES | DASHMATCH ) (( IDENT | ReservedWords ) | STRING ) )? ']'
;

css_declaration hidden(ML_COMMENT):
	WS* property=css_property WS* ':' valueTokens+=CssTok+ prio=css_prio?
;

css_prio:
	IMPORTANT_SYM
;

css_property:
	{css_property} name=ValidPropertyIdent
;

ValidPropertyIdent:
	('-')?(IDENT)
;

css_pseudo
  : ':' ':'? (IDENT | functional_pseudo)
;

css_negation:
	':' not=css_not negation_arg=css_negation_arg ')'
;

enum css_not:
	not='not('
;

css_negation_arg
  : css_type_selector | css_universal | HASH | css_class | css_attrib | css_pseudo
;

functional_pseudo:
	IDENT '(' function_expr ')'	
;

function_expr:
	( ( '+' | '-' | DIMENSION | NUMBER | STRING | IDENT ) )+	
;

DIMENSION:
 	PERCENTAGE | LENGTH | EMS | EXS | ANGLE | TIME | FREQ
;

combinator
  : 
  (
  	  '+'
  	| '>'
  	| '~'
  ) WS*
;
  
operator
  : '/' | COMMA
  ;
  
unary_operator
  : '-' | '+'
  ;

SymbolTok returns CssTok hidden(ML_COMMENT):
	{SymbolTok} symbol=COMMA
;

WSTok returns CssTok hidden(ML_COMMENT):
	{WSTok} WS
;

StringTok returns CssTok hidden(ML_COMMENT): 
	{StringTok} value=STRING
;

FuncTok returns CssTok hidden(ML_COMMENT):
	{FuncTok} func=function
;

NumberTok returns CssTok hidden(ML_COMMENT):
	{NumberTok} num=numberTerm
;

IdentifierTok returns CssTok hidden(ML_COMMENT):
	{IdentifierTok} id=ValidPropertyIdent
;

UrlTok returns CssTok hidden(ML_COMMENT):
	{UrlTok} url=URLType
;

ColorTok returns CssTok hidden(ML_COMMENT):
	{ColorTok} color=HASH
;

CssTok hidden(ML_COMMENT):
	SymbolTok |
	WSTok |
	StringTok |
	FuncTok |
	NumberTok |
	IdentifierTok |
	UrlTok |
	ColorTok
;

expr hidden(WS,ML_COMMENT): termGroups+=termGroup ( operator termGroups+=termGroup )*
  ;

termGroup:
	terms+=term+
;

term
  :   number=numberTerm
  	| stringValue=STRING 
  	| identifier=ValidPropertyIdent // this is only a string and not a ref to css_property, becaus it also matches enums :/
  	| url=URLType 
  	| function=function
  	| hexColor=HexColor
//  	| gradient=Gradient
//  	| pair=pair
;
  
//Gradient:
//	LinearGradient | RadialGradient 
//;
//
//LinearGradient:
//	IDENT '(' start=PointValue ')' IDENT '(' end=PointValue ')' IDENT ( '(' stops+=StopValue ')' )+ // ( ('repeat' | 'reflect') )?
//;
//
//RadialGradient:
//	IDENT ( '(' center=PointValue ')' COMMA )? radius=SizeType ( IDENT '(' focus=PointValue ')' ) IDENT ( '(' stops+=StopValue ')' )+ //( ( 'repeat' | 'reflect' ))?
//;
//
//StopValue:
//	pos=SizeType COMMA color=HexColor
//;
//
//PointValue:
//	x=SizeType COMMA y=SizeType
//;
//pair:
//	'(' expr1=expr COMMA expr2=expr ')'
//;

numberTerm hidden():
	(unary_operator? 
    ( NUMBER | PERCENTAGE | LENGTH | EMS | EXS | ANGLE |
      TIME | FREQ ))
;
  
num:
	INTEGER | REAL
;

function hidden():
	('-')?name=IDENT '(' params+=CssTok+/*expression=expr*/ ')'
;

HexColor hidden():
	HASH
;


URLType hidden():
	'url' '(' url=STRING ')'
;

NUMBER: num;
PERCENTAGE: num'%';
EMS: num 'em';
EXS: num 'ex';
LENGTH hidden(): num ('px' | 'cm' | 'mm' | 'in' | 'pt' | 'pc' ) ;

ANGLE: num ('deg' | 'rad' | 'grad' );
TIME: num ('ms'| 's' );
FREQ: num ('hz' | 'khz');

IMPORTANT_SYM:
	'!important'
;

ReservedWords:
	  'em' 
	| 'ex'
	| 'px' | 'cm' | 'mm' | 'in' | 'pt' | 'pc'
	| 'deg' | 'rad' | 'grad'
	| 'ms'| 's'
	| 'hz' | 'khz'
;

terminal INTEGER:('0'..'9')+;
terminal REAL: (('0'..'9')*"."('0'..'9')+);
terminal HASH: '#' ('_' | '-' | 'a'..'z' | 'A'..'Z' | '0'..'9' )+;

terminal IDENT: ('_' | 'a'..'z' | 'A'..'Z' ) ('_' | '-' | 'a'..'z' | 'A'..'Z' | '0'..'9' )*;
terminal COMMA: ',';
terminal ML_COMMENT	: '/*' -> '*/';
terminal WS			: (' '|'\t'|'\r'|'\n')+;
terminal STRING	: 
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'";
			
terminal INCLUDES: "~=";
terminal DASHMATCH: "|=";