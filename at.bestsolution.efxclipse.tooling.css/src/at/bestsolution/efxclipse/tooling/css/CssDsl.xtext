grammar at.bestsolution.efxclipse.tooling.css.CssDsl hidden(WS, ML_COMMENT)

/*
 * TODOS:
 * - should maybe remove -fx rules and add editing support through code?
 * - add more CSS grammer like import 
 */

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate cssDsl "http://www.bestsolution.at/efxclipse/tooling/css/CssDsl"

stylesheet:
	( 
		ruleset+=ruleset |
		media+=media
	)*
;

media
  : 'media'medialist=media_list '{' rulesets+=ruleset* '}'
  ;

media_list
  : medium ( COMMA medium)*
  ;
medium
  : IDENT
  ;

ruleset:
	selectors+=selector ( COMMA selectors+=selector )* '{'
		(declarations+=css_declaration ';' )*
	'}'
;

selector hidden():
	simpleselectors+=simple_selector ( combinator=combinator selector=selector | WS+ ( combinator=combinator? selector=selector )? )?
;

simple_selector:
	(element=element_name id=css_id? class=css_class? attrib=css_attrib? pseudoclasses+=css_pseudo*)
	|
	(id=css_id class=css_class? attrib=css_attrib? pseudoclasses+=css_pseudo*)
	|
	(class=css_class attrib=css_attrib? pseudoclasses+=css_pseudo*)
	|
	pseudoclasses+=css_pseudo+
;

element_name:
	IDENT
;

css_class
  : '.' IDENT
  ;

css_id:
	'#' (hexdigits | IDENT)  
;

css_attrib:
	'[' IDENT ( ( '=' | INCLUDES | DASHMATCH ) (IDENT | STRING ) )? ']'
;

css_declaration:
	css_generic_declaration | css_fx_declaration //| css_21_declaration
;

css_generic_declaration:
	property=css_property ':' expression=expr
;

css_property:
	IDENT
;

css_pseudo
  : ':' IDENT
  ;

combinator
  : '+'
  | '>'
  ;
  
operator
  : '/' | COMMA
  ;
  
unary_operator
  : '-' | '+'
  ;

expr
  : term ( operator? term )*
  ;
  
term
  : (unary_operator? 
    ( (NUMBER) | (PERCENTAGE) | (LENGTH) | (EMS) | (EXS) | (ANGLE) |
      (TIME) | (FREQ) ))
  | STRING | IDENT | URI | ('#' hexdigits) //| function
  ;
  
num:
	integer | real
;


//css_21_declaration:
//	// Chapter 8
//	  css_21_margin_property
//	| css_21_margins_property
//	
//	| css_21_padding_property
//	| css_21_paddings_property
//	
//	| css_21_borderwidth_property
//	| css_21_borderwidths_property
//	
//	| css_21_bordercolor_property
//	| css_21_bordercolors_property
//	
//	| css_21_borderstyle_property
//	| css_21_borderstyles_property
//	| css_21_border_property
//	
//	// Chapter 9
//	| css_21_display_property
//	| css_21_position_property
//	| css_21_boxoffset_property
//	| css_21_float_property
//	| css_21_clear_property
//	| css_21_zindex_property
//	| css_21_direction_property
//	| css_21_unicodebidi_property
//	
//	// Chapter 10
//	// Chapter 11
//	| css_21_overflow_property
//	| css_21_clip_property
//	| css_21_visibility_property
//	// Chapter 12
//	| css_21_content_property
//	| css_21_quotes_property
//	| css_21_counter_property
//	| css_21_list_style_type_prpoperty
//	| css_21_list_style_image_property
//	| css_21_list_style_position_property
//	| css_21_list_style
//	// Chapter 13
//	// Chapter 14
//	// Chapter 15
//	// Chapter 16
//	| css_21_text_ident_property
//	| css_21_text_align_property
//	| css_21_text_decoration_property
//	| css_21_letter_spacing_property
//	| css_21_wordspacing_property
//	| css_21_text_transform_property
//	| css_21_whitespace_property
//	// Chapter 17
//	| css_21_caption_side_property
//	| css_21_table_layout_property
//	| css_21_border_collapse_property
//	| css_21_border_spacing_property
//	| css_21_empty_cells_property
//	// Chapter 18
//;
//
//css_21_margin_property:
//	property=(
//		  'margin-top' | 'margin-right'| 'margin-bottom' | 'margin-left'
//	) ':' value=(vt_margin_width | 'inherited' )
//;
//
//vt_margin_width:
//	(unary_operator? (LENGTH | PERCENTAGE) ) | 'auto' 
//;
//
//css_21_margins_property:
//	property=(
//		'margin'
//	) ':' values+=vt_margin_width ( values+=vt_margin_width values+=vt_margin_width values+=vt_margin_width )?
//;
//
//css_21_padding_property:
//	property=(
//		  'padding-top' | 'padding-right' | 'padding-bottom' | 'padding-left'
//	) ':' value=vt_padding_width
//;
//
//css_21_paddings_property:
//	property=(
//		'padding'
//	) ':' values+=vt_padding_width ( values+=vt_padding_width values+=vt_padding_width values+=vt_padding_width )?
//;
//
//vt_padding_width:
//	unary_operator? (LENGTH | PERCENTAGE)
//;
//
//css_21_borderwidth_property:
//	property=(
//		'border-top-width' | 'border-right-width' | 'border-bottom-width'| 'border-left-width'
//	) ':' value=vt_border_width
//;
//
//css_21_borderwidths_property:
//	property=(
//		'border-width'
//	) ':' values+=vt_border_width ( values+=vt_border_width values+=vt_border_width values+=vt_border_width )?
//;
//
//
//vt_border_width:
//	'thin' | 'medium' | 'thick' | (unary_operator? LENGTH)
//;
//
//
//css_21_bordercolor_property:
//	property=(
//		'border-top-color' | 'border-right-color' | 'border-bottom-color' | 'border-left-color' 
//	) ':' value=Color
//;
//
//css_21_bordercolors_property:
//	property=(
//		'border-color'
//	) ':' values+=Color ( values+=Color values+=Color values+=Color )?
//;
//
//css_21_borderstyle_property:
//	property=(
//		'border-top-style' | 'border-right-style' |'border-bottom-style' | 'border-left-style'
//	) ':' value=vt_border_style
//;
//
//css_21_borderstyles_property:
//	property=(
//		'border-style'
//	) ':' values+=vt_border_style ( values+=vt_border_style values+=vt_border_style values+=vt_border_style )?
//;
//
//vt_border_style:
//	'none' | 'hidden' | 'dotted' | 'dashed' | 'solid' | 'double' | 'groove' | 'ridge' | 'inset' | 'outset' 
//;
//
//css_21_border_property:
//	property=(
//		'border-top' | 'border-right' | 'border-bottom' | 'border-left' | 'border'
//	) ':' width=vt_border_width style=vt_border_style color=Color
//;
//
//css_21_display_property:
//	property=(
//		'display'
//	) ':' value=vt_display
//;
//
//vt_display:
//	'inline' | 'block' | 'list-item' | 'inline-block' | 'table' | 'inline-table' | 'table-row-group' | 'table-header-group' | 'table-footer-group' | 'table-row' | 'table-column-group' | 'table-column' | 'table-cell' | 'table-caption' | 'none' | 'inherit'
//;
//
//css_21_position_property:
//	property=(
//		'position'
//	) ':' value=vt_position
//;
//
//vt_position:
//	'static' | 'relative' | 'absolute' | 'fixed'
//;
//
//css_21_boxoffset_property:
//	property=(
//		'top' | 'right' | 'bottom' | 'left'
//	) ':' value=vt_boxoffset
//;
//
//vt_boxoffset:
//	(unary_operator? (LENGTH | PERCENTAGE) ) | 'auto' | 'inherit'
//;
//
//css_21_float_property:
//	property=(
//		'float'
//	) ':' value=vt_float
//;
//
//vt_float:
//	'left' | 'right' | 'none' | 'inherit'
//;
//
//css_21_clear_property:
//	property=(
//		'clear'
//	) ':' value=vt_clear
//;
//
//vt_clear:
//	'none' | 'left' | 'right' | 'both' | 'inherit'
//;
//
//css_21_zindex_property:
//	property=(
//		'z-index'
//	) ':' value=('auto'|integer|'inherit')
//;
//
//css_21_direction_property:
//	property=(
//		'direction'
//	) ':' value=('ltr' | 'rtl' | 'inherit')
//;
//
//css_21_unicodebidi_property:
//	property=(
//		'unicode-bidi'
//	) ':' value=('normal' | 'embed' | 'bidi-override' | 'inherit')
//;
//
//css_21_overflow_property:
//	property=(
//		'overflow'
//	) ':' value=('visible' | 'hidden' | 'scroll' | 'auto' | 'inherit')
//;
//
//css_21_clip_property:
//	property=(
//		'clip'
//	) ':' (shape=css_21_shape | value=('auto' | 'inherit')) 
//;
//
//css_21_shape:
//	'rect' '(' top=LENGTH COMMA right=LENGTH COMMA bottom=LENGTH COMMA left=LENGTH ')'
//;
//
//css_21_visibility_property:
//	property=(
//		'visibility'
//	) ':' value=('visible' | 'hidden' | 'collapse' | 'inherit')
//;
//
//
//css_21_content_property:
//	property=(
//		'content'
//	) ':' ( value=('normal' | 'none' | 'inherit') | values+=(STRING|URI|vt_counter|vt_attr|'open-quote'|'close-quote'|'no-open-quote'|'no-close-quote') )
//;
//
//vt_counter:
//	'counter(' IDENT (COMMA IDENT)? ')'
//;
//
//vt_attr:
//	'attr(' IDENT ')'
//;
//
//css_21_quotes_property:
//	property=(
//		'quotes'
//	) ':' ((pairValues+=STRING pairValues+=STRING ) | value=('none' | 'inherit'))
//;
//
//
//css_21_counter_property:
//	property=(
//		'counter-reset' | 'counter-increment'
//	) ':' ( pairValues+=vt_reset | value=('none' | 'inherit') )
//;
//
//vt_reset:
//	IDENT integer?
//;
//
//css_21_list_style_type_prpoperty:
//	property=(
//		'list-style-type'
//	) ':' value=vt_list_style_type
//;
//
//vt_list_style_type:
//	'disc' | 'circle' | 'square' | 'decimal' | 'decimal-leading-zero' | 'lower-roman' | 'upper-roman' | 'lower-greek' | 'lower-latin' | 'upper-latin' | 'armenian' | 'georgian' | 'lower-alpha' | 'upper-alpha' | 'none' | 'inherit'
//;
//
//css_21_list_style_image_property:
//	property=(
//		'list-style-image'
//	) ':' value=vt_list_style_image
//;
//
//vt_list_style_image:
//	URI|'none'|'inherit'
//;
//
//css_21_list_style_position_property:
//	property=(
//		'list-style-position'
//	) ':' value=vt_list_style_position
//;
//
//vt_list_style_position:
//	'inside' | 'outside' | 'inherit'
//;
//
//
//css_21_list_style:
//	property=(
//		'list-style'
//	) ':' ((type=vt_list_style_type position=vt_list_style_position image=vt_list_style_image) | value='inherit')
//;
//
//css_21_text_ident_property:
//	property=(
//		'text-indet'
//	) ':' value=vt_text_ident
//;
//
//vt_text_ident:
//	(unary_operator? (LENGTH | PERCENTAGE) ) | 'inherit'
//;
//
//css_21_text_align_property:
//	property=(
//		'text-align'
//	) ':' value=('left' | 'right' | 'center' | 'justify' | 'inherit')
//;
//
//css_21_text_decoration_property:
//	property=(
//		'text-decoration'
//	) ':' value=('none' | 'underline' | 'overline' | 'line-through' | 'blink' | 'inherit')
//;
//
//css_21_letter_spacing_property:
//	property=(
//		'letter-spacing'
//	) ':' value=vt_letter_spacing
//;
//
//vt_letter_spacing:
//	'normal' | LENGTH | 'inherit'
//;
//
//css_21_wordspacing_property:
//	property=(
//		'word-spacing'
//	) ':' value=vt_word_spacing
//;
//
//vt_word_spacing:
//	'normal' | LENGTH | 'inherit'
//;
//
//css_21_text_transform_property:
//	property=(
//		'text-transform'
//	) ':' value=('capitalize' | 'uppercase' | 'lowercase' | 'none' | 'inherit')
//;
//
//css_21_whitespace_property:
//	property=(
//		'white-space'
//	) ':' value=('normal' | 'pre' | 'nowrap' | 'pre-wrap' | 'pre-line' | 'inherit')
//;
//
//css_21_caption_side_property:
//	property=(
//		'caption-side'
//	) ':' value=('top' | 'bottom' | 'inherit')
//;
//
//css_21_table_layout_property:
//	property=(
//		'table-layout'
//	) ':' value=('auto' | 'fixed' | 'inherit' )
//;
//
//css_21_border_collapse_property:
//	property=(
//		'border-collapse'
//	) ':' value=('collapse' | 'separate' | 'inherit' )
//;
//
//css_21_border_spacing_property:
//	property=(
//		'border-spacing'
//	) ':' ((lengths+=LENGTH (lengths+=LENGTH)? ) | value='inherit')
//;
//
//css_21_empty_cells_property:
//	property=(
//		'empty-cells'
//	) ':' value=('show' | 'hide' | 'inherit')
//;

css_fx_declaration:
	  fx_font_property 
	| fx_font_family_property 
	| fx_font_size_property
	| fx_font_style_property
	| fx_font_weight_property
	| fx_cursor_property
	| fx_effect_property
	| fx_boolean_property
	| fx_size_property
	| fx_number_property
	| fx_integer_property
	| fx_paint_property
	| fx_blend_property
	| fx_url_property
	| fx_paint_properties
	| fx_multisize_properties
	| fx_hposition_property
	| fx_vposition_property
	| fx_side_property
	| fx_bar_policy_property
	| fx_url_properties
	| fx_repeat_properties
	| fx_multisize_property
	| fx_size_properties
	| fx_stroke_line_cap_property
	| fx_stroke_line_join_property
	| fx_alignment_property
	| fx_text_origin_property
	| fx_position_property
	| fx_background_image_size_property
	| fx_border_style_property
	| fx_border_image_slice_property
	| fx_text_overrun_property
	| fx_insets_property
	| fx_number_properties
	| fx_multi_paint_properties
	| fx_color_property
	| fx_string_property	
;

fx_font_property:
	property=(
		'-fx-font' | '-fx-title-font' | '-fx-pie-label-font' | '-fx-pie-value-label-font' 
		| '-fx-label-font' | '-fx-tick-label-font'
	) ':' value=FONT
;

/*enum FxFontLiterals:
	fxFont='-fx-font' | fxTitleFont='-fx-title-font' | fxPieLabelFont='-fx-pie-label-font' | fxPieValueLabelFont='-fx-pie-value-label-font' 
		| fxLabelFont='-fx-label-font' | fxTickLabelFont='-fx-tick-label-font'
;*/

fx_font_family_property:
	property=(
		'-fx-font-family' | '-fx-title-font-family' | '-fx-pie-label-font-family' | '-fx-pie-value-label-font-family' 
		| '-fx-label-font-family' | '-fx-tick-label-font-family'
	) ':' value=FONTFAMILY
;

fx_font_size_property:
	property=(
		'-fx-font-size' | '-fx-title-font-size' | '-fx-pie-label-font-size' | '-fx-pie-value-label-font-size' 
		| '-fx-label-font-size' | '-fx-tick-label-font-size'
		) ':' value=SIZE
;

fx_font_style_property:
	property=(
		'-fx-font-style' | '-fx-title-font-style' | '-fx-pie-label-font-style' | '-fx-pie-value-label-font-style' 
		| '-fx-label-font-style' | '-fx-tick-label-font-style'
	) ':' value=FONTSTYLE
;

fx_font_weight_property:
	property=(
		'-fx-font-weight' | '-fx-title-font-weight' | '-fx-pie-label-font-weight' | '-fx-pie-value-label-font-weight' 
		| '-fx-label-font-weight' | '-fx-tick-label-font-weight'
	) ':' value=FONTWEIGHT
;

fx_cursor_property:
	property=(
		'-fx-cursor'
	) ':' value=( 'crosshair' | 'default' | 'hand' | 'move' | 'e-resize' | 'h-resize' | 'ne-resize' | 'nw-resize' | 'n-resize' | 'se-resize' | 'sw-resize' | 's-resize' | 'w-resize' | 'v-resize' | 'text' | 'wait' )
;

fx_effect_property:
	'-fx-effect' ':' value=Effect
;

fx_boolean_property:
	property=( 
		'-fx-focus-traversable' | '-fx-pannable' | '-fx-hgap' | '-fx-vpos' | '-fx-snap-to-pixel' | '-fx-vertical' | '-fx-smooth' | '-fx-strikethrough' | '-fx-underline' | '-fx-scale-shape' | '-fx-vertical-zero-line-visible' | '-fx-vertical-grid-line-visible' | '-fx-horizontal-zero-line-visible'
		| '-fx-horizontal-grid-line-visible' | '-fx-pie-value-visible' | '-fx-pie-to-label-line-curved' | '-fx-pie-label-visible' | '-fx-clockwise'
		| '-fx-show-symbols' | '-fx-legend-visible' | '-fx-scale-bubble-radius-using-axis' | '-fx-select-on-focus' | '-fx-editable'
		| '-fx-snap-to-ticks' | '-fx-show-tick-marks' | '-fx-show-tick-labels' | '-fx-fit-to-width' | '-fx-minor-tick-visible'
		| '-fx-gap-start-and-end' | '-fx-tick-mark-visible' | '-fx-tick-labels-visible' | '-fx-fit-to-height'
		| '-fx-click-to-position' | '-fx-text-wrap' | '-fx-position-shape'
	) ':' value=('true'|'false')
;

fx_size_property:
	property=(
		'-fx-spacing' | '-fx-arc-height' | '-fx-arc-width' | '-fx-minor-tick-length'
		| '-fx-stroke-width' | '-fx-start-margin' | '-fx-end-margin' | '-fx-tick-mark-stroke-width'
		| '-fx-tick-mark-length' | '-fx-tick-label-tick-gap' | '-fx-axis-stroke-width' | '-fx-label-tick-gap'
		| '-fx-vertical-grid-line-stroke-width' | '-fx-plot-background-stroke-width' | '-fx-horizontal-grid-line-stroke-width'
		| '-fx-pie-thickness' | '-fx-pie-stroke-width' | '-fx-title-gap' | '-fx-legend-gap' | '-fx-hover-stroke-width'
		| '-fx-chart-background-stroke-width' | '-fx-offset-y' | '-fx-offset-x' | '-fx-category-gap'
		| '-fx-bar-gap' | '-fx-graphic-text-gap' | '-fx-tab-spacing'
		) ':' value=SIZE
;

fx_number_property:
	property=(
		'-fx-rotate' | '-fx-scale-x' | '-fx-scale-y' | '-fx-scale-z' | '-fx-translate-x'
		| '-fx-translate-y' | '-fx-translate-z' | '-fx-vgap' | '-fx-tile-height' | '-fx-tile-width'
		| '-fx-stroke-dash-offset' | '-fx-stroke-miter-limit' | '-fx-block-increment'
		| '-fx-unit-increment' | '-fx-major-tick-unit' | '-fx-data-opacity'
		| '-fx-radius-scale' | '-fx-pie-to-label-line-one-length' | '-fx-pie-to-label-line-stroke-width'
		| '-fx-pie-to-label-line-two-length' | '-fx-start-angle' | '-fx-tick-unit' | '-fx-indent'
	) ':' value=NUMBER
;

fx_integer_property:
	property=(
		'-fx-columns' | '-fx-rows' | '-fx-lines' | '-fx-minor-tick-count'
	) ':' value=integer
;

fx_paint_property:
	property=(
		'-fx-fill' | '-fx-stroke' | '-fx-text-fill' | '-fx-bar-fill' | '-fx-bar-stroke' | '-fx-bottom-shelf-fill'
		| '-fx-bottom-shelf-stroke' | '-fx-side-shelf-fill' | '-fx-side-shelf-stroke' | '-fx-zero-shelf-fill'
		| '-fx-zero-shelf-stroke' | '-fx-chart-background-fill' | '-fx-chart-background-stroke'
		| '-fx-hover-stroke' | '-fx-title-fill' | '-fx-pie-label-fill' | '-fx-pie-stroke'
		| '-fx-pie-to-label-line-stroke' | '-fx-pie-value-label-fill' | '-fx-horizontal-alternate-row-fill'
		| '-fx-plot-background-fill' | '-fx-horizontal-grid-line-stroke' | '-fx-plot-background-stroke'
		| '-fx-vertical-alternate-row-fill' | '-fx-vertical-grid-line-stroke' | '-fx-axis-stroke'
		| '-fx-tick-label-fill' | '-fx-label-fill' | '-fx-tick-mark-stroke' | '-fx-hover-fill'
		
	) ':' value=Paint
;

fx_blend_property:
	property=(
		'-fx-blend-mode'
	) ':' value=( 'add' | 'blue' | 'color-burn' | 'color-dodge' | 'darken' | 'difference' | 'exclusion' | 'green' | 'hard-light' | 'lighten' | 'multiply' | 'overlay' | 'red' | 'screen' | 'soft-light' | 'src-atop' | 'src-in' | 'src-out' | 'src-over' )
;

fx_url_property:
	property=(
		'-fx-image' | '-fx-graphic' | '-fx-border-image-source'
	) ':' value=URLType
;

fx_paint_properties:
	property=(
		'-fx-background-color'
	) ':' (((values+=Paint) (COMMA values+=Paint)*) | 'null')
;

fx_multisize_properties:
	property=(
		'-fx-background-insets' | '-fx-background-radius' | '-fx-border-insets' | '-fx-border-radius'
		| '-fx-border-width' | '-fx-border-image-insets' | '-fx-border-image-width'
	) ':' values+=Dim4Size ( COMMA values+=Dim4Size )*
;

fx_hposition_property:
	property=(
		'-fx-hpos' | '-fx-node-hpos' | '-fx-graphic-hpos'
	) ':' value=HPosition
;

fx_vposition_property:
	property=(
		'-fx-vpos' | '-fx-node-vpos' | '-fx-graphic-vpos'
	) ':' value=VPosition
;

fx_side_property:
	property=(
		'-fx-legend-side' | '-fx-title-side' | '-fx-side'
	) ':' value=( 'top' | 'bottom' | 'left' | 'right' )
;

fx_bar_policy_property:
	property=(
		'-fx-hbar-policy' | '-fx-vbar-policy'
	) ':' value=( 'never' | 'always' | 'as_needed' )
;

fx_url_properties:
	property=(
		'-fx-background-image' | '-fx-border-image'
	) ':' values+=URLType ( COMMA values+=URLType )*
;

fx_repeat_properties:
	property=(
		'-fx-background-image-repeat' | '-fx-border-image-repeat' | '-fx-background-repeat'
	) ':' values+=RepeatStyle (COMMA values+=RepeatStyle)*
;

fx_multisize_property:
	property=(
		'-fx-padding'
	) ':' value=Dim4Size
;

fx_size_properties:
	property=(
		'-fx-stroke-dash-array'
	) ':' values+=SIZE
;

fx_stroke_line_cap_property:
	property=(
		'-fx-stroke-line-cap' 
	) ':' value=('square' | 'butt' | 'round')
;

fx_stroke_line_join_property:
	property=(
		'-fx-stroke-line-join' 
	) ':' value=( 'miter' | 'bevel' | 'round' )
;

fx_alignment_property:
	property = (
		'-fx-text-alignment' | '-fx-alignment'
	) ':' value=('left' | 'center' | 'right' | 'justify')
;

fx_text_origin_property:
	property=(
		'-fx-text-origin' 
	) ':' value=('baseline' | 'top' | 'bottom')
;

fx_position_property:
	property=(
		'-fx-background-image-position' | '-fx-background-position'
	) ':' values+=BgPosition (COMMA values+=BgPosition)*
;

fx_background_image_size_property:
	property=(
		'-fx-background-image-size' 
	) ':' values+=BgSize (COMMA values+=BgSize)*
;

fx_border_style_property:
	property=(
		'-fx-border-style' 
	) ':' values+=BorderStyle (COMMA values+=BorderStyle)*
;

fx_border_image_slice_property:
	property=(
		'-fx-border-image-slice' 
	) ':' values+=SizeFill (COMMA values+=SizeFill)*
;

fx_text_overrun_property:
	property=(
		'-fx-text-overrun'
	) ':' value=( 'center-ellipses' | 'center-word-ellipses' | 'clip' | 'ellipses' | 'leading-ellipses' | 'leading-word-ellipses' | 'word-ellipses' )
;

fx_insets_property:
	property=(
		'-fx-insets'
	) ':' value+=NUMBER | ( value+=NUMBER value+=NUMBER value+=NUMBER value+=NUMBER )
;

fx_number_properties:
	property=(
		'-fx-horizontal-grid-line-stroke-dash-array' | '-fx-vertical-grid-line-stroke-dash-array'
	) ':' value+=NUMBER+
;

fx_multi_paint_properties:
	property=(
		'-fx-border-color'
	) ':' ((values+=MultiPaint (COMMA values+=MultiPaint)*) | 'null')	
;

fx_string_property:
	property=(
		'-fx-skin' | '-fx-shape' | '-fx-text' | '-fx-echo-char'
	) ':' ( value=STRING | 'null' )
;

Effect:
	EffectDropShadow | EffectInnerShadow
;

EffectDropShadow:
	'dropshadow' '(' blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA spread=NUMBER COMMA offsetX=NUMBER COMMA offsetY=NUMBER ')'
;


EffectInnerShadow:
	'innershadow' '(' blur=BLUR COMMA color=Color COMMA blurRadius=NUMBER COMMA choke=NUMBER COMMA offsetX=NUMBER COMMA offsetY=NUMBER ')'
;

MultiPaint:
	values+=Paint (values+=Paint)*
	// values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue
	// values+=PaintValue // | (values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
	// (values+=PaintValue | values+=PaintValue values+=PaintValue values+=PaintValue values+=PaintValue)
;

Paint:
	LinearGradient | RadialGradient | Color
;


LinearGradient:
	'linear' '(' start=PointValue ')' 'to' '(' end=PointValue ')' 'stops' ( '(' stops+=StopValue ')' )+ ( ('repeat' | 'reflect') )?
;

RadialGradient:
	'radial' ( '(' center=PointValue ')' COMMA )? radius=SizeType ( 'focus' '(' focus=PointValue ')' ) 'stops' ( '(' stops+=StopValue ')' )+ ( ( 'repeat' | 'reflect' ))?
;

StopValue:
	pos=SizeType COMMA color=Color
;

PointValue:
	x=SizeType COMMA y=SizeType
;

enum HPosition:
	left | center | right | leading | trailing
;

VPosition:
	'top' | 'center' | 'baseline' | 'bottom' | 'page-end' | 'page-start'
;

RepeatStyle:
	v = ('repeat-x' | 'repeat-y') | (  v=('repeat' | 'space' | 'round' | 'no-repeat' | 'stretch') (v2=('repeat' | 'space' | 'round' | 'no-repeat'| 'stretch'))?)
;

Dim4Size:
	( values+=SIZE | (values+=SIZE values+=SIZE values+=SIZE values+=SIZE) )
;

BgPosition:
	(
		( absx=SIZE | relx=('left' | 'center' | 'right') ) ( absy=SIZE | rely=('top' | 'center' | 'bottom') )
	)
//	|
//	(
//		( center | ( left | right ) SizeValue? ) | ( center | ( top | bottom ) SizeValue? )
//	)
;

fx_color_property:
	property=COLOR_PROPERTIES ':' value=Color
;

BgSize:
	( ( xsize=(SIZE | 'auto') ) ( ysize=(SIZE | 'auto') )? ) | predefined=('cover' | 'contain')
;

BorderStyle:
	dashStyle=('none' | 'solid' | 'dotted' | 'dashed') location=('centered' | 'inside' | 'outside')? ('line-join' ('miter' miterAbs=NUMBER | miterPredefined=('bevel' | 'round') ))? ('line-cap' lineCap=('square' | 'butt' | 'round'))?
;

SizeFill:
	value=Dim4Size fill='fill'?
;

Color:
	NamedColor |
	LookedUpColor |
	RGBColor |
	HSBColor |
	ColorFunction
;

COLOR_PROPERTIES:
	'-fx-color' | '-fx-light-text-color' | '-fx-accent' | '-fx-selection-bar' | '-fx-selection-bar-text' | '-fx-background'
;

LookedUpColor:
	value=( COLOR_PROPERTIES | IDENT ) 
;

NamedColor:
	value = (
		'aliceblue'      | 'antiquewhite'     | 'aqua'                | 'aquamarine'      | 
		'azure'          | 'beige'            | 'bisque'              | 'black'           | 
		'blanchedalmond' | 'blue'             | 'blueviolet'          | 'brown'           | 
		'burlywood'      | 'cadetblue'        | 'chartreuse'          | 'chocolate'       | 
		'coral'          | 'cornflowerblue'   | 'cornsilk'            | 'crimson'         | 
		'cyan'           | 'darkblue'         | 'darkcyan'            | 'darkgoldenrod'   | 
		'darkgray'       | 'darkgreen'        | 'darkgrey'            | 'darkkhaki'       | 
		'darkmagenta'    | 'darkolivegreen'   | 'darkorange'          | 'darkorchid'      | 
		'darkred'        | 'darksalmon'       | 'darkseagreen'        | 'darkslateblue'   | 
		'darkslategray'  | 'darkslategrey'    | 'darkturquoise'       | 'darkviolet'      | 
		'deeppink'       | 'deepskyblue'      | 'dimgray'             | 'dimgrey'         | 
		'dodgerblue'     | 'firebrick'        | 'floralwhite'         | 'forestgreen'     | 
		'fuchsia'        | 'gainsboro'        | 'ghostwhite'          | 'gold'            | 
		'goldenrod'      | 'gray'             | 'green'               | 'greenyellow'     | 
		'grey'           | 'honeydew'         | 'hotpink'             | 'indianred'       | 
		'indigo'         | 'ivory'            | 'khaki'               | 'lavender'        | 
		'lavenderblush'  | 'lawngreen'        | 'lemonchiffon'        | 'lightblue'       | 
		'lightcoral'     | 'lightcyan'        | 'lightgoldenrodyellow'| 'lightgray'       | 
		'lightgreen'     | 'lightgrey'        | 'lightpink'           | 'lightsalmon'     | 
		'lightseagreen'  | 'lightskyblue'     | 'lightslategray'      | 'lightslategrey'  | 
		'lightsteelblue' | 'lightyellow'      | 'lime'                | 'limegreen'       | 
		'linen'          | 'magenta'          | 'maroon'              | 'mediumaquamarine'| 
		'mediumblue'     | 'mediumorchid'     | 'mediumpurple'        | 'mediumseagreen'  | 
		'mediumslateblue'| 'mediumspringgreen'| 'mediumturquoise'     | 'mediumvioletred' | 
		'midnightblue'   | 'mintcream'        | 'mistyrose'           | 'moccasin'        | 
		'navajowhite'    | 'navy'             | 'oldlace'             | 'olive'           | 
		'olivedrab'      | 'orange'           | 'orangered'           | 'orchid'          | 
		'palegoldenrod'  | 'palegreen'        | 'paleturquoise'       | 'palevioletred'   | 
		'papayawhip'     | 'peachpuff'        | 'peru'                | 'pink'            | 
		'plum'           | 'powderblue'       | 'purple'              | 'red'             | 
		'rosybrown'      | 'royalblue'        | 'saddlebrown'         | 'salmon'          | 
		'sandybrown'     | 'seagreen'         | 'seashell'            | 'sienna'          | 
		'silver'         | 'skyblue'          | 'slateblue'           | 'slategray'       | 
		'slategrey'      | 'snow'             | 'springgreen'         | 'steelblue'       | 
		'tan'            | 'teal'             | 'thistle'             | 'tomato'          | 
		'turquoise'      | 'violet'           | 'wheat'               | 'white'           | 
		'whitesmoke'     | 'yellow'           | 'yellowgreen'         | 'transparent'     
	)
;

RGBColor:
	hexcolor=HexColor
	|
	('rgb' '(' r=integer COMMA g=integer COMMA b=integer ')' )
	|
	('rgb' '(' rp=integer '%' COMMA gp=integer '%' COMMA bp=integer '%' ')' )
	|
	('rgba' '(' r=integer COMMA g=integer COMMA b=integer COMMA alpha=NUMBER ')' )
	|
	('rgba' '(' rp=integer '%' COMMA gp=integer '%' COMMA bp=integer '%' COMMA alpha=NUMBER ')' )
;

HSBColor:
	('hsb' '(' hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE ')')
	|
	('hsba' '(' hue=NUMBER COMMA saturation=PERCENTAGE COMMA brightness=PERCENTAGE COMMA alpha=NUMBER ')')
;

ColorFunction:
	( 'derive' '(' orig=Color COMMA mod=unary_operator? PERCENTAGE ')' )
	|
	( 'ladder' '(' orig=Color ')' 'stops' ( '(' stopNumbers+=NUMBER COMMA stopColors+=Color ')' )+ )
;

HexColor:
	'#'(hexdigits|integer)
;
URI:
	'url' '(' STRING ')'
;

URLType:
	'url' '(' url=STRING ')'
;

NUMBER: num;
PERCENTAGE: num'%';
//SIGNED_PERCENTAGE: unary_operator? PERCENTAGE;
EMS: num 'em';
EXS: num 'ex';
LENGTH: num  ('px' | 'cm' | 'mm' | 'in' | 'pt' | 'pc' ) ;
//SIGNED_LENGTH: unary_operator? LENGTH;

ANGLE: num ('deg' | 'rad' | 'grad' );
TIME: num ('ms'| 's' );
FREQ: num ('hz' | 'khz');

FONT:
	( (styleOrWeightString=('italic' | 'oblique' | 'normal' | 'bold' | 'bolder' | 'lighter') | weight=num))? size=SIZE family=FONTFAMILY
;

FONTFAMILY:
	STRING
;

FONTWEIGHT:
	valueString=('normal' | 'bold' | 'bolder' | 'lighter') | valueInt=integer 
;

FONTSTYLE:
	value=('normal' | 'italic' | 'oblique')
;

SIZE:
	unary_operator? (NUMBER|PERCENTAGE|EMS|EXS|LENGTH)
;

SizeType:
	value=SIZE
;

BLUR:
	'gaussian' | 'one-pass-box' | 'three-pass-box' | 'two-pass-box'
;

terminal integer:('0'..'9')+;
terminal real: (('0'..'9')*"."('0'..'9')+);
terminal hexdigits:('0'..'9'|'a'..'f' | 'A'..'F')+;

terminal IDENT: ('_' | 'a'..'z' | 'A'..'Z' ) ('_' | '-' | 'a'..'z' | 'A'..'Z' | '0..9' )*;
terminal COMMA: ',';
terminal ML_COMMENT	: '/*' -> '*/';
terminal WS			: (' '|'\t'|'\r'|'\n')+;
terminal STRING	: 
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'";
			
terminal INCLUDES: "~=";
terminal DASHMATCH: "|=";