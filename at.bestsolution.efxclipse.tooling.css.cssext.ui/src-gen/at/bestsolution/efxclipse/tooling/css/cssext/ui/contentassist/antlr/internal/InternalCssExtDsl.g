/*
* generated by Xtext
*/
grammar InternalCssExtDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package at.bestsolution.efxclipse.tooling.css.cssext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.bestsolution.efxclipse.tooling.css.cssext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.bestsolution.efxclipse.tooling.css.cssext.services.CssExtDslGrammarAccess;

}

@parser::members {
 
 	private CssExtDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CssExtDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCssExtension
entryRuleCssExtension 
:
{ before(grammarAccess.getCssExtensionRule()); }
	 ruleCssExtension
{ after(grammarAccess.getCssExtensionRule()); } 
	 EOF 
;

// Rule CssExtension
ruleCssExtension
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCssExtensionAccess().getGroup()); }
(rule__CssExtension__Group__0)
{ after(grammarAccess.getCssExtensionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard 
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
(rule__QualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDefinition
entryRulePackageDefinition 
:
{ before(grammarAccess.getPackageDefinitionRule()); }
	 rulePackageDefinition
{ after(grammarAccess.getPackageDefinitionRule()); } 
	 EOF 
;

// Rule PackageDefinition
rulePackageDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDefinitionAccess().getGroup()); }
(rule__PackageDefinition__Group__0)
{ after(grammarAccess.getPackageDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoku
entryRuleDoku 
:
{ before(grammarAccess.getDokuRule()); }
	 ruleDoku
{ after(grammarAccess.getDokuRule()); } 
	 EOF 
;

// Rule Doku
ruleDoku
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDokuAccess().getContentAssignment()); }
(rule__Doku__ContentAssignment)
{ after(grammarAccess.getDokuAccess().getContentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSBaseType
entryRuleCSSBaseType 
:
{ before(grammarAccess.getCSSBaseTypeRule()); }
	 ruleCSSBaseType
{ after(grammarAccess.getCSSBaseTypeRule()); } 
	 EOF 
;

// Rule CSSBaseType
ruleCSSBaseType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSBaseTypeAccess().getAlternatives()); }
(rule__CSSBaseType__Alternatives)
{ after(grammarAccess.getCSSBaseTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementDeclartion
entryRuleElementDeclartion 
:
{ before(grammarAccess.getElementDeclartionRule()); }
	 ruleElementDeclartion
{ after(grammarAccess.getElementDeclartionRule()); } 
	 EOF 
;

// Rule ElementDeclartion
ruleElementDeclartion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementDeclartionAccess().getGroup()); }
(rule__ElementDeclartion__Group__0)
{ after(grammarAccess.getElementDeclartionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition 
:
{ before(grammarAccess.getPropertyDefinitionRule()); }
	 rulePropertyDefinition
{ after(grammarAccess.getPropertyDefinitionRule()); } 
	 EOF 
;

// Rule PropertyDefinition
rulePropertyDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getGroup()); }
(rule__PropertyDefinition__Group__0)
{ after(grammarAccess.getPropertyDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePseudoClassDefinition
entryRulePseudoClassDefinition 
:
{ before(grammarAccess.getPseudoClassDefinitionRule()); }
	 rulePseudoClassDefinition
{ after(grammarAccess.getPseudoClassDefinitionRule()); } 
	 EOF 
;

// Rule PseudoClassDefinition
rulePseudoClassDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudoClassDefinitionAccess().getGroup()); }
(rule__PseudoClassDefinition__Group__0)
{ after(grammarAccess.getPseudoClassDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRuleId
entryRuleCSSRuleId 
:
{ before(grammarAccess.getCSSRuleIdRule()); }
	 ruleCSSRuleId
{ after(grammarAccess.getCSSRuleIdRule()); } 
	 EOF 
;

// Rule CSSRuleId
ruleCSSRuleId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRuleIdAccess().getNameAssignment()); }
(rule__CSSRuleId__NameAssignment)
{ after(grammarAccess.getCSSRuleIdAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRuleRef
entryRuleCSSRuleRef 
:
{ before(grammarAccess.getCSSRuleRefRule()); }
	 ruleCSSRuleRef
{ after(grammarAccess.getCSSRuleRefRule()); } 
	 EOF 
;

// Rule CSSRuleRef
ruleCSSRuleRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRuleRefAccess().getGroup()); }
(rule__CSSRuleRef__Group__0)
{ after(grammarAccess.getCSSRuleRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRuleDefinition
entryRuleCSSRuleDefinition 
:
{ before(grammarAccess.getCSSRuleDefinitionRule()); }
	 ruleCSSRuleDefinition
{ after(grammarAccess.getCSSRuleDefinitionRule()); } 
	 EOF 
;

// Rule CSSRuleDefinition
ruleCSSRuleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getGroup()); }
(rule__CSSRuleDefinition__Group__0)
{ after(grammarAccess.getCSSRuleDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRuleOr
entryRuleCSSRuleOr 
:
{ before(grammarAccess.getCSSRuleOrRule()); }
	 ruleCSSRuleOr
{ after(grammarAccess.getCSSRuleOrRule()); } 
	 EOF 
;

// Rule CSSRuleOr
ruleCSSRuleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRuleOrAccess().getGroup()); }
(rule__CSSRuleOr__Group__0)
{ after(grammarAccess.getCSSRuleOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRuleXor
entryRuleCSSRuleXor 
:
{ before(grammarAccess.getCSSRuleXorRule()); }
	 ruleCSSRuleXor
{ after(grammarAccess.getCSSRuleXorRule()); } 
	 EOF 
;

// Rule CSSRuleXor
ruleCSSRuleXor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRuleXorAccess().getGroup()); }
(rule__CSSRuleXor__Group__0)
{ after(grammarAccess.getCSSRuleXorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRuleConcat
entryRuleCSSRuleConcat 
:
{ before(grammarAccess.getCSSRuleConcatRule()); }
	 ruleCSSRuleConcat
{ after(grammarAccess.getCSSRuleConcatRule()); } 
	 EOF 
;

// Rule CSSRuleConcat
ruleCSSRuleConcat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRuleConcatAccess().getGroup()); }
(rule__CSSRuleConcat__Group__0)
{ after(grammarAccess.getCSSRuleConcatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRulePostfix
entryRuleCSSRulePostfix 
:
{ before(grammarAccess.getCSSRulePostfixRule()); }
	 ruleCSSRulePostfix
{ after(grammarAccess.getCSSRulePostfixRule()); } 
	 EOF 
;

// Rule CSSRulePostfix
ruleCSSRulePostfix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRulePostfixAccess().getGroup()); }
(rule__CSSRulePostfix__Group__0)
{ after(grammarAccess.getCSSRulePostfixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRuleBracket
entryRuleCSSRuleBracket 
:
{ before(grammarAccess.getCSSRuleBracketRule()); }
	 ruleCSSRuleBracket
{ after(grammarAccess.getCSSRuleBracketRule()); } 
	 EOF 
;

// Rule CSSRuleBracket
ruleCSSRuleBracket
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRuleBracketAccess().getGroup()); }
(rule__CSSRuleBracket__Group__0)
{ after(grammarAccess.getCSSRuleBracketAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRulePrimary
entryRuleCSSRulePrimary 
:
{ before(grammarAccess.getCSSRulePrimaryRule()); }
	 ruleCSSRulePrimary
{ after(grammarAccess.getCSSRulePrimaryRule()); } 
	 EOF 
;

// Rule CSSRulePrimary
ruleCSSRulePrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRulePrimaryAccess().getAlternatives()); }
(rule__CSSRulePrimary__Alternatives)
{ after(grammarAccess.getCSSRulePrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSRuleLiteral
entryRuleCSSRuleLiteral 
:
{ before(grammarAccess.getCSSRuleLiteralRule()); }
	 ruleCSSRuleLiteral
{ after(grammarAccess.getCSSRuleLiteralRule()); } 
	 EOF 
;

// Rule CSSRuleLiteral
ruleCSSRuleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSRuleLiteralAccess().getAlternatives()); }
(rule__CSSRuleLiteral__Alternatives)
{ after(grammarAccess.getCSSRuleLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSDefaultValue
entryRuleCSSDefaultValue 
:
{ before(grammarAccess.getCSSDefaultValueRule()); }
	 ruleCSSDefaultValue
{ after(grammarAccess.getCSSDefaultValueRule()); } 
	 EOF 
;

// Rule CSSDefaultValue
ruleCSSDefaultValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCSSDefaultValueAccess().getAlternatives()); }
(rule__CSSDefaultValue__Alternatives)
{ after(grammarAccess.getCSSDefaultValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PackageDefinition__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getRulesAssignment_3_0()); }
(rule__PackageDefinition__RulesAssignment_3_0)
{ after(grammarAccess.getPackageDefinitionAccess().getRulesAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getPackageDefinitionAccess().getSubpackagesAssignment_3_1()); }
(rule__PackageDefinition__SubpackagesAssignment_3_1)
{ after(grammarAccess.getPackageDefinitionAccess().getSubpackagesAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getPackageDefinitionAccess().getElementsAssignment_3_2()); }
(rule__PackageDefinition__ElementsAssignment_3_2)
{ after(grammarAccess.getPackageDefinitionAccess().getElementsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSBaseType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSBaseTypeAccess().getINTKeyword_0()); }

	'INT' 

{ after(grammarAccess.getCSSBaseTypeAccess().getINTKeyword_0()); }
)

    |(
{ before(grammarAccess.getCSSBaseTypeAccess().getDOUBLEKeyword_1()); }

	'DOUBLE' 

{ after(grammarAccess.getCSSBaseTypeAccess().getDOUBLEKeyword_1()); }
)

    |(
{ before(grammarAccess.getCSSBaseTypeAccess().getUDOUBLEKeyword_2()); }

	'UDOUBLE' 

{ after(grammarAccess.getCSSBaseTypeAccess().getUDOUBLEKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getPropertiesAssignment_3_0()); }
(rule__ElementDeclartion__PropertiesAssignment_3_0)
{ after(grammarAccess.getElementDeclartionAccess().getPropertiesAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getElementDeclartionAccess().getPseudoClassesAssignment_3_1()); }
(rule__ElementDeclartion__PseudoClassesAssignment_3_1)
{ after(grammarAccess.getElementDeclartionAccess().getPseudoClassesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRulePostfix__CardinalityAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRulePostfixAccess().getCardinalityAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getCSSRulePostfixAccess().getCardinalityAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getCSSRulePostfixAccess().getCardinalityPlusSignKeyword_1_1_0_1()); }

	'+' 

{ after(grammarAccess.getCSSRulePostfixAccess().getCardinalityPlusSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getCSSRulePostfixAccess().getCardinalityQuestionMarkKeyword_1_1_0_2()); }

	'?' 

{ after(grammarAccess.getCSSRulePostfixAccess().getCardinalityQuestionMarkKeyword_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRulePrimary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleRefParserRuleCall_0()); }
	ruleCSSRuleRef
{ after(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleBracketParserRuleCall_1()); }
	ruleCSSRuleBracket
{ after(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleBracketParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleLiteralParserRuleCall_2()); }
	ruleCSSRuleLiteral
{ after(grammarAccess.getCSSRulePrimaryAccess().getCSSRuleLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCSSRulePrimaryAccess().getCSSBaseTypeParserRuleCall_3()); }
	ruleCSSBaseType
{ after(grammarAccess.getCSSRulePrimaryAccess().getCSSBaseTypeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleLiteralAccess().getGroup_0()); }
(rule__CSSRuleLiteral__Group_0__0)
{ after(grammarAccess.getCSSRuleLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCSSRuleLiteralAccess().getValueAssignment_1()); }
(rule__CSSRuleLiteral__ValueAssignment_1)
{ after(grammarAccess.getCSSRuleLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSDefaultValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSDefaultValueAccess().getCSSRuleLiteralParserRuleCall_0()); }
	ruleCSSRuleLiteral
{ after(grammarAccess.getCSSDefaultValueAccess().getCSSRuleLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCSSDefaultValueAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getCSSDefaultValueAccess().getINTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCSSDefaultValueAccess().getGroup_2()); }
(rule__CSSDefaultValue__Group_2__0)
{ after(grammarAccess.getCSSDefaultValueAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getCSSDefaultValueAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getCSSDefaultValueAccess().getSTRINGTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__CssExtension__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CssExtension__Group__0__Impl
	rule__CssExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CssExtension__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCssExtensionAccess().getImportsAssignment_0()); }
(rule__CssExtension__ImportsAssignment_0)*
{ after(grammarAccess.getCssExtensionAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CssExtension__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CssExtension__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CssExtension__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCssExtensionAccess().getPackageDefAssignment_1()); }
(rule__CssExtension__PackageDefAssignment_1)?
{ after(grammarAccess.getCssExtensionAccess().getPackageDefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup_1()); }
(rule__QualifiedNameWithWildCard__Group_1__0)?
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildCard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group_1__0__Impl
	rule__QualifiedNameWithWildCard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__0__Impl
	rule__PackageDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__1__Impl
	rule__PackageDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNameAssignment_1()); }
(rule__PackageDefinition__NameAssignment_1)
{ after(grammarAccess.getPackageDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__2__Impl
	rule__PackageDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__3__Impl
	rule__PackageDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getAlternatives_3()); }
(rule__PackageDefinition__Alternatives_3)*
{ after(grammarAccess.getPackageDefinitionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPackageDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ElementDeclartion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementDeclartion__Group__0__Impl
	rule__ElementDeclartion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getDokuAssignment_0()); }
(rule__ElementDeclartion__DokuAssignment_0)?
{ after(grammarAccess.getElementDeclartionAccess().getDokuAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementDeclartion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementDeclartion__Group__1__Impl
	rule__ElementDeclartion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getNameAssignment_1()); }
(rule__ElementDeclartion__NameAssignment_1)
{ after(grammarAccess.getElementDeclartionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementDeclartion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementDeclartion__Group__2__Impl
	rule__ElementDeclartion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getElementDeclartionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementDeclartion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementDeclartion__Group__3__Impl
	rule__ElementDeclartion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getAlternatives_3()); }
(rule__ElementDeclartion__Alternatives_3)*
{ after(grammarAccess.getElementDeclartionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementDeclartion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementDeclartion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getElementDeclartionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropertyDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__0__Impl
	rule__PropertyDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getDokuAssignment_0()); }
(rule__PropertyDefinition__DokuAssignment_0)?
{ after(grammarAccess.getPropertyDefinitionAccess().getDokuAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__1__Impl
	rule__PropertyDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getNameAssignment_1()); }
(rule__PropertyDefinition__NameAssignment_1)
{ after(grammarAccess.getPropertyDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__2__Impl
	rule__PropertyDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getRuleAssignment_2()); }
(rule__PropertyDefinition__RuleAssignment_2)
{ after(grammarAccess.getPropertyDefinitionAccess().getRuleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__3__Impl
	rule__PropertyDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getGroup_3()); }
(rule__PropertyDefinition__Group_3__0)?
{ after(grammarAccess.getPropertyDefinitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PropertyDefinition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group_3__0__Impl
	rule__PropertyDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getDefaultKeyword_3_0()); }

	'default:' 

{ after(grammarAccess.getPropertyDefinitionAccess().getDefaultKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getDefaultAssignment_3_1()); }
(rule__PropertyDefinition__DefaultAssignment_3_1)
{ after(grammarAccess.getPropertyDefinitionAccess().getDefaultAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PseudoClassDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassDefinition__Group__0__Impl
	rule__PseudoClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassDefinitionAccess().getDokuAssignment_0()); }
(rule__PseudoClassDefinition__DokuAssignment_0)?
{ after(grammarAccess.getPseudoClassDefinitionAccess().getDokuAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassDefinitionAccess().getNameAssignment_1()); }
(rule__PseudoClassDefinition__NameAssignment_1)
{ after(grammarAccess.getPseudoClassDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleRef__Group__0__Impl
	rule__CSSRuleRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleRefAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getCSSRuleRefAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleRef__Group__1__Impl
	rule__CSSRuleRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleRefAccess().getRefAssignment_1()); }
(rule__CSSRuleRef__RefAssignment_1)
{ after(grammarAccess.getCSSRuleRefAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleRefAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getCSSRuleRefAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CSSRuleDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleDefinition__Group__0__Impl
	rule__CSSRuleDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getCSSRuleDefinitionAction_0()); }
(

)
{ after(grammarAccess.getCSSRuleDefinitionAccess().getCSSRuleDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleDefinition__Group__1__Impl
	rule__CSSRuleDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getDokuAssignment_1()); }
(rule__CSSRuleDefinition__DokuAssignment_1)?
{ after(grammarAccess.getCSSRuleDefinitionAccess().getDokuAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleDefinition__Group__2__Impl
	rule__CSSRuleDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getNameAssignment_2()); }
(rule__CSSRuleDefinition__NameAssignment_2)
{ after(grammarAccess.getCSSRuleDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleDefinition__Group__3__Impl
	rule__CSSRuleDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getCSSRuleDefinitionAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleDefinition__Group__4__Impl
	rule__CSSRuleDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getRAssignment_4()); }
(rule__CSSRuleDefinition__RAssignment_4)
{ after(grammarAccess.getCSSRuleDefinitionAccess().getRAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getCSSRuleDefinitionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CSSRuleOr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleOr__Group__0__Impl
	rule__CSSRuleOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleOr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleOrAccess().getCSSRuleXorParserRuleCall_0()); }
	ruleCSSRuleXor
{ after(grammarAccess.getCSSRuleOrAccess().getCSSRuleXorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleOr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleOr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleOrAccess().getGroup_1()); }
(rule__CSSRuleOr__Group_1__0)?
{ after(grammarAccess.getCSSRuleOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleOr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleOr__Group_1__0__Impl
	rule__CSSRuleOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleOr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleOrAccess().getCSSRuleOrOrsAction_1_0()); }
(

)
{ after(grammarAccess.getCSSRuleOrAccess().getCSSRuleOrOrsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleOr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleOr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCSSRuleOrAccess().getGroup_1_1()); }
(rule__CSSRuleOr__Group_1_1__0)
{ after(grammarAccess.getCSSRuleOrAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getCSSRuleOrAccess().getGroup_1_1()); }
(rule__CSSRuleOr__Group_1_1__0)*
{ after(grammarAccess.getCSSRuleOrAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleOr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleOr__Group_1_1__0__Impl
	rule__CSSRuleOr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleOr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleOrAccess().getVerticalLineKeyword_1_1_0()); }

	'|' 

{ after(grammarAccess.getCSSRuleOrAccess().getVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleOr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleOr__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleOr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleOrAccess().getOrsAssignment_1_1_1()); }
(rule__CSSRuleOr__OrsAssignment_1_1_1)
{ after(grammarAccess.getCSSRuleOrAccess().getOrsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleXor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleXor__Group__0__Impl
	rule__CSSRuleXor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleXor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleXorAccess().getCSSRuleConcatParserRuleCall_0()); }
	ruleCSSRuleConcat
{ after(grammarAccess.getCSSRuleXorAccess().getCSSRuleConcatParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleXor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleXor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleXor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleXorAccess().getGroup_1()); }
(rule__CSSRuleXor__Group_1__0)?
{ after(grammarAccess.getCSSRuleXorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleXor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleXor__Group_1__0__Impl
	rule__CSSRuleXor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleXor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleXorAccess().getCSSRuleXorXorsAction_1_0()); }
(

)
{ after(grammarAccess.getCSSRuleXorAccess().getCSSRuleXorXorsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleXor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleXor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleXor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCSSRuleXorAccess().getGroup_1_1()); }
(rule__CSSRuleXor__Group_1_1__0)
{ after(grammarAccess.getCSSRuleXorAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getCSSRuleXorAccess().getGroup_1_1()); }
(rule__CSSRuleXor__Group_1_1__0)*
{ after(grammarAccess.getCSSRuleXorAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleXor__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleXor__Group_1_1__0__Impl
	rule__CSSRuleXor__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleXor__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleXorAccess().getVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getCSSRuleXorAccess().getVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleXor__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleXor__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleXor__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleXorAccess().getXorsAssignment_1_1_1()); }
(rule__CSSRuleXor__XorsAssignment_1_1_1)
{ after(grammarAccess.getCSSRuleXorAccess().getXorsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleConcat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleConcat__Group__0__Impl
	rule__CSSRuleConcat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleConcat__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleConcatAccess().getCSSRulePostfixParserRuleCall_0()); }
	ruleCSSRulePostfix
{ after(grammarAccess.getCSSRuleConcatAccess().getCSSRulePostfixParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleConcat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleConcat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleConcat__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleConcatAccess().getGroup_1()); }
(rule__CSSRuleConcat__Group_1__0)?
{ after(grammarAccess.getCSSRuleConcatAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleConcat__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleConcat__Group_1__0__Impl
	rule__CSSRuleConcat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleConcat__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleConcatAccess().getCSSRuleConcatConcAction_1_0()); }
(

)
{ after(grammarAccess.getCSSRuleConcatAccess().getCSSRuleConcatConcAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleConcat__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleConcat__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleConcat__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCSSRuleConcatAccess().getConcAssignment_1_1()); }
(rule__CSSRuleConcat__ConcAssignment_1_1)
{ after(grammarAccess.getCSSRuleConcatAccess().getConcAssignment_1_1()); }
)
(
{ before(grammarAccess.getCSSRuleConcatAccess().getConcAssignment_1_1()); }
(rule__CSSRuleConcat__ConcAssignment_1_1)*
{ after(grammarAccess.getCSSRuleConcatAccess().getConcAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRulePostfix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRulePostfix__Group__0__Impl
	rule__CSSRulePostfix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRulePostfix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRulePostfixAccess().getCSSRulePrimaryParserRuleCall_0()); }
	ruleCSSRulePrimary
{ after(grammarAccess.getCSSRulePostfixAccess().getCSSRulePrimaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRulePostfix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRulePostfix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRulePostfix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRulePostfixAccess().getGroup_1()); }
(rule__CSSRulePostfix__Group_1__0)?
{ after(grammarAccess.getCSSRulePostfixAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRulePostfix__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRulePostfix__Group_1__0__Impl
	rule__CSSRulePostfix__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRulePostfix__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRulePostfixAccess().getCSSRulePostfixRuleAction_1_0()); }
(

)
{ after(grammarAccess.getCSSRulePostfixAccess().getCSSRulePostfixRuleAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRulePostfix__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRulePostfix__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRulePostfix__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRulePostfixAccess().getCardinalityAssignment_1_1()); }
(rule__CSSRulePostfix__CardinalityAssignment_1_1)
{ after(grammarAccess.getCSSRulePostfixAccess().getCardinalityAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSRuleBracket__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleBracket__Group__0__Impl
	rule__CSSRuleBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleBracket__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleBracketAccess().getCSSRuleBracketAction_0()); }
(

)
{ after(grammarAccess.getCSSRuleBracketAccess().getCSSRuleBracketAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleBracket__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleBracket__Group__1__Impl
	rule__CSSRuleBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleBracket__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleBracketAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getCSSRuleBracketAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleBracket__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleBracket__Group__2__Impl
	rule__CSSRuleBracket__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleBracket__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleBracketAccess().getInnerAssignment_2()); }
(rule__CSSRuleBracket__InnerAssignment_2)
{ after(grammarAccess.getCSSRuleBracketAccess().getInnerAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleBracket__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleBracket__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleBracket__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleBracketAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getCSSRuleBracketAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CSSRuleLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleLiteral__Group_0__0__Impl
	rule__CSSRuleLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleLiteralAccess().getCSSRuleLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getCSSRuleLiteralAccess().getCSSRuleLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSRuleLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSRuleLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleLiteralAccess().getValueAssignment_0_1()); }
(rule__CSSRuleLiteral__ValueAssignment_0_1)
{ after(grammarAccess.getCSSRuleLiteralAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CSSDefaultValue__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSDefaultValue__Group_2__0__Impl
	rule__CSSDefaultValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSDefaultValue__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSDefaultValueAccess().getINTTerminalRuleCall_2_0()); }
(	RULE_INT)*
{ after(grammarAccess.getCSSDefaultValueAccess().getINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSDefaultValue__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSDefaultValue__Group_2__1__Impl
	rule__CSSDefaultValue__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSDefaultValue__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSDefaultValueAccess().getFullStopKeyword_2_1()); }

	'.' 

{ after(grammarAccess.getCSSDefaultValueAccess().getFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CSSDefaultValue__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CSSDefaultValue__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSSDefaultValue__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCSSDefaultValueAccess().getINTTerminalRuleCall_2_2()); }
(	RULE_INT)
{ after(grammarAccess.getCSSDefaultValueAccess().getINTTerminalRuleCall_2_2()); }
)
(
{ before(grammarAccess.getCSSDefaultValueAccess().getINTTerminalRuleCall_2_2()); }
(	RULE_INT)*
{ after(grammarAccess.getCSSDefaultValueAccess().getINTTerminalRuleCall_2_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}









rule__CssExtension__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCssExtensionAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getCssExtensionAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CssExtension__PackageDefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCssExtensionAccess().getPackageDefPackageDefinitionParserRuleCall_1_0()); }
	rulePackageDefinition{ after(grammarAccess.getCssExtensionAccess().getPackageDefPackageDefinitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildCard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDefinitionAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__RulesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getRulesCSSRuleDefinitionParserRuleCall_3_0_0()); }
	ruleCSSRuleDefinition{ after(grammarAccess.getPackageDefinitionAccess().getRulesCSSRuleDefinitionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__SubpackagesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getSubpackagesPackageDefinitionParserRuleCall_3_1_0()); }
	rulePackageDefinition{ after(grammarAccess.getPackageDefinitionAccess().getSubpackagesPackageDefinitionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__ElementsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getElementsElementDeclartionParserRuleCall_3_2_0()); }
	ruleElementDeclartion{ after(grammarAccess.getPackageDefinitionAccess().getElementsElementDeclartionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Doku__ContentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDokuAccess().getContentJDOCTerminalRuleCall_0()); }
	RULE_JDOC{ after(grammarAccess.getDokuAccess().getContentJDOCTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__DokuAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getDokuDokuParserRuleCall_0_0()); }
	ruleDoku{ after(grammarAccess.getElementDeclartionAccess().getDokuDokuParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getElementDeclartionAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__PropertiesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getPropertiesPropertyDefinitionParserRuleCall_3_0_0()); }
	rulePropertyDefinition{ after(grammarAccess.getElementDeclartionAccess().getPropertiesPropertyDefinitionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDeclartion__PseudoClassesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementDeclartionAccess().getPseudoClassesPseudoClassDefinitionParserRuleCall_3_1_0()); }
	rulePseudoClassDefinition{ after(grammarAccess.getElementDeclartionAccess().getPseudoClassesPseudoClassDefinitionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__DokuAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getDokuDokuParserRuleCall_0_0()); }
	ruleDoku{ after(grammarAccess.getPropertyDefinitionAccess().getDokuDokuParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPropertyDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__RuleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getRuleCSSRuleOrParserRuleCall_2_0()); }
	ruleCSSRuleOr{ after(grammarAccess.getPropertyDefinitionAccess().getRuleCSSRuleOrParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__DefaultAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getDefaultCSSDefaultValueParserRuleCall_3_1_0()); }
	ruleCSSDefaultValue{ after(grammarAccess.getPropertyDefinitionAccess().getDefaultCSSDefaultValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassDefinition__DokuAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassDefinitionAccess().getDokuDokuParserRuleCall_0_0()); }
	ruleDoku{ after(grammarAccess.getPseudoClassDefinitionAccess().getDokuDokuParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassDefinitionAccess().getNamePSEUDOTerminalRuleCall_1_0()); }
	RULE_PSEUDO{ after(grammarAccess.getPseudoClassDefinitionAccess().getNamePSEUDOTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleId__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleIdAccess().getNameQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName{ after(grammarAccess.getCSSRuleIdAccess().getNameQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleRef__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleRefAccess().getRefCSSRuleIdCrossReference_1_0()); }
(
{ before(grammarAccess.getCSSRuleRefAccess().getRefCSSRuleIdQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getCSSRuleRefAccess().getRefCSSRuleIdQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getCSSRuleRefAccess().getRefCSSRuleIdCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__DokuAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getDokuDokuParserRuleCall_1_0()); }
	ruleDoku{ after(grammarAccess.getCSSRuleDefinitionAccess().getDokuDokuParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getNameCSSRuleIdParserRuleCall_2_0()); }
	ruleCSSRuleId{ after(grammarAccess.getCSSRuleDefinitionAccess().getNameCSSRuleIdParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleDefinition__RAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleDefinitionAccess().getRCSSRuleOrParserRuleCall_4_0()); }
	ruleCSSRuleOr{ after(grammarAccess.getCSSRuleDefinitionAccess().getRCSSRuleOrParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleOr__OrsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleOrAccess().getOrsCSSRuleXorParserRuleCall_1_1_1_0()); }
	ruleCSSRuleXor{ after(grammarAccess.getCSSRuleOrAccess().getOrsCSSRuleXorParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleXor__XorsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleXorAccess().getXorsCSSRuleConcatParserRuleCall_1_1_1_0()); }
	ruleCSSRuleConcat{ after(grammarAccess.getCSSRuleXorAccess().getXorsCSSRuleConcatParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleConcat__ConcAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleConcatAccess().getConcCSSRulePostfixParserRuleCall_1_1_0()); }
	ruleCSSRulePostfix{ after(grammarAccess.getCSSRuleConcatAccess().getConcCSSRulePostfixParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRulePostfix__CardinalityAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRulePostfixAccess().getCardinalityAlternatives_1_1_0()); }
(rule__CSSRulePostfix__CardinalityAlternatives_1_1_0)
{ after(grammarAccess.getCSSRulePostfixAccess().getCardinalityAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleBracket__InnerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleBracketAccess().getInnerCSSRuleOrParserRuleCall_2_0()); }
	ruleCSSRuleOr{ after(grammarAccess.getCSSRuleBracketAccess().getInnerCSSRuleOrParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleLiteral__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleLiteralAccess().getValueIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getCSSRuleLiteralAccess().getValueIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSRuleLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSRuleLiteralAccess().getValueCommaKeyword_1_0()); }
(
{ before(grammarAccess.getCSSRuleLiteralAccess().getValueCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getCSSRuleLiteralAccess().getValueCommaKeyword_1_0()); }
)

{ after(grammarAccess.getCSSRuleLiteralAccess().getValueCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_PSEUDO : ':' ~(' ') RULE_ID;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'-') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;

RULE_JDOC : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


