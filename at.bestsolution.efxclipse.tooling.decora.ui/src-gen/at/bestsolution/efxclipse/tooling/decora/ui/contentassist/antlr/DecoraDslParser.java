/*
* generated by Xtext
*/
package at.bestsolution.efxclipse.tooling.decora.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import at.bestsolution.efxclipse.tooling.decora.services.DecoraDslGrammarAccess;

public class DecoraDslParser extends AbstractContentAssistParser {
	
	@Inject
	private DecoraDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected at.bestsolution.efxclipse.tooling.decora.ui.contentassist.antlr.internal.InternalDecoraDslParser createParser() {
		at.bestsolution.efxclipse.tooling.decora.ui.contentassist.antlr.internal.InternalDecoraDslParser result = new at.bestsolution.efxclipse.tooling.decora.ui.contentassist.antlr.internal.InternalDecoraDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getField_selectionAccess().getAlternatives(), "rule__Field_selection__Alternatives");
					put(grammarAccess.getPrimary_expressionAccess().getAlternatives(), "rule__Primary_expression__Alternatives");
					put(grammarAccess.getPrimary_or_callAccess().getAlternatives(), "rule__Primary_or_call__Alternatives");
					put(grammarAccess.getPostfix_expressionAccess().getAlternatives(), "rule__Postfix_expression__Alternatives");
					put(grammarAccess.getFunction_callAccess().getAlternatives(), "rule__Function_call__Alternatives");
					put(grammarAccess.getUnary_expressionAccess().getAlternatives(), "rule__Unary_expression__Alternatives");
					put(grammarAccess.getMultiplicative_expressionAccess().getAlternatives_1(), "rule__Multiplicative_expression__Alternatives_1");
					put(grammarAccess.getAdditive_expressionAccess().getAlternatives_1(), "rule__Additive_expression__Alternatives_1");
					put(grammarAccess.getRelational_expressionAccess().getAlternatives_1(), "rule__Relational_expression__Alternatives_1");
					put(grammarAccess.getEquality_expressionAccess().getAlternatives_1(), "rule__Equality_expression__Alternatives_1");
					put(grammarAccess.getAssignment_expressionAccess().getAlternatives(), "rule__Assignment_expression__Alternatives");
					put(grammarAccess.getAssignment_operatorAccess().getAlternatives(), "rule__Assignment_operator__Alternatives");
					put(grammarAccess.getFully_specified_typeAccess().getAlternatives(), "rule__Fully_specified_type__Alternatives");
					put(grammarAccess.getType_qualifierAccess().getAlternatives(), "rule__Type_qualifier__Alternatives");
					put(grammarAccess.getType_precisionAccess().getAlternatives(), "rule__Type_precision__Alternatives");
					put(grammarAccess.getType_specifier_nonarrayAccess().getAlternatives(), "rule__Type_specifier_nonarray__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getSimple_statementAccess().getAlternatives(), "rule__Simple_statement__Alternatives");
					put(grammarAccess.getStatement_no_new_scopeAccess().getAlternatives(), "rule__Statement_no_new_scope__Alternatives");
					put(grammarAccess.getExpression_statementAccess().getAlternatives(), "rule__Expression_statement__Alternatives");
					put(grammarAccess.getIteration_statementAccess().getAlternatives(), "rule__Iteration_statement__Alternatives");
					put(grammarAccess.getFor_init_statementAccess().getAlternatives(), "rule__For_init_statement__Alternatives");
					put(grammarAccess.getFor_rest_statementAccess().getAlternatives(), "rule__For_rest_statement__Alternatives");
					put(grammarAccess.getJump_statementAccess().getAlternatives(), "rule__Jump_statement__Alternatives");
					put(grammarAccess.getExternal_declarationAccess().getAlternatives(), "rule__External_declaration__Alternatives");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_4(), "rule__Primary_expression__Group_4__0");
					put(grammarAccess.getPostfix_expressionAccess().getGroup_0(), "rule__Postfix_expression__Group_0__0");
					put(grammarAccess.getPostfix_expressionAccess().getGroup_1(), "rule__Postfix_expression__Group_1__0");
					put(grammarAccess.getPostfix_expressionAccess().getGroup_2(), "rule__Postfix_expression__Group_2__0");
					put(grammarAccess.getPostfix_expressionAccess().getGroup_3(), "rule__Postfix_expression__Group_3__0");
					put(grammarAccess.getPostfix_expressionAccess().getGroup_4(), "rule__Postfix_expression__Group_4__0");
					put(grammarAccess.getFunction_callAccess().getGroup_0(), "rule__Function_call__Group_0__0");
					put(grammarAccess.getFunction_callAccess().getGroup_1(), "rule__Function_call__Group_1__0");
					put(grammarAccess.getFunction_call_parameter_listAccess().getGroup(), "rule__Function_call_parameter_list__Group__0");
					put(grammarAccess.getFunction_call_parameter_listAccess().getGroup_1(), "rule__Function_call_parameter_list__Group_1__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_1(), "rule__Unary_expression__Group_1__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_2(), "rule__Unary_expression__Group_2__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_3(), "rule__Unary_expression__Group_3__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_4(), "rule__Unary_expression__Group_4__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_5(), "rule__Unary_expression__Group_5__0");
					put(grammarAccess.getMultiplicative_expressionAccess().getGroup(), "rule__Multiplicative_expression__Group__0");
					put(grammarAccess.getMultiplicative_expressionAccess().getGroup_1_0(), "rule__Multiplicative_expression__Group_1_0__0");
					put(grammarAccess.getMultiplicative_expressionAccess().getGroup_1_1(), "rule__Multiplicative_expression__Group_1_1__0");
					put(grammarAccess.getAdditive_expressionAccess().getGroup(), "rule__Additive_expression__Group__0");
					put(grammarAccess.getAdditive_expressionAccess().getGroup_1_0(), "rule__Additive_expression__Group_1_0__0");
					put(grammarAccess.getAdditive_expressionAccess().getGroup_1_1(), "rule__Additive_expression__Group_1_1__0");
					put(grammarAccess.getRelational_expressionAccess().getGroup(), "rule__Relational_expression__Group__0");
					put(grammarAccess.getRelational_expressionAccess().getGroup_1_0(), "rule__Relational_expression__Group_1_0__0");
					put(grammarAccess.getRelational_expressionAccess().getGroup_1_1(), "rule__Relational_expression__Group_1_1__0");
					put(grammarAccess.getRelational_expressionAccess().getGroup_1_2(), "rule__Relational_expression__Group_1_2__0");
					put(grammarAccess.getRelational_expressionAccess().getGroup_1_3(), "rule__Relational_expression__Group_1_3__0");
					put(grammarAccess.getEquality_expressionAccess().getGroup(), "rule__Equality_expression__Group__0");
					put(grammarAccess.getEquality_expressionAccess().getGroup_1_0(), "rule__Equality_expression__Group_1_0__0");
					put(grammarAccess.getEquality_expressionAccess().getGroup_1_1(), "rule__Equality_expression__Group_1_1__0");
					put(grammarAccess.getLogical_and_expressionAccess().getGroup(), "rule__Logical_and_expression__Group__0");
					put(grammarAccess.getLogical_and_expressionAccess().getGroup_1(), "rule__Logical_and_expression__Group_1__0");
					put(grammarAccess.getLogical_xor_expressionAccess().getGroup(), "rule__Logical_xor_expression__Group__0");
					put(grammarAccess.getLogical_xor_expressionAccess().getGroup_1(), "rule__Logical_xor_expression__Group_1__0");
					put(grammarAccess.getLogical_or_expressionAccess().getGroup(), "rule__Logical_or_expression__Group__0");
					put(grammarAccess.getLogical_or_expressionAccess().getGroup_1(), "rule__Logical_or_expression__Group_1__0");
					put(grammarAccess.getTernary_partAccess().getGroup(), "rule__Ternary_part__Group__0");
					put(grammarAccess.getConditional_expressionAccess().getGroup(), "rule__Conditional_expression__Group__0");
					put(grammarAccess.getAssignment_expressionAccess().getGroup_0(), "rule__Assignment_expression__Group_0__0");
					put(grammarAccess.getFunction_prototypeAccess().getGroup(), "rule__Function_prototype__Group__0");
					put(grammarAccess.getParameter_declarationAccess().getGroup(), "rule__Parameter_declaration__Group__0");
					put(grammarAccess.getParameter_declaration_listAccess().getGroup(), "rule__Parameter_declaration_list__Group__0");
					put(grammarAccess.getParameter_declaration_listAccess().getGroup_1(), "rule__Parameter_declaration_list__Group_1__0");
					put(grammarAccess.getDeclaration_identifier_and_initAccess().getGroup(), "rule__Declaration_identifier_and_init__Group__0");
					put(grammarAccess.getDeclaration_identifier_and_initAccess().getGroup_1(), "rule__Declaration_identifier_and_init__Group_1__0");
					put(grammarAccess.getDeclaration_identifier_and_initAccess().getGroup_2(), "rule__Declaration_identifier_and_init__Group_2__0");
					put(grammarAccess.getSingle_declarationAccess().getGroup(), "rule__Single_declaration__Group__0");
					put(grammarAccess.getDeclarationAccess().getGroup(), "rule__Declaration__Group__0");
					put(grammarAccess.getDeclarationAccess().getGroup_1(), "rule__Declaration__Group_1__0");
					put(grammarAccess.getFully_specified_typeAccess().getGroup_0(), "rule__Fully_specified_type__Group_0__0");
					put(grammarAccess.getFully_specified_typeAccess().getGroup_1(), "rule__Fully_specified_type__Group_1__0");
					put(grammarAccess.getFully_specified_typeAccess().getGroup_2(), "rule__Fully_specified_type__Group_2__0");
					put(grammarAccess.getType_specifierAccess().getGroup(), "rule__Type_specifier__Group__0");
					put(grammarAccess.getArray_bracketsAccess().getGroup(), "rule__Array_brackets__Group__0");
					put(grammarAccess.getCompound_statementAccess().getGroup(), "rule__Compound_statement__Group__0");
					put(grammarAccess.getCompound_statement_no_new_scopeAccess().getGroup(), "rule__Compound_statement_no_new_scope__Group__0");
					put(grammarAccess.getExpression_statementAccess().getGroup_0(), "rule__Expression_statement__Group_0__0");
					put(grammarAccess.getExpression_statementAccess().getGroup_1(), "rule__Expression_statement__Group_1__0");
					put(grammarAccess.getSelection_statementAccess().getGroup(), "rule__Selection_statement__Group__0");
					put(grammarAccess.getSelection_statementAccess().getGroup_5(), "rule__Selection_statement__Group_5__0");
					put(grammarAccess.getIteration_statementAccess().getGroup_0(), "rule__Iteration_statement__Group_0__0");
					put(grammarAccess.getIteration_statementAccess().getGroup_1(), "rule__Iteration_statement__Group_1__0");
					put(grammarAccess.getIteration_statementAccess().getGroup_2(), "rule__Iteration_statement__Group_2__0");
					put(grammarAccess.getIteration_statementAccess().getGroup_3(), "rule__Iteration_statement__Group_3__0");
					put(grammarAccess.getUnroll_modifierAccess().getGroup(), "rule__Unroll_modifier__Group__0");
					put(grammarAccess.getFor_rest_statementAccess().getGroup_0(), "rule__For_rest_statement__Group_0__0");
					put(grammarAccess.getFor_rest_statementAccess().getGroup_1(), "rule__For_rest_statement__Group_1__0");
					put(grammarAccess.getJump_statementAccess().getGroup_0(), "rule__Jump_statement__Group_0__0");
					put(grammarAccess.getJump_statementAccess().getGroup_1(), "rule__Jump_statement__Group_1__0");
					put(grammarAccess.getJump_statementAccess().getGroup_2(), "rule__Jump_statement__Group_2__0");
					put(grammarAccess.getJump_statementAccess().getGroup_3(), "rule__Jump_statement__Group_3__0");
					put(grammarAccess.getJump_statementAccess().getGroup_4(), "rule__Jump_statement__Group_4__0");
					put(grammarAccess.getFunction_definitionAccess().getGroup(), "rule__Function_definition__Group__0");
					put(grammarAccess.getModelAccess().getUnitAssignment(), "rule__Model__UnitAssignment");
					put(grammarAccess.getField_selectionAccess().getRAssignment_0(), "rule__Field_selection__RAssignment_0");
					put(grammarAccess.getField_selectionAccess().getXAssignment_1(), "rule__Field_selection__XAssignment_1");
					put(grammarAccess.getPrimary_expressionAccess().getEAssignment_4_1(), "rule__Primary_expression__EAssignment_4_1");
					put(grammarAccess.getPrimary_or_callAccess().getEAssignment_0(), "rule__Primary_or_call__EAssignment_0");
					put(grammarAccess.getPrimary_or_callAccess().getFAssignment_1(), "rule__Primary_or_call__FAssignment_1");
					put(grammarAccess.getPostfix_expressionAccess().getEAssignment_0_0(), "rule__Postfix_expression__EAssignment_0_0");
					put(grammarAccess.getPostfix_expressionAccess().getAeAssignment_0_2(), "rule__Postfix_expression__AeAssignment_0_2");
					put(grammarAccess.getPostfix_expressionAccess().getFsAssignment_0_4(), "rule__Postfix_expression__FsAssignment_0_4");
					put(grammarAccess.getPostfix_expressionAccess().getEAssignment_1_0(), "rule__Postfix_expression__EAssignment_1_0");
					put(grammarAccess.getPostfix_expressionAccess().getAeAssignment_1_2(), "rule__Postfix_expression__AeAssignment_1_2");
					put(grammarAccess.getPostfix_expressionAccess().getEAssignment_2_0(), "rule__Postfix_expression__EAssignment_2_0");
					put(grammarAccess.getPostfix_expressionAccess().getFsAssignment_2_1(), "rule__Postfix_expression__FsAssignment_2_1");
					put(grammarAccess.getPostfix_expressionAccess().getEAssignment_3_0(), "rule__Postfix_expression__EAssignment_3_0");
					put(grammarAccess.getPostfix_expressionAccess().getEAssignment_4_0(), "rule__Postfix_expression__EAssignment_4_0");
					put(grammarAccess.getPostfix_expressionAccess().getEAssignment_5(), "rule__Postfix_expression__EAssignment_5");
					put(grammarAccess.getFunction_callAccess().getIdAssignment_0_0(), "rule__Function_call__IdAssignment_0_0");
					put(grammarAccess.getFunction_callAccess().getPAssignment_0_2(), "rule__Function_call__PAssignment_0_2");
					put(grammarAccess.getFunction_callAccess().getTsAssignment_1_0(), "rule__Function_call__TsAssignment_1_0");
					put(grammarAccess.getFunction_callAccess().getPAssignment_1_2(), "rule__Function_call__PAssignment_1_2");
					put(grammarAccess.getFunction_call_parameter_listAccess().getAAssignment_0(), "rule__Function_call_parameter_list__AAssignment_0");
					put(grammarAccess.getFunction_call_parameter_listAccess().getAAssignment_1_1(), "rule__Function_call_parameter_list__AAssignment_1_1");
					put(grammarAccess.getUnary_expressionAccess().getPAssignment_0(), "rule__Unary_expression__PAssignment_0");
					put(grammarAccess.getUnary_expressionAccess().getUAssignment_1_1(), "rule__Unary_expression__UAssignment_1_1");
					put(grammarAccess.getUnary_expressionAccess().getUAssignment_2_1(), "rule__Unary_expression__UAssignment_2_1");
					put(grammarAccess.getUnary_expressionAccess().getUAssignment_3_1(), "rule__Unary_expression__UAssignment_3_1");
					put(grammarAccess.getUnary_expressionAccess().getUAssignment_4_1(), "rule__Unary_expression__UAssignment_4_1");
					put(grammarAccess.getUnary_expressionAccess().getUAssignment_5_1(), "rule__Unary_expression__UAssignment_5_1");
					put(grammarAccess.getMultiplicative_expressionAccess().getAAssignment_0(), "rule__Multiplicative_expression__AAssignment_0");
					put(grammarAccess.getMultiplicative_expressionAccess().getBAssignment_1_0_1(), "rule__Multiplicative_expression__BAssignment_1_0_1");
					put(grammarAccess.getMultiplicative_expressionAccess().getBAssignment_1_1_1(), "rule__Multiplicative_expression__BAssignment_1_1_1");
					put(grammarAccess.getAdditive_expressionAccess().getAAssignment_0(), "rule__Additive_expression__AAssignment_0");
					put(grammarAccess.getAdditive_expressionAccess().getBAssignment_1_0_1(), "rule__Additive_expression__BAssignment_1_0_1");
					put(grammarAccess.getAdditive_expressionAccess().getBAssignment_1_1_1(), "rule__Additive_expression__BAssignment_1_1_1");
					put(grammarAccess.getRelational_expressionAccess().getAAssignment_0(), "rule__Relational_expression__AAssignment_0");
					put(grammarAccess.getRelational_expressionAccess().getBAssignment_1_0_1(), "rule__Relational_expression__BAssignment_1_0_1");
					put(grammarAccess.getRelational_expressionAccess().getBAssignment_1_1_1(), "rule__Relational_expression__BAssignment_1_1_1");
					put(grammarAccess.getRelational_expressionAccess().getBAssignment_1_2_1(), "rule__Relational_expression__BAssignment_1_2_1");
					put(grammarAccess.getRelational_expressionAccess().getBAssignment_1_3_1(), "rule__Relational_expression__BAssignment_1_3_1");
					put(grammarAccess.getEquality_expressionAccess().getAAssignment_0(), "rule__Equality_expression__AAssignment_0");
					put(grammarAccess.getEquality_expressionAccess().getBAssignment_1_0_1(), "rule__Equality_expression__BAssignment_1_0_1");
					put(grammarAccess.getEquality_expressionAccess().getBAssignment_1_1_1(), "rule__Equality_expression__BAssignment_1_1_1");
					put(grammarAccess.getLogical_and_expressionAccess().getAAssignment_0(), "rule__Logical_and_expression__AAssignment_0");
					put(grammarAccess.getLogical_and_expressionAccess().getBAssignment_1_1(), "rule__Logical_and_expression__BAssignment_1_1");
					put(grammarAccess.getLogical_xor_expressionAccess().getAAssignment_0(), "rule__Logical_xor_expression__AAssignment_0");
					put(grammarAccess.getLogical_xor_expressionAccess().getBAssignment_1_1(), "rule__Logical_xor_expression__BAssignment_1_1");
					put(grammarAccess.getLogical_or_expressionAccess().getAAssignment_0(), "rule__Logical_or_expression__AAssignment_0");
					put(grammarAccess.getLogical_or_expressionAccess().getBAssignment_1_1(), "rule__Logical_or_expression__BAssignment_1_1");
					put(grammarAccess.getTernary_partAccess().getAAssignment_3(), "rule__Ternary_part__AAssignment_3");
					put(grammarAccess.getConditional_expressionAccess().getAAssignment_0(), "rule__Conditional_expression__AAssignment_0");
					put(grammarAccess.getConditional_expressionAccess().getTAssignment_1(), "rule__Conditional_expression__TAssignment_1");
					put(grammarAccess.getAssignment_expressionAccess().getAAssignment_0_0(), "rule__Assignment_expression__AAssignment_0_0");
					put(grammarAccess.getAssignment_expressionAccess().getOpAssignment_0_1(), "rule__Assignment_expression__OpAssignment_0_1");
					put(grammarAccess.getAssignment_expressionAccess().getBAssignment_0_2(), "rule__Assignment_expression__BAssignment_0_2");
					put(grammarAccess.getAssignment_expressionAccess().getCAssignment_1(), "rule__Assignment_expression__CAssignment_1");
					put(grammarAccess.getExpressionAccess().getEAssignment(), "rule__Expression__EAssignment");
					put(grammarAccess.getFunction_prototypeAccess().getTAssignment_0(), "rule__Function_prototype__TAssignment_0");
					put(grammarAccess.getFunction_prototypeAccess().getIdAssignment_1(), "rule__Function_prototype__IdAssignment_1");
					put(grammarAccess.getFunction_prototypeAccess().getPAssignment_3(), "rule__Function_prototype__PAssignment_3");
					put(grammarAccess.getParameter_declarationAccess().getTAssignment_0(), "rule__Parameter_declaration__TAssignment_0");
					put(grammarAccess.getParameter_declarationAccess().getIdAssignment_1(), "rule__Parameter_declaration__IdAssignment_1");
					put(grammarAccess.getParameter_declaration_listAccess().getPAssignment_0(), "rule__Parameter_declaration_list__PAssignment_0");
					put(grammarAccess.getParameter_declaration_listAccess().getPAssignment_1_1(), "rule__Parameter_declaration_list__PAssignment_1_1");
					put(grammarAccess.getDeclaration_identifier_and_initAccess().getIdAssignment_0(), "rule__Declaration_identifier_and_init__IdAssignment_0");
					put(grammarAccess.getDeclaration_identifier_and_initAccess().getAeAssignment_1_1(), "rule__Declaration_identifier_and_init__AeAssignment_1_1");
					put(grammarAccess.getDeclaration_identifier_and_initAccess().getEAssignment_2_1(), "rule__Declaration_identifier_and_init__EAssignment_2_1");
					put(grammarAccess.getSingle_declarationAccess().getTAssignment_0(), "rule__Single_declaration__TAssignment_0");
					put(grammarAccess.getSingle_declarationAccess().getDAssignment_1(), "rule__Single_declaration__DAssignment_1");
					put(grammarAccess.getDeclarationAccess().getSAssignment_0(), "rule__Declaration__SAssignment_0");
					put(grammarAccess.getDeclarationAccess().getDAssignment_1_1(), "rule__Declaration__DAssignment_1_1");
					put(grammarAccess.getFully_specified_typeAccess().getTqAssignment_0_0(), "rule__Fully_specified_type__TqAssignment_0_0");
					put(grammarAccess.getFully_specified_typeAccess().getTpAssignment_0_1(), "rule__Fully_specified_type__TpAssignment_0_1");
					put(grammarAccess.getFully_specified_typeAccess().getTsAssignment_0_2(), "rule__Fully_specified_type__TsAssignment_0_2");
					put(grammarAccess.getFully_specified_typeAccess().getTqAssignment_1_0(), "rule__Fully_specified_type__TqAssignment_1_0");
					put(grammarAccess.getFully_specified_typeAccess().getTsAssignment_1_1(), "rule__Fully_specified_type__TsAssignment_1_1");
					put(grammarAccess.getFully_specified_typeAccess().getTpAssignment_2_0(), "rule__Fully_specified_type__TpAssignment_2_0");
					put(grammarAccess.getFully_specified_typeAccess().getTsAssignment_2_1(), "rule__Fully_specified_type__TsAssignment_2_1");
					put(grammarAccess.getFully_specified_typeAccess().getTsAssignment_3(), "rule__Fully_specified_type__TsAssignment_3");
					put(grammarAccess.getInitializerAccess().getEAssignment(), "rule__Initializer__EAssignment");
					put(grammarAccess.getDeclaration_statementAccess().getDAssignment(), "rule__Declaration_statement__DAssignment");
					put(grammarAccess.getStatementAccess().getCAssignment_0(), "rule__Statement__CAssignment_0");
					put(grammarAccess.getStatementAccess().getSAssignment_1(), "rule__Statement__SAssignment_1");
					put(grammarAccess.getSimple_statementAccess().getDAssignment_0(), "rule__Simple_statement__DAssignment_0");
					put(grammarAccess.getSimple_statementAccess().getEAssignment_1(), "rule__Simple_statement__EAssignment_1");
					put(grammarAccess.getSimple_statementAccess().getSAssignment_2(), "rule__Simple_statement__SAssignment_2");
					put(grammarAccess.getSimple_statementAccess().getIAssignment_3(), "rule__Simple_statement__IAssignment_3");
					put(grammarAccess.getSimple_statementAccess().getJAssignment_4(), "rule__Simple_statement__JAssignment_4");
					put(grammarAccess.getCompound_statementAccess().getSAssignment_2(), "rule__Compound_statement__SAssignment_2");
					put(grammarAccess.getStatement_no_new_scopeAccess().getCAssignment_0(), "rule__Statement_no_new_scope__CAssignment_0");
					put(grammarAccess.getStatement_no_new_scopeAccess().getSAssignment_1(), "rule__Statement_no_new_scope__SAssignment_1");
					put(grammarAccess.getCompound_statement_no_new_scopeAccess().getSAssignment_2(), "rule__Compound_statement_no_new_scope__SAssignment_2");
					put(grammarAccess.getExpression_statementAccess().getEAssignment_1_0(), "rule__Expression_statement__EAssignment_1_0");
					put(grammarAccess.getConstant_expressionAccess().getCAssignment(), "rule__Constant_expression__CAssignment");
					put(grammarAccess.getSelection_statementAccess().getEAssignment_2(), "rule__Selection_statement__EAssignment_2");
					put(grammarAccess.getSelection_statementAccess().getAAssignment_4(), "rule__Selection_statement__AAssignment_4");
					put(grammarAccess.getSelection_statementAccess().getBAssignment_5_1(), "rule__Selection_statement__BAssignment_5_1");
					put(grammarAccess.getConditionAccess().getEAssignment(), "rule__Condition__EAssignment");
					put(grammarAccess.getIteration_statementAccess().getCAssignment_0_2(), "rule__Iteration_statement__CAssignment_0_2");
					put(grammarAccess.getIteration_statementAccess().getSnnsAssignment_0_4(), "rule__Iteration_statement__SnnsAssignment_0_4");
					put(grammarAccess.getIteration_statementAccess().getSAssignment_1_1(), "rule__Iteration_statement__SAssignment_1_1");
					put(grammarAccess.getIteration_statementAccess().getEAssignment_1_4(), "rule__Iteration_statement__EAssignment_1_4");
					put(grammarAccess.getIteration_statementAccess().getUAssignment_2_0(), "rule__Iteration_statement__UAssignment_2_0");
					put(grammarAccess.getIteration_statementAccess().getInitAssignment_2_3(), "rule__Iteration_statement__InitAssignment_2_3");
					put(grammarAccess.getIteration_statementAccess().getRemAssignment_2_4(), "rule__Iteration_statement__RemAssignment_2_4");
					put(grammarAccess.getIteration_statementAccess().getSnnsAssignment_2_6(), "rule__Iteration_statement__SnnsAssignment_2_6");
					put(grammarAccess.getIteration_statementAccess().getInitAssignment_3_2(), "rule__Iteration_statement__InitAssignment_3_2");
					put(grammarAccess.getIteration_statementAccess().getRemAssignment_3_3(), "rule__Iteration_statement__RemAssignment_3_3");
					put(grammarAccess.getIteration_statementAccess().getSnnsAssignment_3_5(), "rule__Iteration_statement__SnnsAssignment_3_5");
					put(grammarAccess.getUnroll_modifierAccess().getMAssignment_2(), "rule__Unroll_modifier__MAssignment_2");
					put(grammarAccess.getUnroll_modifierAccess().getCAssignment_4(), "rule__Unroll_modifier__CAssignment_4");
					put(grammarAccess.getFor_init_statementAccess().getEAssignment_0(), "rule__For_init_statement__EAssignment_0");
					put(grammarAccess.getFor_init_statementAccess().getDAssignment_1(), "rule__For_init_statement__DAssignment_1");
					put(grammarAccess.getFor_rest_statementAccess().getCAssignment_0_1(), "rule__For_rest_statement__CAssignment_0_1");
					put(grammarAccess.getFor_rest_statementAccess().getEAssignment_0_3(), "rule__For_rest_statement__EAssignment_0_3");
					put(grammarAccess.getFor_rest_statementAccess().getEAssignment_1_2(), "rule__For_rest_statement__EAssignment_1_2");
					put(grammarAccess.getJump_statementAccess().getEAssignment_4_1(), "rule__Jump_statement__EAssignment_4_1");
					put(grammarAccess.getTranslation_unitAccess().getEAssignment(), "rule__Translation_unit__EAssignment");
					put(grammarAccess.getExternal_declarationAccess().getFAssignment_0(), "rule__External_declaration__FAssignment_0");
					put(grammarAccess.getExternal_declarationAccess().getDAssignment_1(), "rule__External_declaration__DAssignment_1");
					put(grammarAccess.getExternal_declarationAccess().getGAssignment_2(), "rule__External_declaration__GAssignment_2");
					put(grammarAccess.getFunction_definitionAccess().getPAssignment_0(), "rule__Function_definition__PAssignment_0");
					put(grammarAccess.getFunction_definitionAccess().getSAssignment_1(), "rule__Function_definition__SAssignment_1");
					put(grammarAccess.getGlue_blockAccess().getGAssignment(), "rule__Glue_block__GAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			at.bestsolution.efxclipse.tooling.decora.ui.contentassist.antlr.internal.InternalDecoraDslParser typedParser = (at.bestsolution.efxclipse.tooling.decora.ui.contentassist.antlr.internal.InternalDecoraDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_COMMENT", "RULE_LINE_COMMENT", "RULE_WS" };
	}
	
	public DecoraDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DecoraDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
