

package KuddelMuddel {
 	
 	package martin {
 		
 		/**
 		 * important function for la or li - ing
 		 */
 		func0 = func0( la | li );
 		
 		/** Hallo Tom! */
 		link0 = c | d e f;
 		
 		/** bla bla hallo bla bla */
 		hallo = a | b | c | <link0> | <func0>;
 		
 		/** DOKU FOR Test el */
 		Test {
 			
 			/** bla bla reftest bla bla */
 			reftest <hallo>;
 			
 		}
 		
 		gnu = gnu?;
 		
 		
 		m = a |  c || d;
 		
 		l = int(0->5) px;
 		
 		Div {
 			/**
 			 * 
 			 */
 			m <m>;
 			
 			/**
 			 * 	-fx-border-width: 4px 4px 1px 2px, 5px 4px 3px 1px;
 			 */
 			 btest [<l> | <l> <l> <l> <l>] [, [<l> | <l> <l> <l> <l> ] ]*;
 		}
 		
 		/** */
 		Table extends Div ,KuddelMuddel.Gnu {
 			
 			/**
 			 * 
 			 * @SeeAlso <m>
 			 */
 			m <m> | b | c; 
 		}
 		
 		
 		/** this is hallo doc */
 		Hallo {
 			
 			/**
			 * No whitespace is allowed between the number and units if provided.
			 *  TODO wie bau ma so was ein!?
			 * Sizes can either be a percentage or a length with units. If units are not specified then specified the 'px' is assumed. Some units are relative and others absolute.
			 * 
			 * Relative
			 * <ul>
			 * <li>px: pixels, relative to the viewing device</li>
			 * <li>em: the 'font-size' of the relevant font</li>
			 * <li>ex: the 'x-height' of the relevant font</li>
			 * </ul>
			 * Absolute
			 * <ul>
			 * <li>in: inches � 1 inch is equal to 2.54 centimeters.</li>
			 * <li>cm: centimeters</li>
			 * <li>mm: millimeters</li>
			 * <li>pt: points � the points used by CSS 2.1 are equal to 1/72nd of an inch.</li>
			 * <li>pc: picas � 1 pica is equal to 12 points.</li>
			 * </ul>
			 * Percentages
			 * These are a percentage of some length, they are context sensitive so what they are relative to depends on where they are specified. Each property that supports a percentage should specify if percentage is supported and if it is what it is relative to.
			 */
			dingdong x double [ $%$ | px | mm | cm | in | pt | pc | em | ex ]?;
 			
 			/**
 			 * super toll
 			 */
 			-martin-a a | b cd <gnu>;
 			
 			/**
			 * No whitespace is allowed between the number and units if provided.
			 *  TODO wie bau ma so was ein!?
			 * Sizes can either be a percentage or a length with units. If units are not specified then specified the 'px' is assumed. Some units are relative and others absolute.
			 * 
			 * Relative
			 * <ul>
			 * <li>px: pixels, relative to the viewing device</li>
			 * <li>em: the 'font-size' of the relevant font</li>
			 * <li>ex: the 'x-height' of the relevant font</li>
			 * </ul>
			 * Absolute
			 * <ul>
			 * <li>in: inches � 1 inch is equal to 2.54 centimeters.</li>
			 * <li>cm: centimeters</li>
			 * <li>mm: millimeters</li>
			 * <li>pt: points � the points used by CSS 2.1 are equal to 1/72nd of an inch.</li>
			 * <li>pc: picas � 1 pica is equal to 12 points.</li>
			 * </ul>
			 * Percentages
			 * These are a percentage of some length, they are context sensitive so what they are relative to depends on where they are specified. Each property that supports a percentage should specify if percentage is supported and if it is what it is relative to.
			 */
 			-complex-doku xxx;
 		}
 	}
 	
 	/**
 	 * Das Gnu element ist auch ein Element, auch wenn es Gnu heisst.
 	 */
 	Gnu {
 		
 		/**
 		 * TODO: Roflcopter beschreiben.
 		 */
 		-roflkopter a | b | c default: c;
 		
 	}
 	
 	RuleComma = ,;
 	
 	RuleAssignment0 = a;
 	
 	RuleOr0 = a | b;
 	RuleOr1 = a | b | c;
 	RuleOr2 = <RuleOr0> | <RuleOr1>;
 	
 	RuleXor0 = a || b;
 	RuleXor1 = a || b || c;
 	 
 	RuleConcat0 = a b;
 	RuleConcat1 = a b a;
 	
 	postfix0 = a*;
 	postfix1 = a+;
 	postfix2 = a?;
 	postfix3 = a* | b*;
 	postfix4 = a* | b* | c*;
 	postfix5 = [a | b]?;
 
 	simple = a | b | c;
	
	simple1 = [ a ];
	
	simple2 = <simple1>;
	
	concat1 = a b;
	concat2 = a b c;
	concat3 = [ a | b ] c;
	concat4 = [ a | b ] [ c | d ];
	concat5 = [ a | b ] c d;
	
	complex = [ a | b ] <simple> [ halli || galli ];
	
	size-unit = px | em | mm;
	
	size = DOUBLE <size-unit>;
	
	root = <bg-position> [ , <bg-position> ]*;
 
 bg-position = [
    [ [ <size> | left | center | right ] [ <size> | top | center | bottom ]? ]
    | [ [ center | [ left | right ] <size>? ] || [ center | [ top | bottom ] <size>? ]
] ];


	package subpackage {
		 
		
	}
}