package javafx {
	
	package debug {
		Debug {
			p0 x | x x x;
			p1 x | a b c;
			p2 [ x | x a ] y;
			p3 [ A | B | C ] [ D double ]? [ x [ y | z ] ]? p;
		}
	}
	
	boolean = true | false;
	string = $".*"$; // TODO Move to lang
	
	/**
	 * No whitespace is allowed between the number and units if provided.
	 *  TODO wie bau ma so was ein!?
	 * Sizes can either be a percentage or a length with units. If units are not specified then specified the 'px' is assumed. Some units are relative and others absolute.
	 * 
	 * Relative
	 * <ul>
	 * <li>px: pixels, relative to the viewing device</li>
	 * <li>em: the 'font-size' of the relevant font</li>
	 * <li>ex: the 'x-height' of the relevant font</li>
	 * </ul>
	 * Absolute
	 * <ul>
	 * <li>in: inches - 1 inch is equal to 2.54 centimeters.</li>
	 * <li>cm: centimeters</li>
	 * <li>mm: millimeters</li>
	 * <li>pt: points - the points used by CSS 2.1 are equal to 1/72nd of an inch.</li>
	 * <li>pc: picas - 1 pica is equal to 12 points.</li>
	 * </ul>
	 * Percentages
	 * These are a percentage of some length, they are context sensitive so what they are relative to depends on where they are specified. Each property that supports a percentage should specify if percentage is supported and if it is what it is relative to.
	 */
	length =double[ px | mm | cm | in | pt | pc | em | ex ]?;
	
	size = <length> | <percentage>;
	
	/**
	 * These are a percentage of some length, typically to the width or height of a node.
	 */
	percentage = double $%$;
	
	/**
	 * An angle is a <number> with one of the following units.
	 * <ul>
	 * <li>deg: angle in degrees - all other angle units are converted to degrees.</li>
	 * <li>rad: angle in radians</li>
	 * <li>grad: angle in gradians</li>
	 * <li>turn: angle in turns</li>
	 * </ul>
	 */
	angle = double[ deg | rad | grad | turn];
	
	/**
	 * A point is an {x,y} coordinate.
	 */
	point = [ [ <length> <length> ] | [ <percentage> | <percentage> ] ];
	
	/**
	 * Stops are per W3C color-stop syntax.
	 * In a series of <color-stop>, stop distance values must all be <percentage> or <length>. Furthermore, if <length> values are used, then the distance value for first and last stop in the series must be specified. This restriction may be removed in a future release.
	 * 
	 * "red, white 70%, blue" is valid since the distance for red and blue is assumed to be 0% and 100%, respectively.
	 * "red 10, white, blue 90" is valid. Because distance for red and blue is 10 and 90, respectively, the distance for white can be calculated.
	 * "red, white 70, blue" is not valid since distance units do not agree.
	 * "red, white, blue" is valid. The stops are distributed evenly between 0% and 100%.
	 */
	color-stop = [ <color> [ <percentage> | <length>]? ];
	
	/**
	 * <address> can be an absolute URI, for example:
	 * url(http://example.com)
	 * url('http://example.com')
	 * url("http://example.com")
	 * or it can be relative to the location of the CSS file.
	 */
	uri = url( address ); // TODO
	
	/**
	 * JavaFX CSS currently supports the DropShadow and InnerShadow effects from the JavaFX platform. See the class documentation in javafx.scene.effect for further details about the semantics of the various effect parameters.
	 */
	effect = <effect-dropshadow> | <effect-innershadow>;
	blur-type = [ gaussian | one-pass-box | three-pass-box | two-pass-box ];
	/** 
	 * A high-level effect that renders a shadow of the given content behind the content.
	 * TODO params
	 */
	effect-dropshadow = dropshadow( <blur-type>, <color>, double, double, double, double);
	/**
	 * A high-level effect that renders a shadow inside the edges of the given content.
	 * TODO params
	 */
	effect-innershadow = innershadow( <blur-type>, <color>, double, double, double, double);
	
	/**
	 * The string name of the font family. An actual font family name available on the system can be used, or one of the following generic family names can be used:
	 */
	font-family = string | serif | sans-serif | cursive | fantasy | monospace;
	/**
	 * The size of the font, using the <size> syntax.
	 */
	font-size = <size>;
	/**
	 * The font's style, using the following syntax:
	 */
	font-style = normal | italic | oblique;
	/**
	 * The font's weight, using the following syntax:
	 */
	font-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;
	/**
	 * This font shorthand property can be used in place of the above properties. It uses the following syntax:
	 */
	font = [ <font-style> || <font-weight> ]? <font-size> <font-family>;
	
	color = <named-color> | <looked-up-color> | <rgb-color> | <hsb-color> | <color-function>;
	
	/**
	 * CSS supports a bunch of named constant colors. Named colors can be specified with just their unquoted name for example:<br />
	 * <code>
	 * .button {<br />
     * &nbsp;&nbsp;&nbsp;&nbsp;-fx-background-color: red;<br />
     * }
	 * </code><br />
	 * 
	 * The named colors that are available in CSS are:
	 * 
	 * <table summary="property table" class="html4colortable">
     * <tbody>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% aliceblue;"></span>
     *     </td>
     *     <td>aliceblue = #f0f8ff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% antiquewhite;"></span>
     *     </td>
     *     <td>antiquewhite = #faebd7</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% aqua;"></span>
     *     </td>
     *     <td>aqua = #00ffff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% aquamarine;"></span>
     *     </td>
     *     <td>aquamarine = #7fffd4</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% azure;"></span>
     *     </td>
     *     <td>azure = #f0ffff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% beige;"></span>
     *     </td>
     *     <td>beige = #f5f5dc</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% bisque;"></span>
     *     </td>
     *     <td>bisque = #ffe4c4</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% black;"></span>
     *     </td>
     *     <td>black = #000000</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% blanchedalmond;"></span>
     *     </td>
     *     <td>blanchedalmond = #ffebcd</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% blue;"></span>
     *     </td>
     *     <td>blue = #0000ff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% blueviolet;"></span>
     *     </td>
     *     <td>blueviolet = #8a2be2</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% brown;"></span>
     *     </td>
     *     <td>brown = #a52a2a</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% burlywood;"></span>
     *     </td>
     *     <td>burlywood = #deb887</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% cadetblue;"></span>
     *     </td>
     *     <td>cadetblue = #5f9ea0</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% chartreuse;"></span>
     *     </td>
     *     <td>chartreuse = #7fff00</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% chocolate;"></span>
     *     </td>
     *     <td>chocolate = #d2691e</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% coral;"></span>
     *     </td>
     *     <td>coral = #ff7f50</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% cornflowerblue;"></span>
     *     </td>
     *     <td>cornflowerblue = #6495ed</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% cornsilk;"></span>
     *     </td>
     *     <td>cornsilk = #fff8dc</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% crimson;"></span>
     *     </td>
     *     <td>crimson = #dc143c</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% cyan;"></span>
     *     </td>
     *     <td>cyan = #00ffff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkblue;"></span>
     *     </td>
     *     <td>darkblue = #00008b</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkcyan;"></span>
     *     </td>
     *     <td>darkcyan = #008b8b</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkgoldenrod;"></span>
     *     </td>
     *     <td>darkgoldenrod = #b8860b</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkgray;"></span>
     *     </td>
     *     <td>darkgray = #a9a9a9</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkgreen;"></span>
     *     </td>
     *     <td>darkgreen = #006400</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkgrey;"></span>
     *     </td>
     *     <td>darkgrey = #a9a9a9</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkkhaki;"></span>
     *     </td>
     *     <td>darkkhaki = #bdb76b</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkmagenta;"></span>
     *     </td>
     *     <td>darkmagenta = #8b008b</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkolivegreen;"></span>
     *     </td>
     *     <td>darkolivegreen = #556b2f</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkorange;"></span>
     *     </td>
     *     <td>darkorange = #ff8c00</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkorchid;"></span>
     *     </td>
     *     <td>darkorchid = #9932cc</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkred;"></span>
     *     </td>
     *     <td>darkred = #8b0000</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darksalmon;"></span>
     *     </td>
     *     <td>darksalmon = #e9967a</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkseagreen;"></span>
     *     </td>
     *     <td>darkseagreen = #8fbc8f</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkslateblue;"></span>
     *     </td>
     *     <td>darkslateblue = #483d8b</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkslategray;"></span>
     *     </td>
     *     <td>darkslategray = #2f4f4f</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkslategrey;"></span>
     *     </td>
     *     <td>darkslategrey = #2f4f4f</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkturquoise;"></span>
     *     </td>
     *     <td>darkturquoise = #00ced1</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% darkviolet;"></span>
     *     </td>
     *     <td>darkviolet = #9400d3</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% deeppink;"></span>
     *     </td>
     *     <td>deeppink = #ff1493</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% deepskyblue;"></span>
     *     </td>
     *     <td>deepskyblue = #00bfff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% dimgray;"></span>
     *     </td>
     *     <td>dimgray = #696969</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% dimgrey;"></span>
     *     </td>
     *     <td>dimgrey = #696969</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% dodgerblue;"></span>
     *     </td>
     *     <td>dodgerblue = #1e90ff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% firebrick;"></span>
     *     </td>
     *     <td>firebrick = #b22222</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% floralwhite;"></span>
     *     </td>
     *     <td>floralwhite = #fffaf0</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% forestgreen;"></span>
     *     </td>
     *     <td>forestgreen = #228b22</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% fuchsia;"></span>
     *     </td>
     *     <td>fuchsia = #ff00ff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% gainsboro;"></span>
     *     </td>
     *     <td>gainsboro = #dcdcdc</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% ghostwhite;"></span>
     *     </td>
     *     <td>ghostwhite = #f8f8ff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% gold;"></span>
     *     </td>
     *     <td>gold = #ffd700</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% goldenrod;"></span>
     *     </td>
     *     <td>goldenrod = #daa520</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% gray;"></span>
     *     </td>
     *     <td>gray = #808080</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% green;"></span>
     *     </td>
     *     <td>green = #008000</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% greenyellow;"></span>
     *     </td>
     *     <td>greenyellow = #adff2f</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% grey;"></span>
     *     </td>
     *     <td>grey = #808080</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% honeydew;"></span>
     *     </td>
     *     <td>honeydew = #f0fff0</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% hotpink;"></span>
     *     </td>
     *     <td>hotpink = #ff69b4</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% indianred;"></span>
     *     </td>
     *     <td>indianred = #cd5c5c</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% indigo;"></span>
     *     </td>
     *     <td>indigo = #4b0082</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% ivory;"></span>
     *     </td>
     *     <td>ivory = #fffff0</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% khaki;"></span>
     *     </td>
     *     <td>khaki = #f0e68c</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lavender;"></span>
     *     </td>
     *     <td>lavender = #e6e6fa</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lavenderblush;"></span>
     *     </td>
     *     <td>lavenderblush = #fff0f5</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lawngreen;"></span>
     *     </td>
     *     <td>lawngreen = #7cfc00</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lemonchiffon;"></span>
     *     </td>
     *     <td>lemonchiffon = #fffacd</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightblue;"></span>
     *     </td>
     *     <td>lightblue = #add8e6</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightcoral;"></span>
     *     </td>
     *     <td>lightcoral = #f08080</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightcyan;"></span>
     *     </td>
     *     <td>lightcyan = #e0ffff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightgoldenrodyellow;"></span>
     *     </td>
     *     <td>lightgoldenrodyellow = #fafad2</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightgray;"></span>
     *     </td>
     *     <td>lightgray = #d3d3d3</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightgreen;"></span>
     *     </td>
     *     <td>lightgreen = #90ee90</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightgrey;"></span>
     *     </td>
     *     <td>lightgrey = #d3d3d3</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightpink;"></span>
     *     </td>
     *     <td>lightpink = #ffb6c1</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightsalmon;"></span>
     *     </td>
     *     <td>lightsalmon = #ffa07a</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightseagreen;"></span>
     *     </td>
     *     <td>lightseagreen = #20b2aa</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightskyblue;"></span>
     *     </td>
     *     <td>lightskyblue = #87cefa</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightslategray;"></span>
     *     </td>
     *     <td>lightslategray = #778899</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightslategrey;"></span>
     *     </td>
     *     <td>lightslategrey = #778899</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightsteelblue;"></span>
     *     </td>
     *     <td>lightsteelblue = #b0c4de</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lightyellow;"></span>
     *     </td>
     *     <td>lightyellow = #ffffe0</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% lime;"></span>
     *     </td>
     *     <td>lime = #00ff00</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% limegreen;"></span>
     *     </td>
     *     <td>limegreen = #32cd32</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% linen;"></span>
     *     </td>
     *     <td>linen = #faf0e6</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% magenta;"></span>
     *     </td>
     *     <td>magenta = #ff00ff</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% maroon;"></span>
     *     </td>
     *     <td>maroon = #800000</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumaquamarine;"></span>
     *     </td>
     *     <td>mediumaquamarine = #66cdaa</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumblue;"></span>
     *     </td>
     *     <td>mediumblue = #0000cd</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumorchid;"></span>
     *     </td>
     *     <td>mediumorchid = #ba55d3</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumpurple;"></span>
     *     </td>
     *     <td>mediumpurple = #9370db</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumseagreen;"></span>
     *     </td>
     *     <td>mediumseagreen = #3cb371</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumslateblue;"></span>
     *     </td>
     *     <td>mediumslateblue = #7b68ee</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumspringgreen;"></span>
     *     </td>
     *     <td>mediumspringgreen = #00fa9a</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumturquoise;"></span>
     *     </td>
     *     <td>mediumturquoise = #48d1cc</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mediumvioletred;"></span>
     *     </td>
     *     <td>mediumvioletred = #c71585</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% midnightblue;"></span>
     *     </td>
     *     <td>midnightblue = #191970</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mintcream;"></span>
     *     </td>
     *     <td>mintcream = #f5fffa</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% mistyrose;"></span>
     *     </td>
     *     <td>mistyrose = #ffe4e1</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% moccasin;"></span>
     *     </td>
     *     <td>moccasin = #ffe4b5</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% navajowhite;"></span>
     *     </td>
     *     <td>navajowhite = #ffdead</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% navy;"></span>
     *     </td>
     *     <td>navy = #000080</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% oldlace;"></span>
     *     </td>
     *     <td>oldlace = #fdf5e6</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% olive;"></span>
     *     </td>
     *     <td>olive = #808000</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% olivedrab;"></span>
     *     </td>
     *     <td>olivedrab = #6b8e23</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% orange;"></span>
     *     </td>
     *     <td>orange = #ffa500</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% orangered;"></span>
     *     </td>
     *     <td>orangered = #ff4500</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% orchid;"></span>
     *     </td>
     *     <td>orchid = #da70d6</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% palegoldenrod;"></span>
     *     </td>
     *     <td>palegoldenrod = #eee8aa</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% palegreen;"></span>
     *     </td>
     *     <td>palegreen = #98fb98</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% paleturquoise;"></span>
     *     </td>
     *     <td>paleturquoise = #afeeee</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% palevioletred;"></span>
     *     </td>
     *     <td>palevioletred = #db7093</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% papayawhip;"></span>
     *     </td>
     *     <td>papayawhip = #ffefd5</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% peachpuff;"></span>
     *     </td>
     *     <td>peachpuff = #ffdab9</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% peru;"></span>
     *     </td>
     *     <td>peru = #cd853f</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% pink;"></span>
     *     </td>
     *     <td>pink = #ffc0cb</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% plum;"></span>
     *     </td>
     *     <td>plum = #dda0dd</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% powderblue;"></span>
     *     </td>
     *     <td>powderblue = #b0e0e6</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% purple;"></span>
     *     </td>
     *     <td>purple = #800080</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% red;"></span>
     *     </td>
     *     <td>red = #ff0000</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% rosybrown;"></span>
     *     </td>
     *     <td>rosybrown = #bc8f8f</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% royalblue;"></span>
     *     </td>
     *     <td>royalblue = #4169e1</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% saddlebrown;"></span>
     *     </td>
     *     <td>saddlebrown = #8b4513</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% salmon;"></span>
     *     </td>
     *     <td>salmon = #fa8072</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% sandybrown;"></span>
     *     </td>
     *     <td>sandybrown = #f4a460</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% seagreen;"></span>
     *     </td>
     *     <td>seagreen = #2e8b57</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% seashell;"></span>
     *     </td>
     *     <td>seashell = #fff5ee</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% sienna;"></span>
     *     </td>
     *     <td>sienna = #a0522d</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% silver;"></span>
     *     </td>
     *     <td>silver = #c0c0c0</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% skyblue;"></span>
     *     </td>
     *     <td>skyblue = #87ceeb</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% slateblue;"></span>
     *     </td>
     *     <td>slateblue = #6a5acd</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% slategray;"></span>
     *     </td>
     *     <td>slategray = #708090</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% slategrey;"></span>
     *     </td>
     *     <td>slategrey = #708090</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% snow;"></span>
     *     </td>
     *     <td>snow = #fffafa</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% springgreen;"></span>
     *     </td>
     *     <td>springgreen = #00ff7f</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% steelblue;"></span>
     *     </td>
     *     <td>steelblue = #4682b4</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% tan;"></span>
     *     </td>
     *     <td>tan = #d2b48c</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% teal;"></span>
     *     </td>
     *     <td>teal = #008080</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% thistle;"></span>
     *     </td>
     *     <td>thistle = #d8bfd8</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% tomato;"></span>
     *     </td>
     *     <td>tomato = #ff6347</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% turquoise;"></span>
     *     </td>
     *     <td>turquoise = #40e0d0</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% violet;"></span>
     *     </td>
     *     <td>violet = #ee82ee</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% wheat;"></span>
     *     </td>
     *     <td>wheat = #f5deb3</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% white;"></span>
     *     </td>
     *     <td>white = #ffffff</td>
     *   </tr>
     *   <tr>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% whitesmoke;"></span>
     *     </td>
     *     <td>whitesmoke = #f5f5f5</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% yellow;"></span>
     *     </td>
     *     <td>yellow = #ffff00</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% yellowgreen;"></span>
     *     </td>
     *     <td>yellowgreen = #9acd32</td>
     *     <td><span style="display:block;width:16px;height:16px;border:2px solid black;background: none repeat scroll 0% 50% transparent;"></span>
     *     </td>
     *     <td>transparent = rgba(0,0,0,0)</td>
     *   </tr>
     * </tbody>
     * </table>
	 */
	named-color = 	aliceblue 		| anitquewhite 		| aqua 					| aquamarine 		|
					azure 			| beige 			| bisque 				| black 			|
					blanchedalmond 	| blue 				| blueviolet 			| brown 			|
					burlywood 		| cadetblue 		| chartreuse 			| chocolate 		|
					coral 			| cornflowerblue 	| cornsilk 				| crimson 			|
					cyan 			| darkblue 			| darkcyan 				| darkgoldenrod 	|
					darkgray 		| darkgreen 		| darkgrey 				| darkkhaki			|
					darkmagenta 	| darkolivegreen 	| darkorange 			| darkorchid 		|
					darkred 		| darksalmon 		| darkseagreen 			| darkslateblue 	|
					darkslategray 	| darkslategrey 	| darkturquoise 		| darkviolet 		|
					deeppink 		| deepskyblue 		| dimgray 				| dimgrey 			|
					dodgerblue		| firebrick			| floralwhite 			| forestgreen 		|
					fuchsia			| gainsboro 		| ghostwhite 			| gold 				|
					goldenrod		| gray 				| green 				| greenyellow 		|
					grey			| honeydew 			| hotpink 				| indianred 		|
					indigo			| ivory 			| khaki 				| lavender 			|
					lavenderblush 	| lawngreen 		| lemonchiffon 			| lightblue 		|
					lightcoral 		| lightcyan 		| lightgoldenrodyellow 	| lightgray 		|
					lightgreen 		| lightgrey 		| lightpink 			| lightsalmon 		|
					lightseagreen 	| lightskyblue 		| lightslategray 		| lightslategrey 	|
					lightsteelblue  | lightyellow 		| lime 					| limegreen 		|
					linen 			| magenta 			| maroon 				| mediumaquamarine 	|
					mediumblue 		| mediumorchid 		| mediumpurple 			| mediumseagreen 	|
					mediumslateblue | mediumspringgreen | mediumturquoise 		| mediumvioletred 	|
					midnightblue 	| mintcream 		| mistyrose 			| moccasin 			|
					navajowhite		| navy 				| oldlace 				| olive 			|
					olivedrab 		| orange 			| orangered 			| orchid 			|
					palegoldenrod 	| palegreen 		| paleturquoise 		| palevioletred 	|
					papayawhip 		| peachpuff 		| peru  				| pink 				|
					plum 			| powderblue 		| purple 				| red 				|
					rosybrown 		| royalblue 		| saddlebrown 			| salmon 			|
					sandybrown 		| seagreen 			| seashell 				| sienna 			|
					silver 			| skyblue 			| slateblue 			| slategray 		|
					slategrey 		| snow 				| springgreen 			| steelblue 		|
					tan 			| teal 				| thistle 				| tomato 			|
					turquoise 		| violet 			| wheat 				| white 			|
					whitesmoke 		| yellow 			| yellowgreen 			| transparent
					; // TODO finish this!
					
//	annotated-named-color-1 = 	/** @color #123456 */ aliceblue |
//								/** @color #123456 */ antiquewhite;
//								
//	annotated-named-color-2 =	@Color(#123456) aliceblue |
//								@Color(#123456) antiquewhite;
//								
//	annotated-named-color-3 =	@Alias(#123456) aliceblue |
//								@Alias(#123456) antiquewhite;
//								
//	annotated-named-color-4 =	@Color @Alias(#123456) aliceblue |
//								@Color @Alias(#123456) antiquewhite
												
	/**
	 * <p>
	 * With looked-up colors you can refer to any other color property that is set on the current node or any of its parents. This is a very powerful feature, as it allows a generic palette of colors to be specified on the scene then used thoughout the application. If you want to change one of those palette colors you can do so at any level in the scene tree and it will affect that node and all its decendents. Looked-up colors are not looked up until they are applied, so they are live and react to any style changes that might occur, such as replacing a palette color at runtime with the "style" property on a node.
	 * </p>
	 * <p>
	 * In the following example, all background color of all buttons uses the looked up color "abc".
	 * </p>
	 * <p>
	 * <code>
	 * .root { abc: #f00 }
	 * </code>
	 * </p>
	 * <p>
	 * <code>
	 * .button { -fx-background-color: abc }
	 * </code>
	 * </p>
	 */
	looked-up-color = reference_to_other_color_property; // TODO howto implement?!
	
	/**
	 * The format of an RGB value in hexadecimal notation is a ‘#’ immediately followed by either three or six hexadecimal characters. The three-digit RGB notation (#rgb) is converted into six-digit form (#rrggbb) by replicating digits, not by adding zeros. For example, #fb0 expands to #ffbb00. This ensures that white (#ffffff) can be specified with the short notation (#fff) and removes any dependencies on the color depth of the display.
	 */
	hashcolor = $#[0123456789ABCDEFabcdef]{6}$ | $#[0123456789ABCDEFabcdef]{3}$;
	
	/**
	 * The RGB color model is used in numerical color specifications.
	 */
	rgb-color = <hashcolor> | <rgb> | rgbp | <rgba>;
	
	/**
	 * The format of an RGB value in the functional notation is ‘rgb(’ followed by a comma-separated list of three numerical values (either three decimal integer values or three percentage values) followed by ‘)’. The integer value 255 corresponds to 100%, and to F or FF in the hexadecimal notation: rgb(255,255,255) = rgb(100%,100%,100%) = #FFF. White space characters are allowed around the numerical values.
	 */
	rgb = rgb(int(0->255), int(0->255), int(0->255) | <percentage>, <percentage>, <percentage>);
	
	/**
	 * <p>
	 * This is an extension of the RGB color model to include an ‘alpha’ value that specifies the opacity of a color. This is accomplished via a functional syntax of the form rgba(...) form that takes a fourth parameter which is the alpha value. The alpha value must be a number in the range 0.0 (representing completely transparent) and 1.0 (completely opaque). As with the rgb() function, the red, green, and blue values may be decimal integers or percentages. The following examples all specify the same color:
	 * </p>
	 * <code>.label { -fx-text-fill: rgb(255,0,0) }</code><br /> 
     * <code>.label { -fx-text-fill: rgba(255,0,0,1)}</code><br /> 
     * <code>.label { -fx-text-fill: rgb(100%,0%,0%) }</code><br /> 
     * <code>.label { -fx-text-fill: rgba(100%,0%,0%,1) }</code>
	 */
	rgba = rgba(int(0->255), int(0->255), int(0->255), double(.0->1.0) | <percentage>, <percentage>, <percentage>, double(.0->1.0));
	
	// TODO hsb colors
	/**
	 * Colors can be specified using the HSB (sometimes called HSV) color model
	 */
	hsb-color = <hsb> | <hsba>;
	
	/**
	 * The first number is hue, a number in the range 0 to 360 degrees. The second number is saturation, a percentage in the range 0% to 100%. The third number is brightness, also a percentage in the range 0% to 100%.
	 */
	hsb = hsb(double(.0->360.0), <percentage>, <percentage>);

	/**
	 * The first number is hue, a number in the range 0 to 360 degrees. The second number is saturation, a percentage in the range 0% to 100%. The third number is brightness, also a percentage in the range 0% to 100%.
	 * The fourth parameter at the end which is a alpha value in the range 0.0 to 1.0, specifying completely transparent and completely opaque, respectively
	 */
	hsba = hsba(double(.0->360.0), <percentage>, <percentage>, double(.0->1.0));

	/**
	 * JavaFX supports some color computation functions. These compute new colors from input colors at the time the color style is applied. This enables a color theme to be specified using a single base color and to have variant colors computed from that base color. There are two color functions: derive() and ladder().
	 */
	color-function = <ladder> | <derive>;
	
	/**
	 * The ladder function interpolates between colors. The effect is as if a gradient is created using the stops provided, and then the brightness of the provided <color> is used to index a color value within that gradient. At 0% brightness, the color at the 0.0 end of the gradient is used; at 100% brightness, the color at the 1.0 end of the gradient is used; and at 50% brightness, the color at 0.5, the midway point of the gradient, is used. Note that no gradient is actually rendered. This is merely an interpolation function that results in a single color. 
	 */
	ladder = ladder(<color>, <color-stop> [, <color-stop>]+);
	
	/**
	 * The derive function takes a color and computes a brighter or darker version of that color. The second parameter is the brightness offset, ranging from -100% to 100%. Positive percentages indicate brighter colors and negative percentages indicate darker colors. A value of -100% means completely black, 0% means no change in brightness, and 100% means completely white.
	 */
	derive = derive(<color>, <percentage>);

	/**
	 * Paint values can either be a solid color specified in one of the color syntaxes or they can be a linear or radial gradient.
	 */
	paint = <color> | <linear-gradient> | <radial-gradient>;
	side-or-corner = [left | right] || [top | bottom];
	
	/**
	 * <p>
	 * Linear gradient creates a gradient going though all the stop colors along the line between the "from" <point> and the "to" <point>. If the points are percentages, then they are relative to the size of the area being filled. Percentage and length sizes can not be mixed in a single gradient function.
	 * </p>
	 * <p>
	 * If neither repeat nor reflect are given, then the CycleMethod defaults "NO_CYCLE".
	 * </p>
	 * <p>
	 * If neither [from <point> to <point>] nor [ to <side-or-corner> ] are given, then the gradient direction defaults to 'to bottom'.
	 * </p>
	 * <p>
	 * Stops are per W3C color-stop syntax and are normalized accordingly.
	 * </p>
	 * <p>
	 * This example will create a gradient from top left to bottom right of the filled area with red at the top left corner and black at the bottom right.
	 * </p>
	 * <p>
	 * <code>linear-gradient(to bottom right, red, black)</code>
	 * </p>
	 * <p>
	 * This is equivalent to:
	 * </p>
	 * <p>
	 * <code>
	 * linear-gradient(from 0% 0% to 100% 100%, red 0%, black 100%)
	 * </code>
	 * </p>
	 * <p>
	 * This more complex example will create a 50px high bar at the top with a 3 color gradient with white underneath for the rest of the filled area.
	 * </p>
	 * <p>
	 * <code>
	 * linear-gradient(from 0px 0px to 0px 50px, gray, darkgray 50%, dimgray 99%, white)
	 * </code>
	 * </p>
	 */
	linear-gradient = linear-gradient( [ [from <point> to <point>] | [ to <side-or-corner>], ]? [ [ repeat | reflect ], ]? <color-stop>[, <color-stop>]+);
	/**
	 * <p>
	 * If neither repeat nor reflect are given, then the CycleMethod defaults "NO_CYCLE".
	 * </p>
	 * <p>
	 * <p>
	 * Stops are per W3C color-stop syntax and are normalized accordingly.
	 * </p>
	 * <p>
	 * Following are examples of the use of radial-gradient:
	 * </p>
	 * <code>radial-gradient(radius 100%, red, darkgray, black)</code><br />
	 * <code>radial-gradient(focus-angle 45deg, focus-distance 20%, center 25% 25%, radius 50%, reflect, gray, darkgray 75%, dimgray)</code>
	 */
	radial-gradient = radial-gradient([ focus-angle <angle>, ]? [ focus-distance <percentage>, ]? [ center <point>, ]? radius [ <length> | <percentage> ] [ [ repeat | reflect ], ]? <color-stop>[, <color-stop>]+);
	
	
	package scene {
		blend-mode = [ add | blue | color-burn | color-dodge | darken | difference | exclusion | green | hard-light | lighten | multiply | overlay | red | screen | soft-light | src-atop | src-in | src-out | src-over ];
		cursor = [ null | crosshair | default | hand | move | e-resize | h-resize | ne-resize | nw-resize | n-resize | se-resize | sw-resize | s-resize | w-resize | v-resize | text | wait ] | <uri>;
		visibility = [ visible | hidden | collapse | inherit ];
		
		/**
		 * Base class for scene graph nodes. A scene graph is a set of tree data structures
 		 * where every item has zero or one parent, and each item is either
 		 * a "leaf" with zero sub-items or a "branch" with zero or more sub-items.
		 */
		Node {
			/**
			 * The mode used to blend this individual node into the scene behind it
			 */
			-fx-blend-mode <blend-mode> default: null;
			/**
			 * Defines the mouse cursor for this Node and subnodes
			 */
			-fx-cursor <cursor> default: null;
			/**
			 * Specifies an effect to apply to this Node
			 */
			-fx-effect <effect> default: null;
			/**
			 * Specifies whether this Node should be a part of focus traversal cycle
			 */
			-fx-focus-traversable <boolean> default: null;
			/**
			 * Opacity can be thought of conceptually as a postprocessing operation. Conceptually, after the node (including its descendants) is rendered into an RGBA offscreen image, the opacity setting specifies how to blend the offscreen rendering into the current composite rendering. 
			 */
			-fx-opacity double(.0->1.0) default: 1.0;
			/**
			 * This is the angle of the rotation in degrees. Zero degrees is at 3 o'clock (directly to the right). Angle values are positive clockwise. Rotation is about the center.
			 */
			-fx-rotate double default: 0;
			/**
			 * Defines the factor by which coordinates are scaled about the center of the
     		 * object along the X axis of this Node.
			 */
			-fx-scale-x double default: 1;
			/**
			 * Defines the factor by which coordinates are scaled about the center of the
     		 * object along the Y axis of this Node.
			 */
			-fx-scale-y double default: 1;
			/**
			 * Defines the factor by which coordinates are scaled about the center of the
     		 * object along the Z axis of this Node.
			 */
			-fx-scale-z double default: 1;
			/**
			 * Defines the x coordinate of the translation that is added to this Node's
     		 * transform.
			 */
			-fx-translate-x double default: 0;
			/**
			 * Defines the y coordinate of the translation that is added to this Node's
     		 * transform.
			 */
			-fx-translate-y double default: 0;
			/**
			 * Defines the z coordinate of the translation that is added to this Node's
     		 * transform.
			 */
			-fx-translate-z double default: 0;
			visibility <visibility> default: visible;
			
			/**
			 * applies when the disabled variable is true
			 */
			:disabled
			/**
			 * applies when the focused variable is true
			 */
			:focused
			/**
			 * applies when the hover variable is true
			 */
			:hover
			/**
			 * applies when the pressed variable is true
			 */
			:pressed
			/**
			 * apples when the mnemonic affordance (typically an underscore) should be shown.
			 */
			:show-mnemonic
		}
		/**
		 * The base class for all nodes that have children in the scene graph.
		 */
		Parent extends Node {
		}
		/**
		 * A Group node contains a list of children that are rendered in order whenever this node is rendered.
		 */
		Group extends Parent {
		}
		
		package image {
			/**
			 * The ImageView is a Node used for painting images loaded with Image class.
			 */
			ImageView extends Node {
				-fx-image <uri> default: null;
			}
		}
		package layout {
			bg-position = [ [ [ <size> | left | center | right ] [ <size> | top | center | bottom ]? ] | [ [ center | [ left | right ] <size>? ] || [ center | [ top | bottom ] <size>? ] ] ];
			repeat-style = repeat-x | repeat-y | [repeat | space | round | stretch | no-repeat] [repeat | space | round | stretch | no-repeat]?; // NOTE: rewritten from  <repeat-style> = repeat-x | repeat-y | [repeat | space | round | stretch | no-repeat]{1,2} since we do not support {} yet
			bg-size = [ <size> | auto ] [ <size> | auto ]? | cover | contain | stretch; // Note: rewritten from = [ <size> | auto ]{1,2} | cover | contain | stretch since we do not support {} yet
			
			border-style = <dash-style> [phase double]? [centered | inside | outside]? [line-join [miter double | bevel | round]]? [line-cap [square | butt | round]]?;
			dash-style = [ none | solid | dotted | dashed | <segments> ];
			segments = segments( double, double [, double]*);
			
			alignment = [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ];
			
			//TODO REMOVE if attribute references are available
			helper-background-color = <paint> [, <paint>]*; 
			helper-background-insets = [<size> | <size> <size> <size> <size>] [ , [ <size> | <size> <size> <size> <size>] ]*;
			helper-background-radius = [<size> | <size> <size> <size> <size>] [ , [ <size> | <size> <size> <size> <size>] ]*;
			helper-background-image = <uri> [ , <uri> ]*;
			helper-background-position = <bg-position> [ , <bg-position> ]*;
			helper-background-repeat =<repeat-style> [ , <repeat-style> ]*;
			helper-background-size = <bg-size> [ , <bg-size> ]*;
			helper-border-color = [<paint> | <paint> <paint> <paint> <paint>] [ , [<paint> | <paint> <paint> <paint> <paint>] ]*;
			helper-border-insets = [<size> | <size> <size> <size> <size>] [ , [ <size> | <size> <size> <size> <size>] ]*;
			helper-border-radius = [<size> | <size> <size> <size> <size>] [ , [ <size> | <size> <size> <size> <size>] ]*;
			helper-border-style =<border-style> [ , <border-style> ]*;
			helper-border-width = [<size> | <size> <size> <size> <size>] [ , [ <size> | <size> <size> <size> <size>] ]*;
			helper-border-image-source = <uri> [ , <uri>]*;
			helper-border-image-insets = [<size> | <size> <size> <size> <size>] [ , [ <size> | <size> <size> <size> <size> ] ]*;
			helper-border-image-repeat = <repeat-style> [ , <repeat-style> ]*;
			helper-border-image-slice = [<size> | <size> <size> <size> <size> ] fill? [ , [ <size> | <size><size> <size> <size> <size> ] fill? ]*;
			helper-border-image-width = [<size> | <size> <size> <size> <size>] [ , [ <size> | <size> <size> <size> <size>] ]*;
			
			/**
			 * <p>
			 * A Region is a Node (extending from Parent) with backgrounds and borders that are styleable via CSS. A Region is typically a rounded rectangle, though this can be modified through CSS to be an arbitrary shape. Regions can contain other Region objects (sub-regions) or they can contain sub-controls. All Regions have the same set of CSS properties as described below.
			 * </p>
			 */
			Region extends Parent {
				
				// BACKGROUND FILLS (see CSS Backgrounds and Borders Module Level 3: Backgrounds)
				/** 
				 * A series of paint values separated by commas.
				 */
				-fx-background-color <helper-background-color> default: null;
				/**
				 * A series of size values or sets of four size values, separated by commas. A single size 
				 * value means all insets are the same. Otherwise, the four values for each inset are given in 
				 * the order top, right, bottom, left. Each comma-separated value or set of values in the 
				 * series applies to the corresponding background color.
				 */
				-fx-background-insets <helper-background-insets> default: null;
				// BACKGROUND IMAGES (see CSS Backgrounds and Borders Module Level 3: Background Image)
				/**
				 * A series of image URIs separated by commas.
				 */
				-fx-background-image <helper-background-image> default: null;
				/**
				 * A series of <bg-position> values separated by commas. Each bg-position item in the series 
				 * applies to the corresponding image in the background-image series.
				 */
				-fx-background-position <helper-background-position> default: null;
				-fx-background-repeat <helper-background-repeat> default: null;
				-fx-background-size <helper-background-size>;
				// STROKED BORDERS (see CSS Backgrounds and Borders Module Level 3: Borders)
				/**
				 * A series of paint values or sets of four paint values, separated by commas. For each item in 
				 * the series, if a single paint value is specified, then that paint is used as the border for 
				 * all sides of the region; and if a set of four paints is specified, they are used for the top, 
				 * right, bottom, and left borders of the region, in that order. If the border is not rectangular, 
				 * only the first paint value in the set is used.
				 */
				-fx-border-color <helper-border-color>;
				/**
				 * A series of inset or sets of four inset values, separated by commas. For each item in the series, 
				 * a single inset value means that all insets are the same; and if a set of four inset values is 
				 * specified, they are used for the top, right, bottom, and left edges of the region, in that order. 
				 * Each item in the series of insets applies to the corresponding item in the series of border colors.
				 */
				-fx-border-insets <helper-border-insets>;
				/**
				 * A series of radius or sets of four radius values, separated by commas. For each item in the series, 
				 * a single radius value means that all corner radii are the same; and if a set of four radius values 
				 * is specified, they are used as the radii of the top-left, top-right, bottom-right, and bottom-left 
				 * corners, in that order. Each item in the series of radii applies to the corresponding item in the 
				 * series of border colors.
				 */
				-fx-border-radius <helper-border-radius>;
				/**
				 * A series of border style values, separated by commas. Each item in the series applies to the 
				 * corresponding item in the series of border colors.
				 * The segments dash-style defines a sequence representing the lengths of the dash segments. 
				 * Alternate entries in the sequence represent the lengths of the opaque and transparent segments of 
				 * the dashes. This corresponds to the strokeDashArray variable of Shape.
				 * The optional phase parameter defines the point in the dashing pattern that will correspond to the 
				 * beginning of the stroke. This corresponds to the strokeDashOffset variable of Shape.
				 */
				-fx-border-style <helper-border-style>;
				/**
				 * A series of width or sets of four width values, separated by commas. For each item in the series, 
				 * a single width value means that all border widths are the same; and if a set of four width values 
				 * is specified, they are used for the top, right, bottom, and left border widths, in that order. 
				 * If the border is not rectangular, only the first width value is used. Each item in the series 
				 * of widths applies to the corresponding item in the series of border colors.
				 */
				-fx-border-width <helper-border-width>;
				// BORDER IMAGES (see CSS Backgrounds and Borders Module Level 3: Border Images)
				/** 
				 * A series of image URIs, separated by commas.
				 */
				-fx-border-image-source <helper-border-image-source>;
				/**
				 * A series of inset or sets of four inset values, separated by commas. For each item in the series, 
				 * a single inset value means that all insets are the same; and if a set of four inset values is specified, 
				 * they are used for the top, right, bottom, and left edges of the region, in that order. Each item in the 
				 * series of insets applies to the corresponding image in the series of border images. 
				 */
				-fx-border-image-insets <helper-border-image-insets>;
				/**
				 * A series of repeat-style values, separated by commas. Each item in the series applies to the corresponding image in the series 
				 * of border images.
				 */
				-fx-border-image-repeat <helper-border-image-repeat>;
				/**
				 * A series of image slice values or sets of four values, separated by commas. Each item in the series applies to the corresponding 
				 * image in the series of border images. For each item in the series, if four values are given, they specify the size of the top, right, 
				 * bottom, and left slices. This effectively divides the image into nine regions: an upper left corner, a top edge, an upper right corner, 
				 * a right edge, a lower right corner, a bottom edge, a lower left corner, a left edge and a middle. If one value is specified, this value 
				 * is used for the slice values for all four edges. If 'fill' is present, the middle slice is preserved, otherwise it is discarded. 
				 * Percentage values may be used here, in which case the values are considered proportional to the source image.
				 */
				-fx-border-image-slice <helper-border-image-slice>;
				/**
				 * A series of width or sets of four width values, separated by commas. For each item in the series, a single width 
				 * value means that all border widths are the same; and if a set of four width values is specified, they are used 
				 * for the top, right, bottom, and left border widths, in that order. If the border is not rectangular, only the 
				 * first width value is used. Each item in the series of widths applies to the corresponding item in the series of border 
				 * images. Percentage values may be used here, in which case the values are considered proportional to the border image area.
				 */
				-fx-border-image-width <helper-border-image-width>;
				//Other
				/**
				 * A sets of four padding values, separated by commas. For each item in the series, a single padding value means that all 
				 * padding are the same; and if a set of four padding values is specified, they are used for the top, right, bottom, and left 
				 * edges of the region, in that order.
				 */
				-fx-padding <size> | <size> <size> <size> <size>;
				/**
				 * If true means the shape centered within the region's width and height, otherwise the shape is positioned at its source 
				 * position. Has no effect if a shape string is not specified.
				 */
				-fx-position-shape <boolean> default: true;
				/**
				 * If true means the shape is scaled to fit the size of the region, otherwise the shape is at its source size, and its position 
				 * depends on the value of the position-shape property. Has no effect if a shape string is not specified.
				 */
				-fx-scale-shape <boolean> default: true;
				/**
				 * An SVG path string. By specifying a shape here the region takes on that shape instead of a rectangle or rounded rectangle. 
				 * The syntax of this path string is specified in
				 */
				-fx-shape <string>;
				/**
				 * Defines whether this region rounds position/spacing and ceils size values to pixel boundaries when laying out its children.
				 */
				-fx-snap-to-pixel <boolean> default: true;
				/**
				 * This property is set by specifying -fx-background-color, optionally -fx-background-insets, and optionally -fx-background-radius. 
				 * In order to set the background fill to null, specify the style "-fx-background-color: null;". There is no shorthand notation for 
				 * -fx-background-fills at this time.
				 */
				-fx-background-fills <helper-background-color> [ <helper-background-insets> || <helper-background-radius> ] default: null;
				/**
				 * This property is set by specifying -fx-background-image, optionally -fx-background-position, optionally -fx-background-repeat, 
				 * and optionally -fx-background-size. There is no shorthand notation for -fx-background-images at this time.
				 */
				-fx-background-images <helper-background-image> [ <helper-background-position> || <helper-background-repeat> || <helper-background-size> ] default: null;
				/**
				 * This property is set by specifying -fx-border-color with the optional -fx-border-insets, -fx-border-radius, -fx-border-style and 
				 * -fx-border-width. There is no shorthand notation for -fx-stroke-borders at this time.
				 */
				-fx-stroke-borders <helper-border-color> [ <helper-border-insets> || <helper-border-radius> || <helper-border-style> || <helper-border-width> ] default: null;
				/**
				 * This property set by specifying -fx-border-image-source with the optional -fx-border-image-insets, -fx-border-image-repeat, 
				 * -fx-border-image-slice and -fx-border-image-width. There is no shorthand notation for -fx-image-borders at this time.
				 */
				-fx-image-borders <helper-border-image-source> [ <helper-border-image-insets> || <helper-border-image-repeat> || <helper-border-image-slice> || <helper-border-image-width> ] default: null;
				
			}
			Pane extends Region {
				
			}
			AnchorPane extends Pane {
				
			}
			BorderPane extends Pane {
				
			}
			FlowPane extends Pane {
				-fx-hgap <size> default: 0;
				-fx-vgap <size> default: 0;
				-fx-alignment <alignment> default: top-left;
				-fx-column-halignment [ left | center | right ] default: center;
				-fx-row-valignment [ top | center | baseline | bottom ] default: center;
				-fx-orientation [ horizontal | vertical ] default: horizontal;
			}
			GridPane extends Pane {
				-fx-hgap <size> default: 0;
				-fx-vgap <size> default: 0;
				-fx-alignment <alignment> default: top-left;
				-fx-grid-lines-visible <boolean> default: false;
			}
			HBox extends Pane {
				-fx-spacing <size> default 0;
				-fx-alignment <alignment> default: top-left;
				-fx-fill-height <boolean> default: false;
			}
			StackPane extends Pane {
				-fx-alignment <alignment> default: top-left;
			}
			TilePane extends Pane {
				-fx-orientation [ horizontal | vertical ] default: horizontal;
				-fx-pref-rows int default: 5;
				-fx-pref-columns int default: 5;
				-fx-pref-tile-width <size> default: -1;
				-fx-pref-tile-height <size> default:-1;
				-fx-hgap <size> default: 0;
				-fx-vgap <size> default: 0;
				-fx-alignment <alignment> default: top-left;
				-fx-tile-alignment <alignment> default: center;
			}
			VBox extends Pane {
				-fx-spacing <size> default: 0;
				-fx-alignment <alignment> default: top-left;
				-fx-fill-width <boolean> default: true;
			}
		}
		package shape {
			Shape extends Node {
				-fx-fill <paint> default: BLACK;
				-fx-smooth <boolean> default: true;
				-fx-stroke <paint> default: null;
				-fx-stroke-type [ inside | outside | centered ] default: centered;
				-fx-stroke-dash-array <size> [<size>]+ default: null;
				-fx-stroke-dash-offset double default: 0;
				-fx-stroke-line-cap [ square | butt | round ] default: square;
				-fx-stroke-line-join [ miter | bevel | round ]  default: miter;
				-fx-stroke-miter-limit double default: 10;
				-fx-stroke-width <size> default: 1;
			}
			Arc extends Shape {
				
			}
			Circle extends Shape {
				
			}
			CubicCurve extends Shape {
				
			}
			Ellipse extends Shape {
				
			}
			Line extends Shape {
				
			}
			Path extends Shape {
				
			}
			Polygon extends Shape {
				
			}
			QuadCurve extends Shape {
				
			}
			Rectangle extends Shape {
				-fx-arc-height <size> default: 0;
				-fx-arc-width <size> default: 0;
			}
			SVGPath extends Shape {
				
			}
		}
		package text {
			Text {
				-fx-font <font> default: DEFAULT;
				-fx-font-smoothing-type [ gray | lcd ] default: gray;
				-fx-strikethrough <boolean> default: false;
				-fx-text-alignment [ left | center | right | justify ] default: left;
				-fx-text-origin [ baseline | top | bottom ]  default: baseline;
				-fx-underline <boolean> default: false;
			}
		}
		package web {
			WebView extends Parent {
				-fx-context-menu-enabled <boolean> default: true;
				-fx-font-smoothing-type [ gray | lcd ] default: lcd;
				-fx-font-scale double default: 1;
				-fx-min-width <size> default: 0;
				-fx-min-height <size> default: 0;
				-fx-pref-width <size> default: 800;
				-fx-pref-height <size> default: 800;
				-fx-max-width <size> default: DOUBLE_MAX;
				-fx-max-height <size> default: DOUBLE_MAX;
			}
		}
		package control {
			Control extends Parent {
        		-fx-skin <string> default: null;
        	}
        	Labeled extends Control {
        		-fx-alignment [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ] default: top-level;
        		-fx-text-alignment [ left | center | right | justify ] default: left;
        		-fx-text-overrun [ center-ellipsis | center-word-ellipsis | clip | ellipsis | leading-ellipsis | leading-word-ellipsis | word-ellipsis ] default: ellipsis;
        		-fx-wrap-text <boolean> default: false;
        		-fx-font <font> default: null;
        		-fx-underline <boolean> default: false;
        		-fx-graphic <uri> default: null;
        		-fx-content-display [ top | right | bottom | left | center | right | graphic-only | text-only ] default: left;
        		-fx-graphic-text-gap <size> default: 4;
        		-fx-label-padding <size> | <size> <size> <size> <size> default: 0;
        		-fx-text-fill <paint> default: BLACK;
        		-fx-ellipsis-string <string> default: "...";
        	}
        	Accordion extends Control {
				// TODO SUPPORT SUBSTRUCTURE
				// TODO SUPPORT STYLE_CLASS
			}
        	ButtonBase extends Labeled {
        		:armed
        	}
        	ComboBoxBase extends Control {
        		/**
        		 * applies when the editable variable is true
        		 */
        		:editable
        		/**
        		 * applies when the showing variable is true
        		 */
        		:showing
        		/**
        		 * applies when the armed variable is true
        		 */
        		:armed
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	Button extends ButtonBase {
        		:cancel
        		:default
        	}
        	Cell extends Labeled {
        		/**
        		 * The cell size. For vertical ListView or a TreeView or TableView this is the height, for a horizontal ListView this is the width.
        		 */
        		-fx-cell-size <size> default: 15;
        		:empty
        		:filled
        		:selected
        		// TODO SUPPORT SUBSTRUCTURE
				// TODO SUPPORT STYLE_CLASS
        	}
        	CheckBox extends ButtonBase {
        		:selected
        		:determinated
        		:indeterminated
        		// TODO SUPPORT SUBSTRUCTURE
				// TODO SUPPORT STYLE_CLASS
        	}
        	CheckMenuItem extends Control {
        		:selected
        	}
        	ChoiceBox extends Control {
        		// TODO SUPPORT SUBSTRUCTURE
				// TODO SUPPORT STYLE_CLASS
        	}
        	ColorPicker extends ComboBoxBase {
        		-fx-color-label-visible <boolean> default: true;
        		// TODO SUPPORT SUBSTRUCTURE
				// TODO SUPPORT STYLE_CLASS
        	}
        	ComboBox {
        		// TODO SUPPORT SUBSTRUCTURE
				// TODO SUPPORT STYLE_CLASS
        	}
        	Hyperlink extends ButtonBase {
        		/**
        		 * applies when the visited variable is true
        		 */
        		:visited
        		// TODO SUPPORT SUBSTRUCTURE
				// TODO SUPPORT STYLE_CLASS
        	}
        	IndexedCell extends Cell {
        		/**
        		 * applies if this cell's index is even
        		 */
        		:even
        		/**
        		 * applies if this cell's index is odd
        		 */
        		 :odd
				// TODO SUPPORT STYLE_CLASS
        	}
        	Label extends Labeled {
        		// TODO SUPPORT STYLE_CLASS
        	}
        	ListCell extends IndexedCell {
				// TODO SUPPORT STYLE_CLASS
        	}
        	ListView extends Control {
        		-fx-orientation [ horizontal | vertical ] default: horizontal;
        		/**
        		 * applies if this ListView is horizontal
        		 */
				:horizontal
				/**
				 * applies if this ListView is vertical
				 */
				:vertical
				// TODO SUPPORT STYLE_CLASS
        	}
        	Menu extends Control {
        		/**
        		 * applies if this Menu is showing
        		 */
        		:showing
				// TODO SUPPORT STYLE_CLASS        		
        	}
        	MenuBar extends Control {
        		-fx-use-system-menu-bar <boolean> default: false;
        		// TODO SUPPORT SUBSTRUCTURE
        		// TODO SUPPORT STYLE_CLASS    
        	}
        	MenuButton extends ButtonBase {
        		/**
        		 * applies if the openVertically variable is true
        		 */
        		:openvertically
        		/**
        		 * applies if the showing variable is true
        		 */
        		:showing
        		// TODO SUPPORT STYLE_CLASS    
        	}
        	MenuItem extends Control {
        		// TODO SUPPORT STYLE_CLASS  
        	}
        	MenuItemBase extends Control {
        		// ??? NO DESCRIPTION
        	}
        	Pagination extends Control {
        		-fx-max-page-indicator-count double default: 10;
        		-fx-arrows-visible <boolean> default: true;
        		-fx-tooltip-visible <boolean> default: true;
        		-fx-page-information-visible <boolean> default: true;
        		-fx-page-information-alignment <boolean> default: true;
        		// TODO SUPPORT SUBSTRUCTURE
        		// TODO SUPPORT STYLE_CLASS  
        	}
        	PasswordField extends TextField {
        		// TODO SUPPORT STYLE_CLASS  
        	}
        	PopupControl extends Control {
        		// TODO SUPPORT STYLE_CLASS
        	}
        	ProgressBar extends ProgressIndicator {
        		-fx-indeterminate-bar-length double default: 60;
        		-fx-indeterminate-bar-escape <boolean> default: true;
        		-fx-indeterminate-bar-flip <boolean> default: true;
        		-fx-indeterminate-bar-animation-time double default: 2.0;
        		// TODO SUPPORT SUBSTRUCTURE
        		// TODO SUPPORT STYLE_CLASS
        	}
        	ProgressIndicator extends Control {
        		// -fx-skin ????
        		-fx-progress-color <paint> default: dodgerblue;
        		/**
        		 * applies if the indeterminate variable is false
        		 */
        		:determinate
        		/**
        		 * applies if the indeterminate variable is true
        		 */
        		:indetermindate
        		// TODO SUPPORT SUBSTRUCTURE
        		// TODO SUPPORT STYLE_CLASS
        		
        	}
        	RadioButton extends ToggleButton {
        		// TODO SUPPORT SUBSTRUCTURE
        		// TODO SUPPORT STYLE_CLASS
        	}
        	RadioMenuItem extends Control {
        		/**
        		 * applies if this item is selected
        		 */
        		:selected
        	}
        	ScrollBar extends Control {
        		-fx-orientation [ horizontal | vertical ] horizontal;
        		-fx-block-increment double default: 10;
        		-fx-unit-increment double default: 1;
        		/**
        		 * applies if this ScrollBar is vertical
        		 */
        		:vertical
        		/**
        		 * applies if this ScrollBar is horizontal
        		 */
        		:horizontal
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	ScrollPane extends Control {
        		-fx-fit-to-width <boolean> default: false;
        		-fx-fit-to-height <boolean> default: false;
        		-fx-pannable <boolean> default: false;
        		-fx-hbar-policy [ never | always | as-needed ] default: always;
        		-fx-vbar-policy [ never | always | as-needed ] default: always;
        		/**
        		 * applies if this ScrollPane is pannable
        		 */
        		:pannable
        		/**
        		 * applies if this ScrollPane is fitToWidth
        		 */
        		:fitToWidth
        		/**
        		 * applies if this ScrollPane is fitToHeight
        		 */
        		:fitToHeight
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	Separator extends Control {
        		-fx-orientation [ horizontal | vertical ] default:horizontal;
        		-fx-halignment [ left | center | right ] default: center;
        		-fx-valignment [ top | center | baseline | bottom ] default: center;
        		/**
        		 * applies if this Separator is horizontal
        		 */
        		:horizontal
        		/**
        		 * applies if this Separator is vertical
        		 */
        		:vertical 
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	Slider extends Control {
        		-fx-orientation [ horizontal | vertical ] default: horizontal;
        		-fx-show-tick-labels <boolean> default: false;
        		-fx-show-tick-marks <boolean> default: false;
        		-fx-major-tick-unit double default: 25;
        		-fx-minor-tick-count double default: 3;
//        		-fx-show-tick-labels <boolean> default: false;
				-fx-snap-to-ticks <boolean> default: false;
				-fx-block-increment int default: 10;
				/**
				 * applies if this Slider is horizontal
				 */
				:horizontal
				/**
				 * applies if this Slider is vertical
				 */
				:vertical
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	SplitMenuButton extends ButtonBase {
        		// TODO SUPPORT STYLE_CLASS
        	}
        	SplitPane extends Control {
        		-fx-orientation [ horizontal | vertical ] default: horizontal;
        		/**
        		 * applies if this Slider is horizontal
        		 */
        		:horizontal
        		/**
        		 * applies if this Slider is vertical
        		 */
        		:vertical
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	TabPane extends Control {
        		-fx-tab-min-width int default: 0;
        		-fx-tab-max-width int default: DOUBLE_MAX;
        		-fx-tab-min-height int default: 0;
        		-fx-tab-max-height int default: DOUBLE_MAX;
        		/**
        		 * applies if the side is top
        		 */
        		:top
        		/**
        		 * applies if the side is right
        		 */
        		:right
        		/**
        		 * applies if the side is bottom
        		 */
        		:bottom
        		/**
        		 * applies if the side is left
        		 */
        		:left
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	TableView extends Control {
        		-fx-size <size> default: 20;
        		/**
        		 * applies if this TableView's selection model is cell selection
        		 */
        		:cell-selection
        		/**
        		 * applies if this TableView's selection model is row selection
        		 */
        		:row-selection
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	TextArea extends TextInputControl {
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	TextInputControl {
        		-fx-font <font> default: null;
        		-fx-text-fill <paint> default: black;
        		-fx-prompt-text-fill <paint> default: gray;
        		-fx-highlight-fill <paint> default: dodgerblue;
        		-fx-highlight-text-fill <paint> default: white;
        		-fx-display-caret <boolean> default: true;
        		/**
        		 * applies if this TextInputControl is not editable
        		 */
        		:readonly
        	}
        	TextField extends TextInputControl {
        		-fx-alignment [ 
        			top-left | top-center | top-right | center-left | 
        			center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right
        		] default: center-left;
        	}
        	TitledPane extends Labeled {
        		-fx-animated <boolean> default:true;
        		-fx-collapsible <boolean> default:true;
        		/**
        		 * applies if this TitledPane is expanded
        		 */
        		:expanded
        		/**
        		 * applies if this TitledPane is collapsed
        		 */
        		:collapsed
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	ToggleButton extends ButtonBase {
        		/**
        		 * applies if this ToggleButton is selected
        		 */
        		:selected
        		// TODO SUPPORT STYLE_CLASS
        	}
        	ToolBar extends Control {
        		-fx-orientation [ horizontal | vertical ] default: horizontal;
        		/**
        		 * applies if this ToolBar is horizontal
        		 */
        		:horizontal
        		/**
        		 * applies if this ToolBar is vertical
        		 */
        		:vertical
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	Tooltip extends Control {
        		-fx-text-alignment [ left | center | right | justify ] default: left;
        		-fx-text-overrun [ center-ellipsis | center-word-ellipsis | clip | ellipsis | leading-ellipsis | leading-word-ellipsis | word-ellipsis ] default: ellipsis;
        		-fx-wrap-text <boolean> default: false;
        		-fx-graphic <uri> default: null;
        		-fx-content-display [ top | right | bottom | left | center | right | graphic-only | text-only ] default: left;
        		-fx-graphic-text-gap <size> default: 4;
        		-fx-font <font> default: null;
        		// TODO SUPPORT STYLE_CLASS
        		// TODO SUPPORT SUBSTRUCTURE
        	}
        	TreeCell extends IndexedCell {
        		/**
        		 * The amout of space to multiply by the treeItem.level to get the left margin
        		 */
        		-fx-indent <size> default: 10;
        		:expanded
        		:collapsed
        		// TODO SUPPORT STYLE_CLASS
        	}
        	TreeView extends Control {
        		
        	}			
		}
		package charts {
	    	AreaChart extends XYChart {
	    		
	    	}
	    	BarChart extends XYChart {
	    		-fx-bar-gap double default: 4;
	    		-fx-category-gap double default: 10;
	    	}
	    	BubbleChart extends XYChart {
	    		
	    	}
	    	Chart extends layout.Region {
	    		-fx-legend-side [top|left|right|bottom] default: bottom;
	    		-fx-legend-visible <boolean> default:true;
	    		-fx-title-side [top|left|right|bottom] default: top;
	    	}
	    	LineChart extends XYChart {
	    		-fx-create-symbols <boolean> default: true;
	    	}
	    	ScatterChart extends XYChart {
	    		
	    	}
	    	PieChart extends Chart {
	    		-fx-clockwise <boolean> default: true;
	    		-fx-pie-label-visible <boolean> default: true;
	    		-fx-label-line-length <size> default: 20;
	    		-fx-start-angle double default: 0;
	    	}
	    	XYChart extends Chart {
	    		-fx-alternative-column-fill-visible <boolean> default: true;
	    		-fx-alternative-row-fill-visible <boolean> default: true;
	    		-fx-horizontal-grid-lines-visible <boolean> default: true;
	    		-fx-horizontal-zero-line-visible <boolean> default: true;
	    		-fx-vertical-grid-lines-visible <boolean> default: true;
	    		-fx-vertical-zero-line-visible <boolean> default: true;
	    	}
	    	Axis extends layout.Region {
	    		-fx-side 	[top|left|right|bottom] default: null;	 
				-fx-tick-length <size> default: 8; 	 
				-fx-tick-label-font <font> default: 8;
				-fx-tick-label-fill <paint> default: 8; 	 
				-fx-tick-label-gap <size> default: 8; 	 
				-fx-tick-mark-visible <boolean> default: true; 	 
				-fx-tick-labels-visible <boolean> default: true; 	
	    	}
	    	ValueAxis extends Axis {
	    		-fx-minor-tick-length <size> default: 5; 	 
				-fx-minor-tick-count <size> default: 5; 	 
				-fx-minor-tick-visible <boolean> default: true; 	 
	    	}
	    	NumberAxis extends ValueAxis {
	    		/**
	    		 * The value between each major tick mark in data units.
	    		 */
	    		-fx-tick-unit double default: 5;
	    	}
	    	CategoryAxis extends Axis {
	    		/**
	    		 * The margin between the axis start and the first tick-mark
	    		 */
	    		-fx-start-margin double default: 5;
	    		/**
	    		 * The margin between the axis start and the first tick-mark
	    		 */
				-fx-end-margin double default: 5;
				/**
				 * If this is true then half the space between ticks is left at the start and end
				 */
				-fx-gap-start-and-end <boolean> default: true;
	    	}
	    	Legend extends layout.Region {
	    		
	    	}
		}
	}
}