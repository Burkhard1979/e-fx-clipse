/*
* generated by Xtext
*/
grammar InternalCssDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.bestsolution.efxclipse.tooling.css.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.bestsolution.efxclipse.tooling.css.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.bestsolution.efxclipse.tooling.css.services.CssDslGrammarAccess;

}

@parser::members {
 
 	private CssDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CssDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulestylesheet
entryRulestylesheet 
:
{ before(grammarAccess.getStylesheetRule()); }
	 rulestylesheet
{ after(grammarAccess.getStylesheetRule()); } 
	 EOF 
;

// Rule stylesheet
rulestylesheet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStylesheetAccess().getGroup()); }
(rule__Stylesheet__Group__0)
{ after(grammarAccess.getStylesheetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecharset
entryRulecharset 
:
{ before(grammarAccess.getCharsetRule()); }
	 rulecharset
{ after(grammarAccess.getCharsetRule()); } 
	 EOF 
;

// Rule charset
rulecharset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharsetAccess().getGroup()); }
(rule__Charset__Group__0)
{ after(grammarAccess.getCharsetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleimportExpression
entryRuleimportExpression 
:
{ before(grammarAccess.getImportExpressionRule()); }
	 ruleimportExpression
{ after(grammarAccess.getImportExpressionRule()); } 
	 EOF 
;

// Rule importExpression
ruleimportExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportExpressionAccess().getAlternatives()); }
(rule__ImportExpression__Alternatives)
{ after(grammarAccess.getImportExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepage
entryRulepage 
:
{ before(grammarAccess.getPageRule()); }
	 rulepage
{ after(grammarAccess.getPageRule()); } 
	 EOF 
;

// Rule page
rulepage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPageAccess().getGroup()); }
(rule__Page__Group__0)
{ after(grammarAccess.getPageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepseudo_page
entryRulepseudo_page 
:
{ before(grammarAccess.getPseudo_pageRule()); }
	 rulepseudo_page
{ after(grammarAccess.getPseudo_pageRule()); } 
	 EOF 
;

// Rule pseudo_page
rulepseudo_page
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudo_pageAccess().getGroup()); }
(rule__Pseudo_page__Group__0)
{ after(grammarAccess.getPseudo_pageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedia
entryRulemedia 
:
{ before(grammarAccess.getMediaRule()); }
	 rulemedia
{ after(grammarAccess.getMediaRule()); } 
	 EOF 
;

// Rule media
rulemedia
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMediaAccess().getGroup()); }
(rule__Media__Group__0)
{ after(grammarAccess.getMediaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedia_list
entryRulemedia_list 
:
{ before(grammarAccess.getMedia_listRule()); }
	 rulemedia_list
{ after(grammarAccess.getMedia_listRule()); } 
	 EOF 
;

// Rule media_list
rulemedia_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMedia_listAccess().getGroup()); }
(rule__Media_list__Group__0)
{ after(grammarAccess.getMedia_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedium
entryRulemedium 
:
{ before(grammarAccess.getMediumRule()); }
	 rulemedium
{ after(grammarAccess.getMediumRule()); } 
	 EOF 
;

// Rule medium
rulemedium
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMediumAccess().getIDENTTerminalRuleCall()); }
	RULE_IDENT
{ after(grammarAccess.getMediumAccess().getIDENTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleruleset
entryRuleruleset 
:
{ before(grammarAccess.getRulesetRule()); }
	 ruleruleset
{ after(grammarAccess.getRulesetRule()); } 
	 EOF 
;

// Rule ruleset
ruleruleset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRulesetAccess().getGroup()); }
(rule__Ruleset__Group__0)
{ after(grammarAccess.getRulesetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleselector
entryRuleselector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleselector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule selector
ruleselector
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectorAccess().getGroup()); }
(rule__Selector__Group__0)
{ after(grammarAccess.getSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulesimple_selector
entryRulesimple_selector 
:
{ before(grammarAccess.getSimple_selectorRule()); }
	 rulesimple_selector
{ after(grammarAccess.getSimple_selectorRule()); } 
	 EOF 
;

// Rule simple_selector
rulesimple_selector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_selectorAccess().getAlternatives()); }
(rule__Simple_selector__Alternatives)
{ after(grammarAccess.getSimple_selectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_name
entryRuleelement_name 
:
{ before(grammarAccess.getElement_nameRule()); }
	 ruleelement_name
{ after(grammarAccess.getElement_nameRule()); } 
	 EOF 
;

// Rule element_name
ruleelement_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElement_nameAccess().getAlternatives()); }
(rule__Element_name__Alternatives)
{ after(grammarAccess.getElement_nameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesub_selector
entryRulesub_selector 
:
{ before(grammarAccess.getSub_selectorRule()); }
	 rulesub_selector
{ after(grammarAccess.getSub_selectorRule()); } 
	 EOF 
;

// Rule sub_selector
rulesub_selector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSub_selectorAccess().getAlternatives()); }
(rule__Sub_selector__Alternatives)
{ after(grammarAccess.getSub_selectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_type_selector
entryRulecss_type_selector 
:
{ before(grammarAccess.getCss_type_selectorRule()); }
	 rulecss_type_selector
{ after(grammarAccess.getCss_type_selectorRule()); } 
	 EOF 
;

// Rule css_type_selector
rulecss_type_selector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_type_selectorAccess().getGroup()); }
(rule__Css_type_selector__Group__0)
{ after(grammarAccess.getCss_type_selectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_namespace_prefix
entryRulecss_namespace_prefix 
:
{ before(grammarAccess.getCss_namespace_prefixRule()); }
	 rulecss_namespace_prefix
{ after(grammarAccess.getCss_namespace_prefixRule()); } 
	 EOF 
;

// Rule css_namespace_prefix
rulecss_namespace_prefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_namespace_prefixAccess().getGroup()); }
(rule__Css_namespace_prefix__Group__0)
{ after(grammarAccess.getCss_namespace_prefixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_universal
entryRulecss_universal 
:
{ before(grammarAccess.getCss_universalRule()); }
	 rulecss_universal
{ after(grammarAccess.getCss_universalRule()); } 
	 EOF 
;

// Rule css_universal
rulecss_universal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_universalAccess().getGroup()); }
(rule__Css_universal__Group__0)
{ after(grammarAccess.getCss_universalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_class
entryRulecss_class 
:
{ before(grammarAccess.getCss_classRule()); }
	 rulecss_class
{ after(grammarAccess.getCss_classRule()); } 
	 EOF 
;

// Rule css_class
rulecss_class
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_classAccess().getGroup()); }
(rule__Css_class__Group__0)
{ after(grammarAccess.getCss_classAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_id
entryRulecss_id 
:
{ before(grammarAccess.getCss_idRule()); }
	 rulecss_id
{ after(grammarAccess.getCss_idRule()); } 
	 EOF 
;

// Rule css_id
rulecss_id
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_idAccess().getHASHTerminalRuleCall()); }
	RULE_HASH
{ after(grammarAccess.getCss_idAccess().getHASHTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_attrib
entryRulecss_attrib 
:
{ before(grammarAccess.getCss_attribRule()); }
	 rulecss_attrib
{ after(grammarAccess.getCss_attribRule()); } 
	 EOF 
;

// Rule css_attrib
rulecss_attrib
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_attribAccess().getGroup()); }
(rule__Css_attrib__Group__0)
{ after(grammarAccess.getCss_attribAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_declaration
entryRulecss_declaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getCss_declarationRule()); }
	 rulecss_declaration
{ after(grammarAccess.getCss_declarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule css_declaration
rulecss_declaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_declarationAccess().getGroup()); }
(rule__Css_declaration__Group__0)
{ after(grammarAccess.getCss_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulecss_prio
entryRulecss_prio 
:
{ before(grammarAccess.getCss_prioRule()); }
	 rulecss_prio
{ after(grammarAccess.getCss_prioRule()); } 
	 EOF 
;

// Rule css_prio
rulecss_prio
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_prioAccess().getIMPORTANT_SYMParserRuleCall()); }
	ruleIMPORTANT_SYM
{ after(grammarAccess.getCss_prioAccess().getIMPORTANT_SYMParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_property
entryRulecss_property 
:
{ before(grammarAccess.getCss_propertyRule()); }
	 rulecss_property
{ after(grammarAccess.getCss_propertyRule()); } 
	 EOF 
;

// Rule css_property
rulecss_property
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_propertyAccess().getGroup()); }
(rule__Css_property__Group__0)
{ after(grammarAccess.getCss_propertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidPropertyIdent
entryRuleValidPropertyIdent 
:
{ before(grammarAccess.getValidPropertyIdentRule()); }
	 ruleValidPropertyIdent
{ after(grammarAccess.getValidPropertyIdentRule()); } 
	 EOF 
;

// Rule ValidPropertyIdent
ruleValidPropertyIdent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidPropertyIdentAccess().getGroup()); }
(rule__ValidPropertyIdent__Group__0)
{ after(grammarAccess.getValidPropertyIdentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_pseudo
entryRulecss_pseudo 
:
{ before(grammarAccess.getCss_pseudoRule()); }
	 rulecss_pseudo
{ after(grammarAccess.getCss_pseudoRule()); } 
	 EOF 
;

// Rule css_pseudo
rulecss_pseudo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_pseudoAccess().getGroup()); }
(rule__Css_pseudo__Group__0)
{ after(grammarAccess.getCss_pseudoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_negation
entryRulecss_negation 
:
{ before(grammarAccess.getCss_negationRule()); }
	 rulecss_negation
{ after(grammarAccess.getCss_negationRule()); } 
	 EOF 
;

// Rule css_negation
rulecss_negation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_negationAccess().getGroup()); }
(rule__Css_negation__Group__0)
{ after(grammarAccess.getCss_negationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_negation_arg
entryRulecss_negation_arg 
:
{ before(grammarAccess.getCss_negation_argRule()); }
	 rulecss_negation_arg
{ after(grammarAccess.getCss_negation_argRule()); } 
	 EOF 
;

// Rule css_negation_arg
rulecss_negation_arg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_negation_argAccess().getAlternatives()); }
(rule__Css_negation_arg__Alternatives)
{ after(grammarAccess.getCss_negation_argAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunctional_pseudo
entryRulefunctional_pseudo 
:
{ before(grammarAccess.getFunctional_pseudoRule()); }
	 rulefunctional_pseudo
{ after(grammarAccess.getFunctional_pseudoRule()); } 
	 EOF 
;

// Rule functional_pseudo
rulefunctional_pseudo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctional_pseudoAccess().getGroup()); }
(rule__Functional_pseudo__Group__0)
{ after(grammarAccess.getFunctional_pseudoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_expr
entryRulefunction_expr 
:
{ before(grammarAccess.getFunction_exprRule()); }
	 rulefunction_expr
{ after(grammarAccess.getFunction_exprRule()); } 
	 EOF 
;

// Rule function_expr
rulefunction_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getFunction_exprAccess().getAlternatives()); }
(rule__Function_expr__Alternatives)
{ after(grammarAccess.getFunction_exprAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getFunction_exprAccess().getAlternatives()); }
(rule__Function_expr__Alternatives)*
{ after(grammarAccess.getFunction_exprAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDIMENSION
entryRuleDIMENSION 
:
{ before(grammarAccess.getDIMENSIONRule()); }
	 ruleDIMENSION
{ after(grammarAccess.getDIMENSIONRule()); } 
	 EOF 
;

// Rule DIMENSION
ruleDIMENSION
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDIMENSIONAccess().getAlternatives()); }
(rule__DIMENSION__Alternatives)
{ after(grammarAccess.getDIMENSIONAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecombinator
entryRulecombinator 
:
{ before(grammarAccess.getCombinatorRule()); }
	 rulecombinator
{ after(grammarAccess.getCombinatorRule()); } 
	 EOF 
;

// Rule combinator
rulecombinator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCombinatorAccess().getGroup()); }
(rule__Combinator__Group__0)
{ after(grammarAccess.getCombinatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoperator
entryRuleoperator 
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleoperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule operator
ruleoperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunary_operator
entryRuleunary_operator 
:
{ before(grammarAccess.getUnary_operatorRule()); }
	 ruleunary_operator
{ after(grammarAccess.getUnary_operatorRule()); } 
	 EOF 
;

// Rule unary_operator
ruleunary_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
(rule__Unary_operator__Alternatives)
{ after(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymbolTok
entryRuleSymbolTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getSymbolTokRule()); }
	 ruleSymbolTok
{ after(grammarAccess.getSymbolTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SymbolTok
ruleSymbolTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolTokAccess().getGroup()); }
(rule__SymbolTok__Group__0)
{ after(grammarAccess.getSymbolTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleWSTok
entryRuleWSTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getWSTokRule()); }
	 ruleWSTok
{ after(grammarAccess.getWSTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WSTok
ruleWSTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWSTokAccess().getGroup()); }
(rule__WSTok__Group__0)
{ after(grammarAccess.getWSTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleStringTok
entryRuleStringTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getStringTokRule()); }
	 ruleStringTok
{ after(grammarAccess.getStringTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule StringTok
ruleStringTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringTokAccess().getGroup()); }
(rule__StringTok__Group__0)
{ after(grammarAccess.getStringTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFuncTok
entryRuleFuncTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getFuncTokRule()); }
	 ruleFuncTok
{ after(grammarAccess.getFuncTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FuncTok
ruleFuncTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFuncTokAccess().getGroup()); }
(rule__FuncTok__Group__0)
{ after(grammarAccess.getFuncTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNumberTok
entryRuleNumberTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getNumberTokRule()); }
	 ruleNumberTok
{ after(grammarAccess.getNumberTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NumberTok
ruleNumberTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberTokAccess().getGroup()); }
(rule__NumberTok__Group__0)
{ after(grammarAccess.getNumberTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIdentifierTok
entryRuleIdentifierTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getIdentifierTokRule()); }
	 ruleIdentifierTok
{ after(grammarAccess.getIdentifierTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IdentifierTok
ruleIdentifierTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierTokAccess().getGroup()); }
(rule__IdentifierTok__Group__0)
{ after(grammarAccess.getIdentifierTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUrlTok
entryRuleUrlTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getUrlTokRule()); }
	 ruleUrlTok
{ after(grammarAccess.getUrlTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UrlTok
ruleUrlTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUrlTokAccess().getGroup()); }
(rule__UrlTok__Group__0)
{ after(grammarAccess.getUrlTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleColorTok
entryRuleColorTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getColorTokRule()); }
	 ruleColorTok
{ after(grammarAccess.getColorTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ColorTok
ruleColorTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColorTokAccess().getGroup()); }
(rule__ColorTok__Group__0)
{ after(grammarAccess.getColorTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCssTok
entryRuleCssTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getCssTokRule()); }
	 ruleCssTok
{ after(grammarAccess.getCssTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CssTok
ruleCssTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCssTokAccess().getAlternatives()); }
(rule__CssTok__Alternatives)
{ after(grammarAccess.getCssTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}





// Entry rule entryRuletermGroup
entryRuletermGroup 
:
{ before(grammarAccess.getTermGroupRule()); }
	 ruletermGroup
{ after(grammarAccess.getTermGroupRule()); } 
	 EOF 
;

// Rule termGroup
ruletermGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getTermGroupAccess().getTermsAssignment()); }
(rule__TermGroup__TermsAssignment)
{ after(grammarAccess.getTermGroupAccess().getTermsAssignment()); }
)
(
{ before(grammarAccess.getTermGroupAccess().getTermsAssignment()); }
(rule__TermGroup__TermsAssignment)*
{ after(grammarAccess.getTermGroupAccess().getTermsAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleterm
entryRuleterm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleterm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule term
ruleterm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getAlternatives()); }
(rule__Term__Alternatives)
{ after(grammarAccess.getTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenumberTerm
entryRulenumberTerm 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberTermRule()); }
	 rulenumberTerm
{ after(grammarAccess.getNumberTermRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule numberTerm
rulenumberTerm
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberTermAccess().getGroup()); }
(rule__NumberTerm__Group__0)
{ after(grammarAccess.getNumberTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulenum
entryRulenum 
:
{ before(grammarAccess.getNumRule()); }
	 rulenum
{ after(grammarAccess.getNumRule()); } 
	 EOF 
;

// Rule num
rulenum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumAccess().getAlternatives()); }
(rule__Num__Alternatives)
{ after(grammarAccess.getNumAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction
entryRulefunction 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFunctionRule()); }
	 rulefunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule function
rulefunction
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleHexColor
entryRuleHexColor 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getHexColorRule()); }
	 ruleHexColor
{ after(grammarAccess.getHexColorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule HexColor
ruleHexColor
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHexColorAccess().getHASHTerminalRuleCall()); }
	RULE_HASH
{ after(grammarAccess.getHexColorAccess().getHASHTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleURLType
entryRuleURLType 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getURLTypeRule()); }
	 ruleURLType
{ after(grammarAccess.getURLTypeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule URLType
ruleURLType
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getURLTypeAccess().getGroup()); }
(rule__URLType__Group__0)
{ after(grammarAccess.getURLTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNUMBER
entryRuleNUMBER 
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUMBERAccess().getNumParserRuleCall()); }
	rulenum
{ after(grammarAccess.getNUMBERAccess().getNumParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePERCENTAGE
entryRulePERCENTAGE 
:
{ before(grammarAccess.getPERCENTAGERule()); }
	 rulePERCENTAGE
{ after(grammarAccess.getPERCENTAGERule()); } 
	 EOF 
;

// Rule PERCENTAGE
rulePERCENTAGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPERCENTAGEAccess().getGroup()); }
(rule__PERCENTAGE__Group__0)
{ after(grammarAccess.getPERCENTAGEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEMS
entryRuleEMS 
:
{ before(grammarAccess.getEMSRule()); }
	 ruleEMS
{ after(grammarAccess.getEMSRule()); } 
	 EOF 
;

// Rule EMS
ruleEMS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEMSAccess().getGroup()); }
(rule__EMS__Group__0)
{ after(grammarAccess.getEMSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXS
entryRuleEXS 
:
{ before(grammarAccess.getEXSRule()); }
	 ruleEXS
{ after(grammarAccess.getEXSRule()); } 
	 EOF 
;

// Rule EXS
ruleEXS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXSAccess().getGroup()); }
(rule__EXS__Group__0)
{ after(grammarAccess.getEXSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLENGTH
entryRuleLENGTH 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getLENGTHRule()); }
	 ruleLENGTH
{ after(grammarAccess.getLENGTHRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LENGTH
ruleLENGTH
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLENGTHAccess().getGroup()); }
(rule__LENGTH__Group__0)
{ after(grammarAccess.getLENGTHAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleANGLE
entryRuleANGLE 
:
{ before(grammarAccess.getANGLERule()); }
	 ruleANGLE
{ after(grammarAccess.getANGLERule()); } 
	 EOF 
;

// Rule ANGLE
ruleANGLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getANGLEAccess().getGroup()); }
(rule__ANGLE__Group__0)
{ after(grammarAccess.getANGLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTIME
entryRuleTIME 
:
{ before(grammarAccess.getTIMERule()); }
	 ruleTIME
{ after(grammarAccess.getTIMERule()); } 
	 EOF 
;

// Rule TIME
ruleTIME
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTIMEAccess().getGroup()); }
(rule__TIME__Group__0)
{ after(grammarAccess.getTIMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFREQ
entryRuleFREQ 
:
{ before(grammarAccess.getFREQRule()); }
	 ruleFREQ
{ after(grammarAccess.getFREQRule()); } 
	 EOF 
;

// Rule FREQ
ruleFREQ
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFREQAccess().getGroup()); }
(rule__FREQ__Group__0)
{ after(grammarAccess.getFREQAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIMPORTANT_SYM
entryRuleIMPORTANT_SYM 
:
{ before(grammarAccess.getIMPORTANT_SYMRule()); }
	 ruleIMPORTANT_SYM
{ after(grammarAccess.getIMPORTANT_SYMRule()); } 
	 EOF 
;

// Rule IMPORTANT_SYM
ruleIMPORTANT_SYM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIMPORTANT_SYMAccess().getImportantKeyword()); }

	'!important' 

{ after(grammarAccess.getIMPORTANT_SYMAccess().getImportantKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReservedWords
entryRuleReservedWords 
:
{ before(grammarAccess.getReservedWordsRule()); }
	 ruleReservedWords
{ after(grammarAccess.getReservedWordsRule()); } 
	 EOF 
;

// Rule ReservedWords
ruleReservedWords
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReservedWordsAccess().getAlternatives()); }
(rule__ReservedWords__Alternatives)
{ after(grammarAccess.getReservedWordsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule css_not
rulecss_not
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_notAccess().getNotEnumLiteralDeclaration()); }
(	'not(' 
)
{ after(grammarAccess.getCss_notAccess().getNotEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Stylesheet__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getRulesetAssignment_2_0()); }
(rule__Stylesheet__RulesetAssignment_2_0)
{ after(grammarAccess.getStylesheetAccess().getRulesetAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getMediaAssignment_2_1()); }
(rule__Stylesheet__MediaAssignment_2_1)
{ after(grammarAccess.getStylesheetAccess().getMediaAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getPageAssignment_2_2()); }
(rule__Stylesheet__PageAssignment_2_2)
{ after(grammarAccess.getStylesheetAccess().getPageAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getCharsetKeyword_0_0()); }

	'@charset' 

{ after(grammarAccess.getCharsetAccess().getCharsetKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCharsetAccess().getCHARSETKeyword_0_1()); }

	'@CHARSET' 

{ after(grammarAccess.getCharsetAccess().getCHARSETKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getGroup_0()); }
(rule__ImportExpression__Group_0__0)
{ after(grammarAccess.getImportExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getImportExpressionAccess().getGroup_1()); }
(rule__ImportExpression__Group_1__0)
{ after(grammarAccess.getImportExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getImportKeyword_0_0_0()); }

	'@import' 

{ after(grammarAccess.getImportExpressionAccess().getImportKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getImportExpressionAccess().getIMPORTKeyword_0_0_1()); }

	'@IMPORT' 

{ after(grammarAccess.getImportExpressionAccess().getIMPORTKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageKeyword_1_0()); }

	'@page' 

{ after(grammarAccess.getPageAccess().getPageKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getPageAccess().getPAGEKeyword_1_1()); }

	'@PAGE' 

{ after(grammarAccess.getPageAccess().getPAGEKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMediaKeyword_0_0()); }

	'@media' 

{ after(grammarAccess.getMediaAccess().getMediaKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMediaAccess().getMEDIAKeyword_0_1()); }

	'@MEDIA' 

{ after(grammarAccess.getMediaAccess().getMEDIAKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_1_0()); }
(rule__Selector__Group_1_0__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSelectorAccess().getGroup_1_1()); }
(rule__Selector__Group_1_1__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getGroup_0()); }
(rule__Simple_selector__Group_0__0)
{ after(grammarAccess.getSimple_selectorAccess().getGroup_0()); }
)

    |(
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
(rule__Simple_selector__SubSelectorsAssignment_1)
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
)
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
(rule__Simple_selector__SubSelectorsAssignment_1)*
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getElementAssignment_0_0_0()); }
(rule__Simple_selector__ElementAssignment_0_0_0)
{ after(grammarAccess.getSimple_selectorAccess().getElementAssignment_0_0_0()); }
)

    |(
{ before(grammarAccess.getSimple_selectorAccess().getUniversalAssignment_0_0_1()); }
(rule__Simple_selector__UniversalAssignment_0_0_1)
{ after(grammarAccess.getSimple_selectorAccess().getUniversalAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_nameAccess().getIDENTTerminalRuleCall_0()); }
	RULE_IDENT
{ after(grammarAccess.getElement_nameAccess().getIDENTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElement_nameAccess().getReservedWordsParserRuleCall_1()); }
	ruleReservedWords
{ after(grammarAccess.getElement_nameAccess().getReservedWordsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getIdAssignment_0()); }
(rule__Sub_selector__IdAssignment_0)
{ after(grammarAccess.getSub_selectorAccess().getIdAssignment_0()); }
)

    |(
{ before(grammarAccess.getSub_selectorAccess().getClassAssignment_1()); }
(rule__Sub_selector__ClassAssignment_1)
{ after(grammarAccess.getSub_selectorAccess().getClassAssignment_1()); }
)

    |(
{ before(grammarAccess.getSub_selectorAccess().getAttribAssignment_2()); }
(rule__Sub_selector__AttribAssignment_2)
{ after(grammarAccess.getSub_selectorAccess().getAttribAssignment_2()); }
)

    |(
{ before(grammarAccess.getSub_selectorAccess().getPseudoclassAssignment_3()); }
(rule__Sub_selector__PseudoclassAssignment_3)
{ after(grammarAccess.getSub_selectorAccess().getPseudoclassAssignment_3()); }
)

    |(
{ before(grammarAccess.getSub_selectorAccess().getNegotationAssignment_4()); }
(rule__Sub_selector__NegotationAssignment_4)
{ after(grammarAccess.getSub_selectorAccess().getNegotationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_namespace_prefix__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_namespace_prefixAccess().getIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT
{ after(grammarAccess.getCss_namespace_prefixAccess().getIDENTTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getCss_namespace_prefixAccess().getAsteriskKeyword_0_1()); }

	'*' 

{ after(grammarAccess.getCss_namespace_prefixAccess().getAsteriskKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_class__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_classAccess().getIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT
{ after(grammarAccess.getCss_classAccess().getIDENTTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getCss_classAccess().getReservedWordsParserRuleCall_1_1()); }
	ruleReservedWords
{ after(grammarAccess.getCss_classAccess().getReservedWordsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT
{ after(grammarAccess.getCss_attribAccess().getIDENTTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getReservedWordsParserRuleCall_1_1()); }
	ruleReservedWords
{ after(grammarAccess.getCss_attribAccess().getReservedWordsParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getCircumflexAccentEqualsSignKeyword_2_0_0()); }

	'^=' 

{ after(grammarAccess.getCss_attribAccess().getCircumflexAccentEqualsSignKeyword_2_0_0()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getDollarSignEqualsSignKeyword_2_0_1()); }

	'$=' 

{ after(grammarAccess.getCss_attribAccess().getDollarSignEqualsSignKeyword_2_0_1()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getAsteriskEqualsSignKeyword_2_0_2()); }

	'*=' 

{ after(grammarAccess.getCss_attribAccess().getAsteriskEqualsSignKeyword_2_0_2()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getEqualsSignKeyword_2_0_3()); }

	'=' 

{ after(grammarAccess.getCss_attribAccess().getEqualsSignKeyword_2_0_3()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getINCLUDESTerminalRuleCall_2_0_4()); }
	RULE_INCLUDES
{ after(grammarAccess.getCss_attribAccess().getINCLUDESTerminalRuleCall_2_0_4()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getDASHMATCHTerminalRuleCall_2_0_5()); }
	RULE_DASHMATCH
{ after(grammarAccess.getCss_attribAccess().getDASHMATCHTerminalRuleCall_2_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getAlternatives_2_1_0()); }
(rule__Css_attrib__Alternatives_2_1_0)
{ after(grammarAccess.getCss_attribAccess().getAlternatives_2_1_0()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getSTRINGTerminalRuleCall_2_1_1()); }
	RULE_STRING
{ after(grammarAccess.getCss_attribAccess().getSTRINGTerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Alternatives_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getIDENTTerminalRuleCall_2_1_0_0()); }
	RULE_IDENT
{ after(grammarAccess.getCss_attribAccess().getIDENTTerminalRuleCall_2_1_0_0()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getReservedWordsParserRuleCall_2_1_0_1()); }
	ruleReservedWords
{ after(grammarAccess.getCss_attribAccess().getReservedWordsParserRuleCall_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_pseudo__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_pseudoAccess().getIDENTTerminalRuleCall_2_0()); }
	RULE_IDENT
{ after(grammarAccess.getCss_pseudoAccess().getIDENTTerminalRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getCss_pseudoAccess().getFunctional_pseudoParserRuleCall_2_1()); }
	rulefunctional_pseudo
{ after(grammarAccess.getCss_pseudoAccess().getFunctional_pseudoParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_negation_arg__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_negation_argAccess().getCss_type_selectorParserRuleCall_0()); }
	rulecss_type_selector
{ after(grammarAccess.getCss_negation_argAccess().getCss_type_selectorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCss_negation_argAccess().getCss_universalParserRuleCall_1()); }
	rulecss_universal
{ after(grammarAccess.getCss_negation_argAccess().getCss_universalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCss_negation_argAccess().getHASHTerminalRuleCall_2()); }
	RULE_HASH
{ after(grammarAccess.getCss_negation_argAccess().getHASHTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCss_negation_argAccess().getCss_classParserRuleCall_3()); }
	rulecss_class
{ after(grammarAccess.getCss_negation_argAccess().getCss_classParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getCss_negation_argAccess().getCss_attribParserRuleCall_4()); }
	rulecss_attrib
{ after(grammarAccess.getCss_negation_argAccess().getCss_attribParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getCss_negation_argAccess().getCss_pseudoParserRuleCall_5()); }
	rulecss_pseudo
{ after(grammarAccess.getCss_negation_argAccess().getCss_pseudoParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_exprAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getFunction_exprAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getFunction_exprAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getFunction_exprAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getFunction_exprAccess().getDIMENSIONParserRuleCall_2()); }
	ruleDIMENSION
{ after(grammarAccess.getFunction_exprAccess().getDIMENSIONParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFunction_exprAccess().getNUMBERParserRuleCall_3()); }
	ruleNUMBER
{ after(grammarAccess.getFunction_exprAccess().getNUMBERParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFunction_exprAccess().getSTRINGTerminalRuleCall_4()); }
	RULE_STRING
{ after(grammarAccess.getFunction_exprAccess().getSTRINGTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getFunction_exprAccess().getIDENTTerminalRuleCall_5()); }
	RULE_IDENT
{ after(grammarAccess.getFunction_exprAccess().getIDENTTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DIMENSION__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDIMENSIONAccess().getPERCENTAGEParserRuleCall_0()); }
	rulePERCENTAGE
{ after(grammarAccess.getDIMENSIONAccess().getPERCENTAGEParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDIMENSIONAccess().getLENGTHParserRuleCall_1()); }
	ruleLENGTH
{ after(grammarAccess.getDIMENSIONAccess().getLENGTHParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDIMENSIONAccess().getEMSParserRuleCall_2()); }
	ruleEMS
{ after(grammarAccess.getDIMENSIONAccess().getEMSParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDIMENSIONAccess().getEXSParserRuleCall_3()); }
	ruleEXS
{ after(grammarAccess.getDIMENSIONAccess().getEXSParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDIMENSIONAccess().getANGLEParserRuleCall_4()); }
	ruleANGLE
{ after(grammarAccess.getDIMENSIONAccess().getANGLEParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getDIMENSIONAccess().getTIMEParserRuleCall_5()); }
	ruleTIME
{ after(grammarAccess.getDIMENSIONAccess().getTIMEParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getDIMENSIONAccess().getFREQParserRuleCall_6()); }
	ruleFREQ
{ after(grammarAccess.getDIMENSIONAccess().getFREQParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getCombinatorAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_0_1()); }

	'>' 

{ after(grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getCombinatorAccess().getTildeKeyword_0_2()); }

	'~' 

{ after(grammarAccess.getCombinatorAccess().getTildeKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getSolidusKeyword_0()); }

	'/' 

{ after(grammarAccess.getOperatorAccess().getSolidusKeyword_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getCOMMATerminalRuleCall_1()); }
	RULE_COMMA
{ after(grammarAccess.getOperatorAccess().getCOMMATerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_0()); }
)

    |(
{ before(grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_1()); }

	'+' 

{ after(grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CssTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCssTokAccess().getSymbolTokParserRuleCall_0()); }
	ruleSymbolTok
{ after(grammarAccess.getCssTokAccess().getSymbolTokParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getWSTokParserRuleCall_1()); }
	ruleWSTok
{ after(grammarAccess.getCssTokAccess().getWSTokParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getStringTokParserRuleCall_2()); }
	ruleStringTok
{ after(grammarAccess.getCssTokAccess().getStringTokParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getFuncTokParserRuleCall_3()); }
	ruleFuncTok
{ after(grammarAccess.getCssTokAccess().getFuncTokParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getNumberTokParserRuleCall_4()); }
	ruleNumberTok
{ after(grammarAccess.getCssTokAccess().getNumberTokParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getIdentifierTokParserRuleCall_5()); }
	ruleIdentifierTok
{ after(grammarAccess.getCssTokAccess().getIdentifierTokParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getUrlTokParserRuleCall_6()); }
	ruleUrlTok
{ after(grammarAccess.getCssTokAccess().getUrlTokParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getColorTokParserRuleCall_7()); }
	ruleColorTok
{ after(grammarAccess.getCssTokAccess().getColorTokParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getNumberAssignment_0()); }
(rule__Term__NumberAssignment_0)
{ after(grammarAccess.getTermAccess().getNumberAssignment_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getStringValueAssignment_1()); }
(rule__Term__StringValueAssignment_1)
{ after(grammarAccess.getTermAccess().getStringValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getIdentifierAssignment_2()); }
(rule__Term__IdentifierAssignment_2)
{ after(grammarAccess.getTermAccess().getIdentifierAssignment_2()); }
)

    |(
{ before(grammarAccess.getTermAccess().getUrlAssignment_3()); }
(rule__Term__UrlAssignment_3)
{ after(grammarAccess.getTermAccess().getUrlAssignment_3()); }
)

    |(
{ before(grammarAccess.getTermAccess().getFunctionAssignment_4()); }
(rule__Term__FunctionAssignment_4)
{ after(grammarAccess.getTermAccess().getFunctionAssignment_4()); }
)

    |(
{ before(grammarAccess.getTermAccess().getHexColorAssignment_5()); }
(rule__Term__HexColorAssignment_5)
{ after(grammarAccess.getTermAccess().getHexColorAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTerm__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTermAccess().getNUMBERParserRuleCall_1_0()); }
	ruleNUMBER
{ after(grammarAccess.getNumberTermAccess().getNUMBERParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getPERCENTAGEParserRuleCall_1_1()); }
	rulePERCENTAGE
{ after(grammarAccess.getNumberTermAccess().getPERCENTAGEParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getLENGTHParserRuleCall_1_2()); }
	ruleLENGTH
{ after(grammarAccess.getNumberTermAccess().getLENGTHParserRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getEMSParserRuleCall_1_3()); }
	ruleEMS
{ after(grammarAccess.getNumberTermAccess().getEMSParserRuleCall_1_3()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getEXSParserRuleCall_1_4()); }
	ruleEXS
{ after(grammarAccess.getNumberTermAccess().getEXSParserRuleCall_1_4()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getANGLEParserRuleCall_1_5()); }
	ruleANGLE
{ after(grammarAccess.getNumberTermAccess().getANGLEParserRuleCall_1_5()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getTIMEParserRuleCall_1_6()); }
	ruleTIME
{ after(grammarAccess.getNumberTermAccess().getTIMEParserRuleCall_1_6()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getFREQParserRuleCall_1_7()); }
	ruleFREQ
{ after(grammarAccess.getNumberTermAccess().getFREQParserRuleCall_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getINTEGERTerminalRuleCall_0()); }
	RULE_INTEGER
{ after(grammarAccess.getNumAccess().getINTEGERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumAccess().getREALTerminalRuleCall_1()); }
	RULE_REAL
{ after(grammarAccess.getNumAccess().getREALTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LENGTH__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLENGTHAccess().getPxKeyword_1_0()); }

	'px' 

{ after(grammarAccess.getLENGTHAccess().getPxKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getCmKeyword_1_1()); }

	'cm' 

{ after(grammarAccess.getLENGTHAccess().getCmKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getMmKeyword_1_2()); }

	'mm' 

{ after(grammarAccess.getLENGTHAccess().getMmKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getInKeyword_1_3()); }

	'in' 

{ after(grammarAccess.getLENGTHAccess().getInKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getPtKeyword_1_4()); }

	'pt' 

{ after(grammarAccess.getLENGTHAccess().getPtKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getPcKeyword_1_5()); }

	'pc' 

{ after(grammarAccess.getLENGTHAccess().getPcKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ANGLE__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANGLEAccess().getDegKeyword_1_0()); }

	'deg' 

{ after(grammarAccess.getANGLEAccess().getDegKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getANGLEAccess().getRadKeyword_1_1()); }

	'rad' 

{ after(grammarAccess.getANGLEAccess().getRadKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getANGLEAccess().getGradKeyword_1_2()); }

	'grad' 

{ after(grammarAccess.getANGLEAccess().getGradKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TIME__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTIMEAccess().getMsKeyword_1_0()); }

	'ms' 

{ after(grammarAccess.getTIMEAccess().getMsKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getTIMEAccess().getSKeyword_1_1()); }

	's' 

{ after(grammarAccess.getTIMEAccess().getSKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FREQ__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFREQAccess().getHzKeyword_1_0()); }

	'hz' 

{ after(grammarAccess.getFREQAccess().getHzKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getFREQAccess().getKhzKeyword_1_1()); }

	'khz' 

{ after(grammarAccess.getFREQAccess().getKhzKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReservedWords__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReservedWordsAccess().getEmKeyword_0()); }

	'em' 

{ after(grammarAccess.getReservedWordsAccess().getEmKeyword_0()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getExKeyword_1()); }

	'ex' 

{ after(grammarAccess.getReservedWordsAccess().getExKeyword_1()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getPxKeyword_2()); }

	'px' 

{ after(grammarAccess.getReservedWordsAccess().getPxKeyword_2()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getCmKeyword_3()); }

	'cm' 

{ after(grammarAccess.getReservedWordsAccess().getCmKeyword_3()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getMmKeyword_4()); }

	'mm' 

{ after(grammarAccess.getReservedWordsAccess().getMmKeyword_4()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getInKeyword_5()); }

	'in' 

{ after(grammarAccess.getReservedWordsAccess().getInKeyword_5()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getPtKeyword_6()); }

	'pt' 

{ after(grammarAccess.getReservedWordsAccess().getPtKeyword_6()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getPcKeyword_7()); }

	'pc' 

{ after(grammarAccess.getReservedWordsAccess().getPcKeyword_7()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getDegKeyword_8()); }

	'deg' 

{ after(grammarAccess.getReservedWordsAccess().getDegKeyword_8()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getRadKeyword_9()); }

	'rad' 

{ after(grammarAccess.getReservedWordsAccess().getRadKeyword_9()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getGradKeyword_10()); }

	'grad' 

{ after(grammarAccess.getReservedWordsAccess().getGradKeyword_10()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getMsKeyword_11()); }

	'ms' 

{ after(grammarAccess.getReservedWordsAccess().getMsKeyword_11()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getSKeyword_12()); }

	's' 

{ after(grammarAccess.getReservedWordsAccess().getSKeyword_12()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getHzKeyword_13()); }

	'hz' 

{ after(grammarAccess.getReservedWordsAccess().getHzKeyword_13()); }
)

    |(
{ before(grammarAccess.getReservedWordsAccess().getKhzKeyword_14()); }

	'khz' 

{ after(grammarAccess.getReservedWordsAccess().getKhzKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Stylesheet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__0__Impl
	rule__Stylesheet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharsetAssignment_0()); }
(rule__Stylesheet__CharsetAssignment_0)?
{ after(grammarAccess.getStylesheetAccess().getCharsetAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__1__Impl
	rule__Stylesheet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getImportsAssignment_1()); }
(rule__Stylesheet__ImportsAssignment_1)*
{ after(grammarAccess.getStylesheetAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getAlternatives_2()); }
(rule__Stylesheet__Alternatives_2)*
{ after(grammarAccess.getStylesheetAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Charset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Charset__Group__0__Impl
	rule__Charset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getAlternatives_0()); }
(rule__Charset__Alternatives_0)
{ after(grammarAccess.getCharsetAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Charset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Charset__Group__1__Impl
	rule__Charset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getCharsetAssignment_1()); }
(rule__Charset__CharsetAssignment_1)
{ after(grammarAccess.getCharsetAccess().getCharsetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Charset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Charset__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getCharsetAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group_0__0__Impl
	rule__ImportExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getAlternatives_0_0()); }
(rule__ImportExpression__Alternatives_0_0)
{ after(grammarAccess.getImportExpressionAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getValueAssignment_0_1()); }
(rule__ImportExpression__ValueAssignment_0_1)
{ after(grammarAccess.getImportExpressionAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group_1__0__Impl
	rule__ImportExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getURLTypeParserRuleCall_1_0()); }
	ruleURLType
{ after(grammarAccess.getImportExpressionAccess().getURLTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group_1__1__Impl
	rule__ImportExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getMediaListAssignment_1_1()); }
(rule__ImportExpression__MediaListAssignment_1_1)?
{ after(grammarAccess.getImportExpressionAccess().getMediaListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getSemicolonKeyword_1_2()); }

	';' 

{ after(grammarAccess.getImportExpressionAccess().getSemicolonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Page__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__0__Impl
	rule__Page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageAction_0()); }
(

)
{ after(grammarAccess.getPageAccess().getPageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__1__Impl
	rule__Page__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getAlternatives_1()); }
(rule__Page__Alternatives_1)
{ after(grammarAccess.getPageAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__2__Impl
	rule__Page__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPseudoPageAssignment_2()); }
(rule__Page__PseudoPageAssignment_2)?
{ after(grammarAccess.getPageAccess().getPseudoPageAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__3__Impl
	rule__Page__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__4__Impl
	rule__Page__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsAssignment_4()); }
(rule__Page__DeclarationsAssignment_4)?
{ after(grammarAccess.getPageAccess().getDeclarationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__5__Impl
	rule__Page__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getGroup_5()); }
(rule__Page__Group_5__0)*
{ after(grammarAccess.getPageAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Page__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_5__0__Impl
	rule__Page__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getSemicolonKeyword_5_0()); }

	';' 

{ after(grammarAccess.getPageAccess().getSemicolonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsAssignment_5_1()); }
(rule__Page__DeclarationsAssignment_5_1)?
{ after(grammarAccess.getPageAccess().getDeclarationsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pseudo_page__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_page__Group__0__Impl
	rule__Pseudo_page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_page__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_pageAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getPseudo_pageAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_page__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_page__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_page__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_pageAccess().getIDENTTerminalRuleCall_1()); }
	RULE_IDENT
{ after(grammarAccess.getPseudo_pageAccess().getIDENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Media__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__0__Impl
	rule__Media__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getAlternatives_0()); }
(rule__Media__Alternatives_0)
{ after(grammarAccess.getMediaAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__1__Impl
	rule__Media__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMedialistAssignment_1()); }
(rule__Media__MedialistAssignment_1)
{ after(grammarAccess.getMediaAccess().getMedialistAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__2__Impl
	rule__Media__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__3__Impl
	rule__Media__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRulesetsAssignment_3()); }
(rule__Media__RulesetsAssignment_3)*
{ after(grammarAccess.getMediaAccess().getRulesetsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Media_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group__0__Impl
	rule__Media_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_0()); }
	rulemedium
{ after(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getGroup_1()); }
(rule__Media_list__Group_1__0)*
{ after(grammarAccess.getMedia_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Media_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group_1__0__Impl
	rule__Media_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getMedia_listAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_1_1()); }
	rulemedium
{ after(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ruleset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__0__Impl
	rule__Ruleset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
(rule__Ruleset__SelectorsAssignment_0)
{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__1__Impl
	rule__Ruleset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_1()); }
(rule__Ruleset__Group_1__0)*
{ after(grammarAccess.getRulesetAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__2__Impl
	rule__Ruleset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__3__Impl
	rule__Ruleset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_3()); }
(rule__Ruleset__Group_3__0)*
{ after(grammarAccess.getRulesetAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Ruleset__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__0__Impl
	rule__Ruleset__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_1()); }
(rule__Ruleset__SelectorsAssignment_1_1)
{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ruleset__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_3__0__Impl
	rule__Ruleset__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getDeclarationsAssignment_3_0()); }
(rule__Ruleset__DeclarationsAssignment_3_0)
{ after(grammarAccess.getRulesetAccess().getDeclarationsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getRulesetAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSimpleselectorsAssignment_0()); }
(rule__Selector__SimpleselectorsAssignment_0)
{ after(grammarAccess.getSelectorAccess().getSimpleselectorsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getAlternatives_1()); }
(rule__Selector__Alternatives_1)?
{ after(grammarAccess.getSelectorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__0__Impl
	rule__Selector__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_0_0()); }
(rule__Selector__CombinatorAssignment_1_0_0)
{ after(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorAssignment_1_0_1()); }
(rule__Selector__SelectorAssignment_1_0_1)
{ after(grammarAccess.getSelectorAccess().getSelectorAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__0__Impl
	rule__Selector__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
(	RULE_WS)
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
)
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
(	RULE_WS)*
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_1_1_1()); }
(rule__Selector__Group_1_1_1__0)?
{ after(grammarAccess.getSelectorAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1_1__0__Impl
	rule__Selector__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_1_1_0()); }
(rule__Selector__CombinatorAssignment_1_1_1_0)?
{ after(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorAssignment_1_1_1_1()); }
(rule__Selector__SelectorAssignment_1_1_1_1)
{ after(grammarAccess.getSelectorAccess().getSelectorAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_selector__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_selector__Group_0__0__Impl
	rule__Simple_selector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getAlternatives_0_0()); }
(rule__Simple_selector__Alternatives_0_0)
{ after(grammarAccess.getSimple_selectorAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_selector__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_selector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_0_1()); }
(rule__Simple_selector__SubSelectorsAssignment_0_1)*
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_type_selector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_type_selector__Group__0__Impl
	rule__Css_type_selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_type_selector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_type_selectorAccess().getCss_namespace_prefixParserRuleCall_0()); }
(	rulecss_namespace_prefix)?
{ after(grammarAccess.getCss_type_selectorAccess().getCss_namespace_prefixParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_type_selector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_type_selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_type_selector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_type_selectorAccess().getElement_nameParserRuleCall_1()); }
	ruleelement_name
{ after(grammarAccess.getCss_type_selectorAccess().getElement_nameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_namespace_prefix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_namespace_prefix__Group__0__Impl
	rule__Css_namespace_prefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_namespace_prefix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_namespace_prefixAccess().getAlternatives_0()); }
(rule__Css_namespace_prefix__Alternatives_0)?
{ after(grammarAccess.getCss_namespace_prefixAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_namespace_prefix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_namespace_prefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_namespace_prefix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_namespace_prefixAccess().getVerticalLineKeyword_1()); }

	'|' 

{ after(grammarAccess.getCss_namespace_prefixAccess().getVerticalLineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_universal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_universal__Group__0__Impl
	rule__Css_universal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_universal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_universalAccess().getCss_namespace_prefixParserRuleCall_0()); }
(	rulecss_namespace_prefix)?
{ after(grammarAccess.getCss_universalAccess().getCss_namespace_prefixParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_universal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_universal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_universal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_universalAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getCss_universalAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_class__Group__0__Impl
	rule__Css_class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_classAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getCss_classAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_class__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_classAccess().getAlternatives_1()); }
(rule__Css_class__Alternatives_1)
{ after(grammarAccess.getCss_classAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_attrib__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group__0__Impl
	rule__Css_attrib__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getCss_attribAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_attrib__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group__1__Impl
	rule__Css_attrib__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getAlternatives_1()); }
(rule__Css_attrib__Alternatives_1)
{ after(grammarAccess.getCss_attribAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_attrib__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group__2__Impl
	rule__Css_attrib__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getGroup_2()); }
(rule__Css_attrib__Group_2__0)?
{ after(grammarAccess.getCss_attribAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_attrib__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getCss_attribAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Css_attrib__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group_2__0__Impl
	rule__Css_attrib__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getAlternatives_2_0()); }
(rule__Css_attrib__Alternatives_2_0)
{ after(grammarAccess.getCss_attribAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_attrib__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getAlternatives_2_1()); }
(rule__Css_attrib__Alternatives_2_1)
{ after(grammarAccess.getCss_attribAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__0__Impl
	rule__Css_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_0()); }
(	RULE_WS)*
{ after(grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__1__Impl
	rule__Css_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getPropertyAssignment_1()); }
(rule__Css_declaration__PropertyAssignment_1)
{ after(grammarAccess.getCss_declarationAccess().getPropertyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__2__Impl
	rule__Css_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__3__Impl
	rule__Css_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getCss_declarationAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__4__Impl
	rule__Css_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCss_declarationAccess().getValueTokensAssignment_4()); }
(rule__Css_declaration__ValueTokensAssignment_4)
{ after(grammarAccess.getCss_declarationAccess().getValueTokensAssignment_4()); }
)
(
{ before(grammarAccess.getCss_declarationAccess().getValueTokensAssignment_4()); }
(rule__Css_declaration__ValueTokensAssignment_4)*
{ after(grammarAccess.getCss_declarationAccess().getValueTokensAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getPrioAssignment_5()); }
(rule__Css_declaration__PrioAssignment_5)?
{ after(grammarAccess.getCss_declarationAccess().getPrioAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Css_property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_property__Group__0__Impl
	rule__Css_property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_propertyAccess().getCss_propertyAction_0()); }
(

)
{ after(grammarAccess.getCss_propertyAccess().getCss_propertyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_property__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_propertyAccess().getNameAssignment_1()); }
(rule__Css_property__NameAssignment_1)
{ after(grammarAccess.getCss_propertyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValidPropertyIdent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidPropertyIdent__Group__0__Impl
	rule__ValidPropertyIdent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidPropertyIdent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidPropertyIdentAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getValidPropertyIdentAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValidPropertyIdent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidPropertyIdent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidPropertyIdent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidPropertyIdentAccess().getIDENTTerminalRuleCall_1()); }
	RULE_IDENT
{ after(grammarAccess.getValidPropertyIdentAccess().getIDENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_pseudo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_pseudo__Group__0__Impl
	rule__Css_pseudo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_pseudo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_pseudoAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getCss_pseudoAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_pseudo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_pseudo__Group__1__Impl
	rule__Css_pseudo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_pseudo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_pseudoAccess().getColonKeyword_1()); }
(
	':' 
)?
{ after(grammarAccess.getCss_pseudoAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_pseudo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_pseudo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_pseudo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_pseudoAccess().getAlternatives_2()); }
(rule__Css_pseudo__Alternatives_2)
{ after(grammarAccess.getCss_pseudoAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Css_negation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_negation__Group__0__Impl
	rule__Css_negation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_negation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_negationAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getCss_negationAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_negation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_negation__Group__1__Impl
	rule__Css_negation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_negation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_negationAccess().getNotAssignment_1()); }
(rule__Css_negation__NotAssignment_1)
{ after(grammarAccess.getCss_negationAccess().getNotAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_negation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_negation__Group__2__Impl
	rule__Css_negation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_negation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_negationAccess().getNegation_argAssignment_2()); }
(rule__Css_negation__Negation_argAssignment_2)
{ after(grammarAccess.getCss_negationAccess().getNegation_argAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_negation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_negation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_negation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_negationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getCss_negationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Functional_pseudo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functional_pseudo__Group__0__Impl
	rule__Functional_pseudo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Functional_pseudo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctional_pseudoAccess().getIDENTTerminalRuleCall_0()); }
	RULE_IDENT
{ after(grammarAccess.getFunctional_pseudoAccess().getIDENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Functional_pseudo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functional_pseudo__Group__1__Impl
	rule__Functional_pseudo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Functional_pseudo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctional_pseudoAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctional_pseudoAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Functional_pseudo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functional_pseudo__Group__2__Impl
	rule__Functional_pseudo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Functional_pseudo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctional_pseudoAccess().getFunction_exprParserRuleCall_2()); }
	rulefunction_expr
{ after(grammarAccess.getFunctional_pseudoAccess().getFunction_exprParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Functional_pseudo__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functional_pseudo__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Functional_pseudo__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctional_pseudoAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctional_pseudoAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Combinator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Combinator__Group__0__Impl
	rule__Combinator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getAlternatives_0()); }
(rule__Combinator__Alternatives_0)
{ after(grammarAccess.getCombinatorAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Combinator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Combinator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getCombinatorAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SymbolTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolTok__Group__0__Impl
	rule__SymbolTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolTokAccess().getSymbolTokAction_0()); }
(

)
{ after(grammarAccess.getSymbolTokAccess().getSymbolTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolTokAccess().getSymbolAssignment_1()); }
(rule__SymbolTok__SymbolAssignment_1)
{ after(grammarAccess.getSymbolTokAccess().getSymbolAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WSTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WSTok__Group__0__Impl
	rule__WSTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WSTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWSTokAccess().getWSTokAction_0()); }
(

)
{ after(grammarAccess.getWSTokAccess().getWSTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WSTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WSTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WSTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWSTokAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
{ after(grammarAccess.getWSTokAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTok__Group__0__Impl
	rule__StringTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTokAccess().getStringTokAction_0()); }
(

)
{ after(grammarAccess.getStringTokAccess().getStringTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTokAccess().getValueAssignment_1()); }
(rule__StringTok__ValueAssignment_1)
{ after(grammarAccess.getStringTokAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FuncTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncTok__Group__0__Impl
	rule__FuncTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncTokAccess().getFuncTokAction_0()); }
(

)
{ after(grammarAccess.getFuncTokAccess().getFuncTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncTokAccess().getFuncAssignment_1()); }
(rule__FuncTok__FuncAssignment_1)
{ after(grammarAccess.getFuncTokAccess().getFuncAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberTok__Group__0__Impl
	rule__NumberTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTokAccess().getNumberTokAction_0()); }
(

)
{ after(grammarAccess.getNumberTokAccess().getNumberTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTokAccess().getNumAssignment_1()); }
(rule__NumberTok__NumAssignment_1)
{ after(grammarAccess.getNumberTokAccess().getNumAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IdentifierTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierTok__Group__0__Impl
	rule__IdentifierTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierTokAccess().getIdentifierTokAction_0()); }
(

)
{ after(grammarAccess.getIdentifierTokAccess().getIdentifierTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierTokAccess().getIdAssignment_1()); }
(rule__IdentifierTok__IdAssignment_1)
{ after(grammarAccess.getIdentifierTokAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UrlTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UrlTok__Group__0__Impl
	rule__UrlTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUrlTokAccess().getUrlTokAction_0()); }
(

)
{ after(grammarAccess.getUrlTokAccess().getUrlTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UrlTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UrlTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUrlTokAccess().getUrlAssignment_1()); }
(rule__UrlTok__UrlAssignment_1)
{ after(grammarAccess.getUrlTokAccess().getUrlAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ColorTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorTok__Group__0__Impl
	rule__ColorTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorTokAccess().getColorTokAction_0()); }
(

)
{ after(grammarAccess.getColorTokAccess().getColorTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColorTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorTokAccess().getColorAssignment_1()); }
(rule__ColorTok__ColorAssignment_1)
{ after(grammarAccess.getColorTokAccess().getColorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NumberTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberTerm__Group__0__Impl
	rule__NumberTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTermAccess().getUnary_operatorParserRuleCall_0()); }
(	ruleunary_operator)?
{ after(grammarAccess.getNumberTermAccess().getUnary_operatorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTermAccess().getAlternatives_1()); }
(rule__NumberTerm__Alternatives_1)
{ after(grammarAccess.getNumberTermAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getFunctionAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
(rule__Function__NameAssignment_1)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFunctionAccess().getParamsAssignment_3()); }
(rule__Function__ParamsAssignment_3)
{ after(grammarAccess.getFunctionAccess().getParamsAssignment_3()); }
)
(
{ before(grammarAccess.getFunctionAccess().getParamsAssignment_3()); }
(rule__Function__ParamsAssignment_3)*
{ after(grammarAccess.getFunctionAccess().getParamsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__URLType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__0__Impl
	rule__URLType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlKeyword_0()); }

	'url' 

{ after(grammarAccess.getURLTypeAccess().getUrlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__1__Impl
	rule__URLType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getURLTypeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__2__Impl
	rule__URLType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlAssignment_2()); }
(rule__URLType__UrlAssignment_2)
{ after(grammarAccess.getURLTypeAccess().getUrlAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PERCENTAGE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PERCENTAGE__Group__0__Impl
	rule__PERCENTAGE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PERCENTAGE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPERCENTAGEAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getPERCENTAGEAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PERCENTAGE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PERCENTAGE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PERCENTAGE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPERCENTAGEAccess().getPercentSignKeyword_1()); }

	'%' 

{ after(grammarAccess.getPERCENTAGEAccess().getPercentSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EMS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EMS__Group__0__Impl
	rule__EMS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EMS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEMSAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getEMSAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EMS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EMS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EMS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEMSAccess().getEmKeyword_1()); }

	'em' 

{ after(grammarAccess.getEMSAccess().getEmKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXS__Group__0__Impl
	rule__EXS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXSAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getEXSAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXSAccess().getExKeyword_1()); }

	'ex' 

{ after(grammarAccess.getEXSAccess().getExKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LENGTH__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LENGTH__Group__0__Impl
	rule__LENGTH__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LENGTH__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLENGTHAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getLENGTHAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LENGTH__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LENGTH__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LENGTH__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLENGTHAccess().getAlternatives_1()); }
(rule__LENGTH__Alternatives_1)
{ after(grammarAccess.getLENGTHAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ANGLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANGLE__Group__0__Impl
	rule__ANGLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ANGLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANGLEAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getANGLEAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ANGLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANGLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ANGLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANGLEAccess().getAlternatives_1()); }
(rule__ANGLE__Alternatives_1)
{ after(grammarAccess.getANGLEAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TIME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TIME__Group__0__Impl
	rule__TIME__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TIME__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTIMEAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getTIMEAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TIME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TIME__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TIME__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTIMEAccess().getAlternatives_1()); }
(rule__TIME__Alternatives_1)
{ after(grammarAccess.getTIMEAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FREQ__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FREQ__Group__0__Impl
	rule__FREQ__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FREQ__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFREQAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getFREQAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FREQ__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FREQ__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FREQ__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFREQAccess().getAlternatives_1()); }
(rule__FREQ__Alternatives_1)
{ after(grammarAccess.getFREQAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Stylesheet__CharsetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharsetCharsetParserRuleCall_0_0()); }
	rulecharset{ after(grammarAccess.getStylesheetAccess().getCharsetCharsetParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getImportsImportExpressionParserRuleCall_1_0()); }
	ruleimportExpression{ after(grammarAccess.getStylesheetAccess().getImportsImportExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__RulesetAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_2_0_0()); }
	ruleruleset{ after(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__MediaAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getMediaMediaParserRuleCall_2_1_0()); }
	rulemedia{ after(grammarAccess.getStylesheetAccess().getMediaMediaParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__PageAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getPagePageParserRuleCall_2_2_0()); }
	rulepage{ after(grammarAccess.getStylesheetAccess().getPagePageParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__CharsetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getCharsetSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getCharsetAccess().getCharsetSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__MediaListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getMediaListMedia_listParserRuleCall_1_1_0()); }
	rulemedia_list{ after(grammarAccess.getImportExpressionAccess().getMediaListMedia_listParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__PseudoPageAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPseudoPagePseudo_pageParserRuleCall_2_0()); }
	rulepseudo_page{ after(grammarAccess.getPageAccess().getPseudoPagePseudo_pageParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__DeclarationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_4_0()); }
	rulecss_declaration{ after(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__DeclarationsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_5_1_0()); }
	rulecss_declaration{ after(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__MedialistAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMedialistMedia_listParserRuleCall_1_0()); }
	rulemedia_list{ after(grammarAccess.getMediaAccess().getMedialistMedia_listParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__RulesetsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRulesetsRulesetParserRuleCall_3_0()); }
	ruleruleset{ after(grammarAccess.getMediaAccess().getRulesetsRulesetParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
	ruleselector{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_1_0()); }
	ruleselector{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__DeclarationsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_3_0_0()); }
	rulecss_declaration{ after(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SimpleselectorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSimpleselectorsSimple_selectorParserRuleCall_0_0()); }
	rulesimple_selector{ after(grammarAccess.getSelectorAccess().getSimpleselectorsSimple_selectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__CombinatorAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); }
	rulecombinator{ after(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectorAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_1_0()); }
	ruleselector{ after(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__CombinatorAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0()); }
	rulecombinator{ after(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectorAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_1_1_0()); }
	ruleselector{ after(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__ElementAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getElementElement_nameParserRuleCall_0_0_0_0()); }
	ruleelement_name{ after(grammarAccess.getSimple_selectorAccess().getElementElement_nameParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__UniversalAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getUniversalCss_universalParserRuleCall_0_0_1_0()); }
	rulecss_universal{ after(grammarAccess.getSimple_selectorAccess().getUniversalCss_universalParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__SubSelectorsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsSub_selectorParserRuleCall_0_1_0()); }
	rulesub_selector{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsSub_selectorParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__SubSelectorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsSub_selectorParserRuleCall_1_0()); }
	rulesub_selector{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsSub_selectorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getIdCss_idParserRuleCall_0_0()); }
	rulecss_id{ after(grammarAccess.getSub_selectorAccess().getIdCss_idParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__ClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getClassCss_classParserRuleCall_1_0()); }
	rulecss_class{ after(grammarAccess.getSub_selectorAccess().getClassCss_classParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__AttribAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getAttribCss_attribParserRuleCall_2_0()); }
	rulecss_attrib{ after(grammarAccess.getSub_selectorAccess().getAttribCss_attribParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__PseudoclassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getPseudoclassCss_pseudoParserRuleCall_3_0()); }
	rulecss_pseudo{ after(grammarAccess.getSub_selectorAccess().getPseudoclassCss_pseudoParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__NegotationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getNegotationCss_negationParserRuleCall_4_0()); }
	rulecss_negation{ after(grammarAccess.getSub_selectorAccess().getNegotationCss_negationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getPropertyCss_propertyParserRuleCall_1_0()); }
	rulecss_property{ after(grammarAccess.getCss_declarationAccess().getPropertyCss_propertyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__ValueTokensAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getValueTokensCssTokParserRuleCall_4_0()); }
	ruleCssTok{ after(grammarAccess.getCss_declarationAccess().getValueTokensCssTokParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__PrioAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getPrioCss_prioParserRuleCall_5_0()); }
	rulecss_prio{ after(grammarAccess.getCss_declarationAccess().getPrioCss_prioParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_property__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_propertyAccess().getNameValidPropertyIdentParserRuleCall_1_0()); }
	ruleValidPropertyIdent{ after(grammarAccess.getCss_propertyAccess().getNameValidPropertyIdentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_negation__NotAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_negationAccess().getNotCss_notEnumRuleCall_1_0()); }
	rulecss_not{ after(grammarAccess.getCss_negationAccess().getNotCss_notEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_negation__Negation_argAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_negationAccess().getNegation_argCss_negation_argParserRuleCall_2_0()); }
	rulecss_negation_arg{ after(grammarAccess.getCss_negationAccess().getNegation_argCss_negation_argParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__SymbolAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolTokAccess().getSymbolCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA{ after(grammarAccess.getSymbolTokAccess().getSymbolCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTokAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getStringTokAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FuncTok__FuncAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncTokAccess().getFuncFunctionParserRuleCall_1_0()); }
	rulefunction{ after(grammarAccess.getFuncTokAccess().getFuncFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__NumAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTokAccess().getNumNumberTermParserRuleCall_1_0()); }
	rulenumberTerm{ after(grammarAccess.getNumberTokAccess().getNumNumberTermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierTok__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierTokAccess().getIdValidPropertyIdentParserRuleCall_1_0()); }
	ruleValidPropertyIdent{ after(grammarAccess.getIdentifierTokAccess().getIdValidPropertyIdentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__UrlAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUrlTokAccess().getUrlURLTypeParserRuleCall_1_0()); }
	ruleURLType{ after(grammarAccess.getUrlTokAccess().getUrlURLTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__ColorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorTokAccess().getColorHASHTerminalRuleCall_1_0()); }
	RULE_HASH{ after(grammarAccess.getColorTokAccess().getColorHASHTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TermGroup__TermsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermGroupAccess().getTermsTermParserRuleCall_0()); }
	ruleterm{ after(grammarAccess.getTermGroupAccess().getTermsTermParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__NumberAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getNumberNumberTermParserRuleCall_0_0()); }
	rulenumberTerm{ after(grammarAccess.getTermAccess().getNumberNumberTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__StringValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getStringValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getTermAccess().getStringValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__IdentifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getIdentifierValidPropertyIdentParserRuleCall_2_0()); }
	ruleValidPropertyIdent{ after(grammarAccess.getTermAccess().getIdentifierValidPropertyIdentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__UrlAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getUrlURLTypeParserRuleCall_3_0()); }
	ruleURLType{ after(grammarAccess.getTermAccess().getUrlURLTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FunctionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFunctionFunctionParserRuleCall_4_0()); }
	rulefunction{ after(grammarAccess.getTermAccess().getFunctionFunctionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__HexColorAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getHexColorHexColorParserRuleCall_5_0()); }
	ruleHexColor{ after(grammarAccess.getTermAccess().getHexColorHexColorParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getFunctionAccess().getNameIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParamsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParamsCssTokParserRuleCall_3_0()); }
	ruleCssTok{ after(grammarAccess.getFunctionAccess().getParamsCssTokParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__UrlAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getURLTypeAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTEGER : ('0'..'9')+;

RULE_REAL : ('0'..'9')* '.' ('0'..'9')+;

RULE_HASH : '#' ('_'|'-'|'a'..'z'|'A'..'Z'|'0'..'9')+;

RULE_IDENT : ('_'|'a'..'z'|'A'..'Z') ('_'|'-'|'a'..'z'|'A'..'Z'|'0'..'9')*;

RULE_COMMA : ',';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_INCLUDES : '~=';

RULE_DASHMATCH : '|=';


