/*
* generated by Xtext
*/
grammar InternalCssDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.bestsolution.efxclipse.tooling.css.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.bestsolution.efxclipse.tooling.css.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.bestsolution.efxclipse.tooling.css.services.CssDslGrammarAccess;

}

@parser::members {
 
 	private CssDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CssDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulestylesheet
entryRulestylesheet 
:
{ before(grammarAccess.getStylesheetRule()); }
	 rulestylesheet
{ after(grammarAccess.getStylesheetRule()); } 
	 EOF 
;

// Rule stylesheet
rulestylesheet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStylesheetAccess().getAlternatives()); }
(rule__Stylesheet__Alternatives)*
{ after(grammarAccess.getStylesheetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedia
entryRulemedia 
:
{ before(grammarAccess.getMediaRule()); }
	 rulemedia
{ after(grammarAccess.getMediaRule()); } 
	 EOF 
;

// Rule media
rulemedia
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMediaAccess().getGroup()); }
(rule__Media__Group__0)
{ after(grammarAccess.getMediaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedia_list
entryRulemedia_list 
:
{ before(grammarAccess.getMedia_listRule()); }
	 rulemedia_list
{ after(grammarAccess.getMedia_listRule()); } 
	 EOF 
;

// Rule media_list
rulemedia_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMedia_listAccess().getGroup()); }
(rule__Media_list__Group__0)
{ after(grammarAccess.getMedia_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedium
entryRulemedium 
:
{ before(grammarAccess.getMediumRule()); }
	 rulemedium
{ after(grammarAccess.getMediumRule()); } 
	 EOF 
;

// Rule medium
rulemedium
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMediumAccess().getIDENTTerminalRuleCall()); }
	RULE_IDENT
{ after(grammarAccess.getMediumAccess().getIDENTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleruleset
entryRuleruleset 
:
{ before(grammarAccess.getRulesetRule()); }
	 ruleruleset
{ after(grammarAccess.getRulesetRule()); } 
	 EOF 
;

// Rule ruleset
ruleruleset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRulesetAccess().getGroup()); }
(rule__Ruleset__Group__0)
{ after(grammarAccess.getRulesetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleselector
entryRuleselector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleselector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule selector
ruleselector
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectorAccess().getGroup()); }
(rule__Selector__Group__0)
{ after(grammarAccess.getSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulesimple_selector
entryRulesimple_selector 
:
{ before(grammarAccess.getSimple_selectorRule()); }
	 rulesimple_selector
{ after(grammarAccess.getSimple_selectorRule()); } 
	 EOF 
;

// Rule simple_selector
rulesimple_selector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_selectorAccess().getAlternatives()); }
(rule__Simple_selector__Alternatives)
{ after(grammarAccess.getSimple_selectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_name
entryRuleelement_name 
:
{ before(grammarAccess.getElement_nameRule()); }
	 ruleelement_name
{ after(grammarAccess.getElement_nameRule()); } 
	 EOF 
;

// Rule element_name
ruleelement_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElement_nameAccess().getAlternatives()); }
(rule__Element_name__Alternatives)
{ after(grammarAccess.getElement_nameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesub_selector
entryRulesub_selector 
:
{ before(grammarAccess.getSub_selectorRule()); }
	 rulesub_selector
{ after(grammarAccess.getSub_selectorRule()); } 
	 EOF 
;

// Rule sub_selector
rulesub_selector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSub_selectorAccess().getAlternatives()); }
(rule__Sub_selector__Alternatives)
{ after(grammarAccess.getSub_selectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_class
entryRulecss_class 
:
{ before(grammarAccess.getCss_classRule()); }
	 rulecss_class
{ after(grammarAccess.getCss_classRule()); } 
	 EOF 
;

// Rule css_class
rulecss_class
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_classAccess().getGroup()); }
(rule__Css_class__Group__0)
{ after(grammarAccess.getCss_classAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_id
entryRulecss_id 
:
{ before(grammarAccess.getCss_idRule()); }
	 rulecss_id
{ after(grammarAccess.getCss_idRule()); } 
	 EOF 
;

// Rule css_id
rulecss_id
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_idAccess().getAlternatives()); }
(rule__Css_id__Alternatives)
{ after(grammarAccess.getCss_idAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_attrib
entryRulecss_attrib 
:
{ before(grammarAccess.getCss_attribRule()); }
	 rulecss_attrib
{ after(grammarAccess.getCss_attribRule()); } 
	 EOF 
;

// Rule css_attrib
rulecss_attrib
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_attribAccess().getGroup()); }
(rule__Css_attrib__Group__0)
{ after(grammarAccess.getCss_attribAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_declaration
entryRulecss_declaration 
:
{ before(grammarAccess.getCss_declarationRule()); }
	 rulecss_declaration
{ after(grammarAccess.getCss_declarationRule()); } 
	 EOF 
;

// Rule css_declaration
rulecss_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_declarationAccess().getCss_generic_declarationParserRuleCall()); }
	rulecss_generic_declaration
{ after(grammarAccess.getCss_declarationAccess().getCss_generic_declarationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_generic_declaration
entryRulecss_generic_declaration 
:
{ before(grammarAccess.getCss_generic_declarationRule()); }
	 rulecss_generic_declaration
{ after(grammarAccess.getCss_generic_declarationRule()); } 
	 EOF 
;

// Rule css_generic_declaration
rulecss_generic_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_generic_declarationAccess().getGroup()); }
(rule__Css_generic_declaration__Group__0)
{ after(grammarAccess.getCss_generic_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_property
entryRulecss_property 
:
{ before(grammarAccess.getCss_propertyRule()); }
	 rulecss_property
{ after(grammarAccess.getCss_propertyRule()); } 
	 EOF 
;

// Rule css_property
rulecss_property
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_propertyAccess().getGroup()); }
(rule__Css_property__Group__0)
{ after(grammarAccess.getCss_propertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_pseudo
entryRulecss_pseudo 
:
{ before(grammarAccess.getCss_pseudoRule()); }
	 rulecss_pseudo
{ after(grammarAccess.getCss_pseudoRule()); } 
	 EOF 
;

// Rule css_pseudo
rulecss_pseudo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_pseudoAccess().getGroup()); }
(rule__Css_pseudo__Group__0)
{ after(grammarAccess.getCss_pseudoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecombinator
entryRulecombinator 
:
{ before(grammarAccess.getCombinatorRule()); }
	 rulecombinator
{ after(grammarAccess.getCombinatorRule()); } 
	 EOF 
;

// Rule combinator
rulecombinator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCombinatorAccess().getGroup()); }
(rule__Combinator__Group__0)
{ after(grammarAccess.getCombinatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoperator
entryRuleoperator 
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleoperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule operator
ruleoperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunary_operator
entryRuleunary_operator 
:
{ before(grammarAccess.getUnary_operatorRule()); }
	 ruleunary_operator
{ after(grammarAccess.getUnary_operatorRule()); } 
	 EOF 
;

// Rule unary_operator
ruleunary_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
(rule__Unary_operator__Alternatives)
{ after(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpr
entryRuleexpr 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getExprRule()); }
	 ruleexpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule expr
ruleexpr
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getGroup()); }
(rule__Expr__Group__0)
{ after(grammarAccess.getExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuletermGroup
entryRuletermGroup 
:
{ before(grammarAccess.getTermGroupRule()); }
	 ruletermGroup
{ after(grammarAccess.getTermGroupRule()); } 
	 EOF 
;

// Rule termGroup
ruletermGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getTermGroupAccess().getTermsAssignment()); }
(rule__TermGroup__TermsAssignment)
{ after(grammarAccess.getTermGroupAccess().getTermsAssignment()); }
)
(
{ before(grammarAccess.getTermGroupAccess().getTermsAssignment()); }
(rule__TermGroup__TermsAssignment)*
{ after(grammarAccess.getTermGroupAccess().getTermsAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleterm
entryRuleterm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleterm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule term
ruleterm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getAlternatives()); }
(rule__Term__Alternatives)
{ after(grammarAccess.getTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenumberTerm
entryRulenumberTerm 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberTermRule()); }
	 rulenumberTerm
{ after(grammarAccess.getNumberTermRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule numberTerm
rulenumberTerm
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberTermAccess().getGroup()); }
(rule__NumberTerm__Group__0)
{ after(grammarAccess.getNumberTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulenum
entryRulenum 
:
{ before(grammarAccess.getNumRule()); }
	 rulenum
{ after(grammarAccess.getNumRule()); } 
	 EOF 
;

// Rule num
rulenum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumAccess().getAlternatives()); }
(rule__Num__Alternatives)
{ after(grammarAccess.getNumAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction
entryRulefunction 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFunctionRule()); }
	 rulefunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule function
rulefunction
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleHexColor
entryRuleHexColor 
:
{ before(grammarAccess.getHexColorRule()); }
	 ruleHexColor
{ after(grammarAccess.getHexColorRule()); } 
	 EOF 
;

// Rule HexColor
ruleHexColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHexColorAccess().getHexdigitsTerminalRuleCall()); }
	RULE_HEXDIGITS
{ after(grammarAccess.getHexColorAccess().getHexdigitsTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleURLType
entryRuleURLType 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getURLTypeRule()); }
	 ruleURLType
{ after(grammarAccess.getURLTypeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule URLType
ruleURLType
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getURLTypeAccess().getGroup()); }
(rule__URLType__Group__0)
{ after(grammarAccess.getURLTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNUMBER
entryRuleNUMBER 
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUMBERAccess().getNumParserRuleCall()); }
	rulenum
{ after(grammarAccess.getNUMBERAccess().getNumParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePERCENTAGE
entryRulePERCENTAGE 
:
{ before(grammarAccess.getPERCENTAGERule()); }
	 rulePERCENTAGE
{ after(grammarAccess.getPERCENTAGERule()); } 
	 EOF 
;

// Rule PERCENTAGE
rulePERCENTAGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPERCENTAGEAccess().getGroup()); }
(rule__PERCENTAGE__Group__0)
{ after(grammarAccess.getPERCENTAGEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEMS
entryRuleEMS 
:
{ before(grammarAccess.getEMSRule()); }
	 ruleEMS
{ after(grammarAccess.getEMSRule()); } 
	 EOF 
;

// Rule EMS
ruleEMS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEMSAccess().getGroup()); }
(rule__EMS__Group__0)
{ after(grammarAccess.getEMSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXS
entryRuleEXS 
:
{ before(grammarAccess.getEXSRule()); }
	 ruleEXS
{ after(grammarAccess.getEXSRule()); } 
	 EOF 
;

// Rule EXS
ruleEXS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXSAccess().getGroup()); }
(rule__EXS__Group__0)
{ after(grammarAccess.getEXSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLENGTH
entryRuleLENGTH 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getLENGTHRule()); }
	 ruleLENGTH
{ after(grammarAccess.getLENGTHRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LENGTH
ruleLENGTH
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLENGTHAccess().getGroup()); }
(rule__LENGTH__Group__0)
{ after(grammarAccess.getLENGTHAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleANGLE
entryRuleANGLE 
:
{ before(grammarAccess.getANGLERule()); }
	 ruleANGLE
{ after(grammarAccess.getANGLERule()); } 
	 EOF 
;

// Rule ANGLE
ruleANGLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getANGLEAccess().getGroup()); }
(rule__ANGLE__Group__0)
{ after(grammarAccess.getANGLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTIME
entryRuleTIME 
:
{ before(grammarAccess.getTIMERule()); }
	 ruleTIME
{ after(grammarAccess.getTIMERule()); } 
	 EOF 
;

// Rule TIME
ruleTIME
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTIMEAccess().getGroup()); }
(rule__TIME__Group__0)
{ after(grammarAccess.getTIMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFREQ
entryRuleFREQ 
:
{ before(grammarAccess.getFREQRule()); }
	 ruleFREQ
{ after(grammarAccess.getFREQRule()); } 
	 EOF 
;

// Rule FREQ
ruleFREQ
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFREQAccess().getGroup()); }
(rule__FREQ__Group__0)
{ after(grammarAccess.getFREQAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Stylesheet__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getRulesetAssignment_0()); }
(rule__Stylesheet__RulesetAssignment_0)
{ after(grammarAccess.getStylesheetAccess().getRulesetAssignment_0()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getMediaAssignment_1()); }
(rule__Stylesheet__MediaAssignment_1)
{ after(grammarAccess.getStylesheetAccess().getMediaAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_1_0()); }
(rule__Selector__Group_1_0__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSelectorAccess().getGroup_1_1()); }
(rule__Selector__Group_1_1__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getGroup_0()); }
(rule__Simple_selector__Group_0__0)
{ after(grammarAccess.getSimple_selectorAccess().getGroup_0()); }
)

    |(
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
(rule__Simple_selector__SubSelectorsAssignment_1)
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
)
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
(rule__Simple_selector__SubSelectorsAssignment_1)*
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_nameAccess().getIDENTTerminalRuleCall_0()); }
	RULE_IDENT
{ after(grammarAccess.getElement_nameAccess().getIDENTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElement_nameAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getElement_nameAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getIdAssignment_0()); }
(rule__Sub_selector__IdAssignment_0)
{ after(grammarAccess.getSub_selectorAccess().getIdAssignment_0()); }
)

    |(
{ before(grammarAccess.getSub_selectorAccess().getClassAssignment_1()); }
(rule__Sub_selector__ClassAssignment_1)
{ after(grammarAccess.getSub_selectorAccess().getClassAssignment_1()); }
)

    |(
{ before(grammarAccess.getSub_selectorAccess().getAttribAssignment_2()); }
(rule__Sub_selector__AttribAssignment_2)
{ after(grammarAccess.getSub_selectorAccess().getAttribAssignment_2()); }
)

    |(
{ before(grammarAccess.getSub_selectorAccess().getPseudoclassAssignment_3()); }
(rule__Sub_selector__PseudoclassAssignment_3)
{ after(grammarAccess.getSub_selectorAccess().getPseudoclassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_id__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_idAccess().getGroup_0()); }
(rule__Css_id__Group_0__0)
{ after(grammarAccess.getCss_idAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCss_idAccess().getHexdigitsTerminalRuleCall_1()); }
	RULE_HEXDIGITS
{ after(grammarAccess.getCss_idAccess().getHexdigitsTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getEqualsSignKeyword_2_0_0()); }

	'=' 

{ after(grammarAccess.getCss_attribAccess().getEqualsSignKeyword_2_0_0()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getINCLUDESTerminalRuleCall_2_0_1()); }
	RULE_INCLUDES
{ after(grammarAccess.getCss_attribAccess().getINCLUDESTerminalRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getDASHMATCHTerminalRuleCall_2_0_2()); }
	RULE_DASHMATCH
{ after(grammarAccess.getCss_attribAccess().getDASHMATCHTerminalRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getIDENTTerminalRuleCall_2_1_0()); }
	RULE_IDENT
{ after(grammarAccess.getCss_attribAccess().getIDENTTerminalRuleCall_2_1_0()); }
)

    |(
{ before(grammarAccess.getCss_attribAccess().getSTRINGTerminalRuleCall_2_1_1()); }
	RULE_STRING
{ after(grammarAccess.getCss_attribAccess().getSTRINGTerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getCombinatorAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_0_1()); }

	'>' 

{ after(grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getSolidusKeyword_0()); }

	'/' 

{ after(grammarAccess.getOperatorAccess().getSolidusKeyword_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getCOMMATerminalRuleCall_1()); }
	RULE_COMMA
{ after(grammarAccess.getOperatorAccess().getCOMMATerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_0()); }
)

    |(
{ before(grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_1()); }

	'+' 

{ after(grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getNumberAssignment_0()); }
(rule__Term__NumberAssignment_0)
{ after(grammarAccess.getTermAccess().getNumberAssignment_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getStringValueAssignment_1()); }
(rule__Term__StringValueAssignment_1)
{ after(grammarAccess.getTermAccess().getStringValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getIdentifierAssignment_2()); }
(rule__Term__IdentifierAssignment_2)
{ after(grammarAccess.getTermAccess().getIdentifierAssignment_2()); }
)

    |(
{ before(grammarAccess.getTermAccess().getUrlAssignment_3()); }
(rule__Term__UrlAssignment_3)
{ after(grammarAccess.getTermAccess().getUrlAssignment_3()); }
)

    |(
{ before(grammarAccess.getTermAccess().getFunctionAssignment_4()); }
(rule__Term__FunctionAssignment_4)
{ after(grammarAccess.getTermAccess().getFunctionAssignment_4()); }
)

    |(
{ before(grammarAccess.getTermAccess().getHexColorAssignment_5()); }
(rule__Term__HexColorAssignment_5)
{ after(grammarAccess.getTermAccess().getHexColorAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTerm__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTermAccess().getNUMBERParserRuleCall_1_0()); }
	ruleNUMBER
{ after(grammarAccess.getNumberTermAccess().getNUMBERParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getPERCENTAGEParserRuleCall_1_1()); }
	rulePERCENTAGE
{ after(grammarAccess.getNumberTermAccess().getPERCENTAGEParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getLENGTHParserRuleCall_1_2()); }
	ruleLENGTH
{ after(grammarAccess.getNumberTermAccess().getLENGTHParserRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getEMSParserRuleCall_1_3()); }
	ruleEMS
{ after(grammarAccess.getNumberTermAccess().getEMSParserRuleCall_1_3()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getEXSParserRuleCall_1_4()); }
	ruleEXS
{ after(grammarAccess.getNumberTermAccess().getEXSParserRuleCall_1_4()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getANGLEParserRuleCall_1_5()); }
	ruleANGLE
{ after(grammarAccess.getNumberTermAccess().getANGLEParserRuleCall_1_5()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getTIMEParserRuleCall_1_6()); }
	ruleTIME
{ after(grammarAccess.getNumberTermAccess().getTIMEParserRuleCall_1_6()); }
)

    |(
{ before(grammarAccess.getNumberTermAccess().getFREQParserRuleCall_1_7()); }
	ruleFREQ
{ after(grammarAccess.getNumberTermAccess().getFREQParserRuleCall_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getIntegerTerminalRuleCall_0()); }
	RULE_INTEGER
{ after(grammarAccess.getNumAccess().getIntegerTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumAccess().getRealTerminalRuleCall_1()); }
	RULE_REAL
{ after(grammarAccess.getNumAccess().getRealTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LENGTH__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLENGTHAccess().getPxKeyword_1_0()); }

	'px' 

{ after(grammarAccess.getLENGTHAccess().getPxKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getCmKeyword_1_1()); }

	'cm' 

{ after(grammarAccess.getLENGTHAccess().getCmKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getMmKeyword_1_2()); }

	'mm' 

{ after(grammarAccess.getLENGTHAccess().getMmKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getInKeyword_1_3()); }

	'in' 

{ after(grammarAccess.getLENGTHAccess().getInKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getPtKeyword_1_4()); }

	'pt' 

{ after(grammarAccess.getLENGTHAccess().getPtKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getLENGTHAccess().getPcKeyword_1_5()); }

	'pc' 

{ after(grammarAccess.getLENGTHAccess().getPcKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ANGLE__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANGLEAccess().getDegKeyword_1_0()); }

	'deg' 

{ after(grammarAccess.getANGLEAccess().getDegKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getANGLEAccess().getRadKeyword_1_1()); }

	'rad' 

{ after(grammarAccess.getANGLEAccess().getRadKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getANGLEAccess().getGradKeyword_1_2()); }

	'grad' 

{ after(grammarAccess.getANGLEAccess().getGradKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TIME__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTIMEAccess().getMsKeyword_1_0()); }

	'ms' 

{ after(grammarAccess.getTIMEAccess().getMsKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getTIMEAccess().getSKeyword_1_1()); }

	's' 

{ after(grammarAccess.getTIMEAccess().getSKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FREQ__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFREQAccess().getHzKeyword_1_0()); }

	'hz' 

{ after(grammarAccess.getFREQAccess().getHzKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getFREQAccess().getKhzKeyword_1_1()); }

	'khz' 

{ after(grammarAccess.getFREQAccess().getKhzKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Media__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__0__Impl
	rule__Media__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMediaKeyword_0()); }

	'media' 

{ after(grammarAccess.getMediaAccess().getMediaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__1__Impl
	rule__Media__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMedialistAssignment_1()); }
(rule__Media__MedialistAssignment_1)
{ after(grammarAccess.getMediaAccess().getMedialistAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__2__Impl
	rule__Media__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__3__Impl
	rule__Media__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRulesetsAssignment_3()); }
(rule__Media__RulesetsAssignment_3)*
{ after(grammarAccess.getMediaAccess().getRulesetsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Media_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group__0__Impl
	rule__Media_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_0()); }
	rulemedium
{ after(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getGroup_1()); }
(rule__Media_list__Group_1__0)*
{ after(grammarAccess.getMedia_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Media_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group_1__0__Impl
	rule__Media_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getMedia_listAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_1_1()); }
	rulemedium
{ after(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ruleset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__0__Impl
	rule__Ruleset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
(rule__Ruleset__SelectorsAssignment_0)
{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__1__Impl
	rule__Ruleset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_1()); }
(rule__Ruleset__Group_1__0)*
{ after(grammarAccess.getRulesetAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__2__Impl
	rule__Ruleset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__3__Impl
	rule__Ruleset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_3()); }
(rule__Ruleset__Group_3__0)*
{ after(grammarAccess.getRulesetAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Ruleset__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__0__Impl
	rule__Ruleset__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_1()); }
(rule__Ruleset__SelectorsAssignment_1_1)
{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ruleset__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_3__0__Impl
	rule__Ruleset__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getDeclarationsAssignment_3_0()); }
(rule__Ruleset__DeclarationsAssignment_3_0)
{ after(grammarAccess.getRulesetAccess().getDeclarationsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getRulesetAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSimpleselectorsAssignment_0()); }
(rule__Selector__SimpleselectorsAssignment_0)
{ after(grammarAccess.getSelectorAccess().getSimpleselectorsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getAlternatives_1()); }
(rule__Selector__Alternatives_1)?
{ after(grammarAccess.getSelectorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__0__Impl
	rule__Selector__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_0_0()); }
(rule__Selector__CombinatorAssignment_1_0_0)
{ after(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorAssignment_1_0_1()); }
(rule__Selector__SelectorAssignment_1_0_1)
{ after(grammarAccess.getSelectorAccess().getSelectorAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__0__Impl
	rule__Selector__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
(	RULE_WS)
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
)
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
(	RULE_WS)*
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_1_1_1()); }
(rule__Selector__Group_1_1_1__0)?
{ after(grammarAccess.getSelectorAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1_1__0__Impl
	rule__Selector__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_1_1_0()); }
(rule__Selector__CombinatorAssignment_1_1_1_0)?
{ after(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorAssignment_1_1_1_1()); }
(rule__Selector__SelectorAssignment_1_1_1_1)
{ after(grammarAccess.getSelectorAccess().getSelectorAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_selector__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_selector__Group_0__0__Impl
	rule__Simple_selector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getElementAssignment_0_0()); }
(rule__Simple_selector__ElementAssignment_0_0)
{ after(grammarAccess.getSimple_selectorAccess().getElementAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_selector__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_selector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_0_1()); }
(rule__Simple_selector__SubSelectorsAssignment_0_1)*
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_class__Group__0__Impl
	rule__Css_class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_classAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getCss_classAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_class__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_classAccess().getIDENTTerminalRuleCall_1()); }
	RULE_IDENT
{ after(grammarAccess.getCss_classAccess().getIDENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_id__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_id__Group_0__0__Impl
	rule__Css_id__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_id__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_idAccess().getNumberSignKeyword_0_0()); }

	'#' 

{ after(grammarAccess.getCss_idAccess().getNumberSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_id__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_id__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_id__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_idAccess().getIDENTTerminalRuleCall_0_1()); }
	RULE_IDENT
{ after(grammarAccess.getCss_idAccess().getIDENTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_attrib__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group__0__Impl
	rule__Css_attrib__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getCss_attribAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_attrib__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group__1__Impl
	rule__Css_attrib__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getIDENTTerminalRuleCall_1()); }
	RULE_IDENT
{ after(grammarAccess.getCss_attribAccess().getIDENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_attrib__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group__2__Impl
	rule__Css_attrib__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getGroup_2()); }
(rule__Css_attrib__Group_2__0)?
{ after(grammarAccess.getCss_attribAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_attrib__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getCss_attribAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Css_attrib__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group_2__0__Impl
	rule__Css_attrib__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getAlternatives_2_0()); }
(rule__Css_attrib__Alternatives_2_0)
{ after(grammarAccess.getCss_attribAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_attrib__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_attrib__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_attrib__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_attribAccess().getAlternatives_2_1()); }
(rule__Css_attrib__Alternatives_2_1)
{ after(grammarAccess.getCss_attribAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_generic_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_generic_declaration__Group__0__Impl
	rule__Css_generic_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_generic_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_generic_declarationAccess().getPropertyAssignment_0()); }
(rule__Css_generic_declaration__PropertyAssignment_0)
{ after(grammarAccess.getCss_generic_declarationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_generic_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_generic_declaration__Group__1__Impl
	rule__Css_generic_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_generic_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_generic_declarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getCss_generic_declarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_generic_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_generic_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_generic_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_generic_declarationAccess().getExpressionAssignment_2()); }
(rule__Css_generic_declaration__ExpressionAssignment_2)
{ after(grammarAccess.getCss_generic_declarationAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Css_property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_property__Group__0__Impl
	rule__Css_property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_propertyAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getCss_propertyAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_property__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_propertyAccess().getIDENTTerminalRuleCall_1()); }
	RULE_IDENT
{ after(grammarAccess.getCss_propertyAccess().getIDENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_pseudo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_pseudo__Group__0__Impl
	rule__Css_pseudo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_pseudo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_pseudoAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getCss_pseudoAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_pseudo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_pseudo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_pseudo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_pseudoAccess().getIDENTTerminalRuleCall_1()); }
	RULE_IDENT
{ after(grammarAccess.getCss_pseudoAccess().getIDENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Combinator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Combinator__Group__0__Impl
	rule__Combinator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getAlternatives_0()); }
(rule__Combinator__Alternatives_0)
{ after(grammarAccess.getCombinatorAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Combinator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Combinator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)*
{ after(grammarAccess.getCombinatorAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__0__Impl
	rule__Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getTermGroupsAssignment_0()); }
(rule__Expr__TermGroupsAssignment_0)
{ after(grammarAccess.getExprAccess().getTermGroupsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getGroup_1()); }
(rule__Expr__Group_1__0)*
{ after(grammarAccess.getExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1__0__Impl
	rule__Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getOperatorParserRuleCall_1_0()); }
	ruleoperator
{ after(grammarAccess.getExprAccess().getOperatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getTermGroupsAssignment_1_1()); }
(rule__Expr__TermGroupsAssignment_1_1)
{ after(grammarAccess.getExprAccess().getTermGroupsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberTerm__Group__0__Impl
	rule__NumberTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTermAccess().getUnary_operatorParserRuleCall_0()); }
(	ruleunary_operator)?
{ after(grammarAccess.getNumberTermAccess().getUnary_operatorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTermAccess().getAlternatives_1()); }
(rule__NumberTerm__Alternatives_1)
{ after(grammarAccess.getNumberTermAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getFunctionAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
(rule__Function__NameAssignment_1)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getWSTerminalRuleCall_3()); }
(	RULE_WS)*
{ after(grammarAccess.getFunctionAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExpressionAssignment_4()); }
(rule__Function__ExpressionAssignment_4)
{ after(grammarAccess.getFunctionAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getWSTerminalRuleCall_5()); }
(	RULE_WS)*
{ after(grammarAccess.getFunctionAccess().getWSTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__URLType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__0__Impl
	rule__URLType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlKeyword_0()); }

	'url' 

{ after(grammarAccess.getURLTypeAccess().getUrlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__1__Impl
	rule__URLType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getURLTypeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__2__Impl
	rule__URLType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlAssignment_2()); }
(rule__URLType__UrlAssignment_2)
{ after(grammarAccess.getURLTypeAccess().getUrlAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PERCENTAGE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PERCENTAGE__Group__0__Impl
	rule__PERCENTAGE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PERCENTAGE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPERCENTAGEAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getPERCENTAGEAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PERCENTAGE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PERCENTAGE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PERCENTAGE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPERCENTAGEAccess().getPercentSignKeyword_1()); }

	'%' 

{ after(grammarAccess.getPERCENTAGEAccess().getPercentSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EMS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EMS__Group__0__Impl
	rule__EMS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EMS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEMSAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getEMSAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EMS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EMS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EMS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEMSAccess().getEmKeyword_1()); }

	'em' 

{ after(grammarAccess.getEMSAccess().getEmKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EXS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXS__Group__0__Impl
	rule__EXS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXSAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getEXSAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXSAccess().getExKeyword_1()); }

	'ex' 

{ after(grammarAccess.getEXSAccess().getExKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LENGTH__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LENGTH__Group__0__Impl
	rule__LENGTH__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LENGTH__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLENGTHAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getLENGTHAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LENGTH__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LENGTH__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LENGTH__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLENGTHAccess().getAlternatives_1()); }
(rule__LENGTH__Alternatives_1)
{ after(grammarAccess.getLENGTHAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ANGLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANGLE__Group__0__Impl
	rule__ANGLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ANGLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANGLEAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getANGLEAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ANGLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ANGLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ANGLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANGLEAccess().getAlternatives_1()); }
(rule__ANGLE__Alternatives_1)
{ after(grammarAccess.getANGLEAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TIME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TIME__Group__0__Impl
	rule__TIME__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TIME__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTIMEAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getTIMEAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TIME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TIME__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TIME__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTIMEAccess().getAlternatives_1()); }
(rule__TIME__Alternatives_1)
{ after(grammarAccess.getTIMEAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FREQ__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FREQ__Group__0__Impl
	rule__FREQ__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FREQ__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFREQAccess().getNumParserRuleCall_0()); }
	rulenum
{ after(grammarAccess.getFREQAccess().getNumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FREQ__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FREQ__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FREQ__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFREQAccess().getAlternatives_1()); }
(rule__FREQ__Alternatives_1)
{ after(grammarAccess.getFREQAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Stylesheet__RulesetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_0_0()); }
	ruleruleset{ after(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__MediaAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getMediaMediaParserRuleCall_1_0()); }
	rulemedia{ after(grammarAccess.getStylesheetAccess().getMediaMediaParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__MedialistAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMedialistMedia_listParserRuleCall_1_0()); }
	rulemedia_list{ after(grammarAccess.getMediaAccess().getMedialistMedia_listParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__RulesetsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRulesetsRulesetParserRuleCall_3_0()); }
	ruleruleset{ after(grammarAccess.getMediaAccess().getRulesetsRulesetParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
	ruleselector{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_1_0()); }
	ruleselector{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__DeclarationsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_3_0_0()); }
	rulecss_declaration{ after(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SimpleselectorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSimpleselectorsSimple_selectorParserRuleCall_0_0()); }
	rulesimple_selector{ after(grammarAccess.getSelectorAccess().getSimpleselectorsSimple_selectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__CombinatorAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); }
	rulecombinator{ after(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectorAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_1_0()); }
	ruleselector{ after(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__CombinatorAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0()); }
	rulecombinator{ after(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectorAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_1_1_0()); }
	ruleselector{ after(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__ElementAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getElementElement_nameParserRuleCall_0_0_0()); }
	ruleelement_name{ after(grammarAccess.getSimple_selectorAccess().getElementElement_nameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__SubSelectorsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsSub_selectorParserRuleCall_0_1_0()); }
	rulesub_selector{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsSub_selectorParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__SubSelectorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsSub_selectorParserRuleCall_1_0()); }
	rulesub_selector{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsSub_selectorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getIdCss_idParserRuleCall_0_0()); }
	rulecss_id{ after(grammarAccess.getSub_selectorAccess().getIdCss_idParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__ClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getClassCss_classParserRuleCall_1_0()); }
	rulecss_class{ after(grammarAccess.getSub_selectorAccess().getClassCss_classParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__AttribAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getAttribCss_attribParserRuleCall_2_0()); }
	rulecss_attrib{ after(grammarAccess.getSub_selectorAccess().getAttribCss_attribParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sub_selector__PseudoclassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSub_selectorAccess().getPseudoclassCss_pseudoParserRuleCall_3_0()); }
	rulecss_pseudo{ after(grammarAccess.getSub_selectorAccess().getPseudoclassCss_pseudoParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_generic_declaration__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_generic_declarationAccess().getPropertyCss_propertyParserRuleCall_0_0()); }
	rulecss_property{ after(grammarAccess.getCss_generic_declarationAccess().getPropertyCss_propertyParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_generic_declaration__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_generic_declarationAccess().getExpressionExprParserRuleCall_2_0()); }
	ruleexpr{ after(grammarAccess.getCss_generic_declarationAccess().getExpressionExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__TermGroupsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getTermGroupsTermGroupParserRuleCall_0_0()); }
	ruletermGroup{ after(grammarAccess.getExprAccess().getTermGroupsTermGroupParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__TermGroupsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getTermGroupsTermGroupParserRuleCall_1_1_0()); }
	ruletermGroup{ after(grammarAccess.getExprAccess().getTermGroupsTermGroupParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TermGroup__TermsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermGroupAccess().getTermsTermParserRuleCall_0()); }
	ruleterm{ after(grammarAccess.getTermGroupAccess().getTermsTermParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__NumberAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getNumberNumberTermParserRuleCall_0_0()); }
	rulenumberTerm{ after(grammarAccess.getTermAccess().getNumberNumberTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__StringValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getStringValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getTermAccess().getStringValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__IdentifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getIdentifierCss_propertyParserRuleCall_2_0()); }
	rulecss_property{ after(grammarAccess.getTermAccess().getIdentifierCss_propertyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__UrlAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getUrlURLTypeParserRuleCall_3_0()); }
	ruleURLType{ after(grammarAccess.getTermAccess().getUrlURLTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FunctionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFunctionFunctionParserRuleCall_4_0()); }
	rulefunction{ after(grammarAccess.getTermAccess().getFunctionFunctionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__HexColorAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getHexColorHexColorParserRuleCall_5_0()); }
	ruleHexColor{ after(grammarAccess.getTermAccess().getHexColorHexColorParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getFunctionAccess().getNameIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExpressionExprParserRuleCall_4_0()); }
	ruleexpr{ after(grammarAccess.getFunctionAccess().getExpressionExprParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__UrlAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getURLTypeAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTEGER : ('0'..'9')+;

RULE_REAL : ('0'..'9')* '.' ('0'..'9')+;

RULE_HEXDIGITS : '#' ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_IDENT : ('_'|'a'..'z'|'A'..'Z') ('_'|'-'|'a'..'z'|'A'..'Z'|'0'..'9')*;

RULE_COMMA : ',';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_INCLUDES : '~=';

RULE_DASHMATCH : '|=';


